<!DOCTYPE html> 
<html> 
<head> <title>KaSim &#x0026; KaSa reference manual
(release 3.90)</title> 
<meta charset="UTF-8" /> 
<meta name="generator" content="TeX4ht (http://www.cse.ohio-state.edu/~gurari/TeX4ht/)" /> 
<link rel="stylesheet" type="text/css" href="KaSim_manual.css" /> 
<script type="text/x-mathjax-config"> MathJax.Hub.Config({ extensions: ["tex2jax.js"], jax: ["input/TeX", "output/HTML-CSS"], tex2jax: { inlineMath: [ ['$','$'], ["\\(","\\)"] ], displayMath: [ ['$$','$$'], ["\\[","\\]"] ], processEscapes: true }, "HTML-CSS": { availableFonts: ["TeX"] } }); </script> <script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"> </script><style type="text/css"> .MathJax_MathML {text-indent: 0;} </style></head><body 
>
<div class="maketitle">
                                                                                  

                                                                                  
                                                                                  

                                                                                  
                                                                                  

                                                                                  

<h2 class="titleHead">KaSim &#x0026; KaSa reference manual<br />
(release 3.90)</h2>
 <div class="author" ><span 
class="ecrm-1200">Pierre Boutillier, J</span><span 
class="ecrm-1200">é</span><span 
class="ecrm-1200">r</span><span 
class="ecrm-1200">ô</span><span 
class="ecrm-1200">me Feret, Jean Krivine</span><span class="thank-mark"><a 
href="#tk-1"><!--l. 85--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-bin">&lowast;</mo></math></a></span> <span 
class="ecrm-1200">and L</span><span 
class="ecrm-1200">ý</span> <span 
class="ecrm-1200">Kim Quy</span><span 
class="ecrm-1200">ê</span><span 
class="ecrm-1200">n</span>
<br />                                                                   <a 
href="http://www.kappalanguage.org" ><span 
class="ecrm-1200">KappaLanguage.org</span></a></div>
<br />
<div class="date" ></div>
<div class="thanks" ><br /><a 
 id="tk-1"></a><span class="thank-mark"><!--l. 85--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-bin">&lowast;</mo></math></span>corresponding
author: jean.krivine@pps.univ-paris-diderot.fr</div>
                                                                                  

                                                                                  
</div>
                                                                                  

                                                                                  
<h2 class="likechapterHead"><a 
 id="x1-1000"></a>Contents</h2> <div class="tableofcontents">
<span class="chapterToc" >1 <a 
href="#x1-30001" id="QQ2-1-3">Introduction</a></span>
<br /> <span class="sectionToc" >1.1 <a 
href="#x1-40001.1" id="QQ2-1-4">Preamble</a></span>
<br /> <span class="sectionToc" >1.2 <a 
href="#x1-50001.2" id="QQ2-1-5">The <span 
class="ecss-1095">KaSim</span> engine</a></span>
<br /> <span class="sectionToc" >1.3 <a 
href="#x1-60001.3" id="QQ2-1-7">The <span 
class="ecss-1095">KaSa</span> static analyser</a></span>
<br /> <span class="sectionToc" >1.4 <a 
href="#x1-70001.4" id="QQ2-1-8">Support</a></span>
<br /><span class="chapterToc" >2 <a 
href="#x1-80002" id="QQ2-1-9">Installation</a></span>
<br /> <span class="sectionToc" >2.1 <a 
href="#x1-90002.1" id="QQ2-1-10">Using precompiled binaries</a></span>
<br /> <span class="sectionToc" >2.2 <a 
href="#x1-100002.2" id="QQ2-1-11">Obtaining the sources</a></span>
<br /> <span class="sectionToc" >2.3 <a 
href="#x1-110002.3" id="QQ2-1-12">Compilation</a></span>
<br /> <span class="sectionToc" >2.4 <a 
href="#x1-120002.4" id="QQ2-1-13">Compilation of KaSa graphical interface</a></span>
<br /><span class="chapterToc" >3 <a 
href="#x1-130003" id="QQ2-1-14">The kappa language</a></span>
<br /> <span class="sectionToc" >3.1 <a 
href="#x1-140003.1" id="QQ2-1-15">General structure</a></span>
<br /> <span class="sectionToc" >3.2 <a 
href="#x1-150003.2" id="QQ2-1-16">Agent and token signatures</a></span>
<br /> <span class="sectionToc" >3.3 <a 
href="#x1-160003.3" id="QQ2-1-18">Sited-graph pattern: Kappa expression</a></span>
<br />  <span class="subsectionToc" >3.3.1 <a 
href="#x1-170003.3.1" id="QQ2-1-19">Graph syntax</a></span>
<br />  <span class="subsectionToc" >3.3.2 <a 
href="#x1-190003.3.2" id="QQ2-1-21">Pattern syntax</a></span>
<br />  <span class="subsectionToc" >3.3.3 <a 
href="#x1-200003.3.3" id="QQ2-1-23">Link type</a></span>
<br /> <span class="sectionToc" >3.4 <a 
href="#x1-220003.4" id="QQ2-1-25">Rules</a></span>
<br />  <span class="subsectionToc" >3.4.1 <a 
href="#x1-230003.4.1" id="QQ2-1-28">Pure rules</a></span>
<br />  <span class="subsectionToc" >3.4.2 <a 
href="#x1-270003.4.2" id="QQ2-1-32">Hybrid rules</a></span>
<br />  <span class="subsectionToc" >3.4.3 <a 
href="#x1-280003.4.3" id="QQ2-1-33">Rates</a></span>
                                                                                  

                                                                                  
<br />  <span class="subsectionToc" >3.4.4 <a 
href="#x1-290003.4.4" id="QQ2-1-35">Ambiguous molecularity</a></span>
<br /> <span class="sectionToc" >3.5 <a 
href="#x1-300003.5" id="QQ2-1-37">Variables</a></span>
<br /> <span class="sectionToc" >3.6 <a 
href="#x1-310003.6" id="QQ2-1-40">Initial conditions</a></span>
<br /><span class="chapterToc" >4 <a 
href="#x1-320004" id="QQ2-1-41">The command line</a></span>
<br /> <span class="sectionToc" >4.1 <a 
href="#x1-330004.1" id="QQ2-1-42">General usage</a></span>
<br /> <span class="sectionToc" >4.2 <a 
href="#x1-340004.2" id="QQ2-1-43">Main options</a></span>
<br /> <span class="sectionToc" >4.3 <a 
href="#x1-350004.3" id="QQ2-1-45">Advanced options</a></span>
<br /> <span class="sectionToc" >4.4 <a 
href="#x1-360004.4" id="QQ2-1-47">Example</a></span>
<br /><span class="chapterToc" >5 <a 
href="#x1-370005" id="QQ2-1-48">A simple model</a></span>
<br /> <span class="sectionToc" >5.1 <a 
href="#x1-380005.1" id="QQ2-1-49">ABC.ka</a></span>
<br /> <span class="sectionToc" >5.2 <a 
href="#x1-390005.2" id="QQ2-1-50">Some runs</a></span>
<br /><span class="chapterToc" >6 <a 
href="#x1-400006" id="QQ2-1-52">Advanced concepts</a></span>
<br /> <span class="sectionToc" >6.1 <a 
href="#x1-410006.1" id="QQ2-1-53">Perturbation language</a></span>
<br />  <span class="subsectionToc" >6.1.1 <a 
href="#x1-420006.1.1" id="QQ2-1-55">Adding or deleting agents during a simulation</a></span>
<br />  <span class="subsectionToc" >6.1.2 <a 
href="#x1-430006.1.2" id="QQ2-1-57">Using snapshots to deﬁne a new initial state</a></span>
<br />  <span class="subsectionToc" >6.1.3 <a 
href="#x1-440006.1.3" id="QQ2-1-58">Changing the value of a token</a></span>
<br />  <span class="subsectionToc" >6.1.4 <a 
href="#x1-450006.1.4" id="QQ2-1-59">Causality analysis</a></span>
<br />  <span class="subsectionToc" >6.1.5 <a 
href="#x1-470006.1.5" id="QQ2-1-62">Flux maps</a></span>
<br />  <span class="subsectionToc" >6.1.6 <a 
href="#x1-480006.1.6" id="QQ2-1-64">Updating kinetic rates on the ﬂy</a></span>
<br />  <span class="subsectionToc" >6.1.7 <a 
href="#x1-490006.1.7" id="QQ2-1-65">Combining several eﬀects in a single perturbation</a></span>
<br />  <span class="subsectionToc" >6.1.8 <a 
href="#x1-500006.1.8" id="QQ2-1-66">Printing values during a simulation</a></span>
<br />  <span class="subsectionToc" >6.1.9 <a 
href="#x1-510006.1.9" id="QQ2-1-67">Add an entry in the output data</a></span>
<br /> <span class="sectionToc" >6.2 <a 
href="#x1-520006.2" id="QQ2-1-68">Implicit signature</a></span>
<br /> <span class="sectionToc" >6.3 <a 
href="#x1-530006.3" id="QQ2-1-69">Simulation packages</a></span>
<br /> <span class="sectionToc" >6.4 <a 
href="#x1-540006.4" id="QQ2-1-70">Simulation parameters conﬁguration</a></span>
<br /><span class="chapterToc" >7 <a 
href="#x1-550007" id="QQ2-1-72">The <span 
class="ecss-1095">KaSa</span> static analyser</a></span>
<br /> <span class="sectionToc" >7.1 <a 
href="#x1-560007.1" id="QQ2-1-73">General usage</a></span>
                                                                                  

                                                                                  
<br /> <span class="sectionToc" >7.2 <a 
href="#x1-570007.2" id="QQ2-1-74">Graphical interface</a></span>
<br />  <span class="subsectionToc" >7.2.1 <a 
href="#x1-580007.2.1" id="QQ2-1-75">Launching the interface</a></span>
<br />  <span class="subsectionToc" >7.2.2 <a 
href="#x1-590007.2.2" id="QQ2-1-77">The areas of interests</a></span>
<br />  <span class="subsectionToc" >7.2.3 <a 
href="#x1-600007.2.3" id="QQ2-1-78">The onglet <span 
class="ectt-1095">0_Actions</span></a></span>
<br />  <span class="subsectionToc" >7.2.4 <a 
href="#x1-610007.2.4" id="QQ2-1-79">The onglet <span 
class="ectt-1095">1_Output</span></a></span>
<br /> <span class="sectionToc" >7.3 <a 
href="#x1-620007.3" id="QQ2-1-81">Reachability analysis</a></span>
<br /> <span class="sectionToc" >7.4 <a 
href="#x1-630007.4" id="QQ2-1-89">Contact map</a></span>
<br /> <span class="sectionToc" >7.5 <a 
href="#x1-640007.5" id="QQ2-1-92">Inﬂuence map</a></span>
<br /><span class="chapterToc" >8 <a 
href="#x1-650008" id="QQ2-1-96">Frequently asked questions</a></span>
</div>
                                                                                  

                                                                                  
                                                                                  

                                                                                  
<h2 class="likechapterHead"><a 
 id="x1-2000"></a>List of Tables</h2><div class="tableofcontents"><span class="lotToc" >3.1 <a 
href="#x1-150071">Agent signatureexpression</a></span><br /><span class="lotToc" >3.2 <a 
href="#x1-190022">Kappa expressions</a></span><br /><span class="lotToc" >3.3 <a 
href="#x1-220113">Rate
expressions</a></span><br /><span class="lotToc" >3.4 <a 
href="#x1-220134">Token expressions</a></span><br /><span class="lotToc" >3.5 <a 
href="#x1-280065">Example of kinetic rates.</a></span><br /><span class="lotToc" >3.6 <a 
href="#x1-300036">Algebraic
expressions</a></span><br /><span class="lotToc" >3.7 <a 
href="#x1-300047">Symbol usable in algebraic expressions</a></span><br /><span class="lotToc" >4.1 <a 
href="#x1-340011">Command
line: main options</a></span><br /><span class="lotToc" >4.2 <a 
href="#x1-350012">Command line: advanced options</a></span><br /><span class="lotToc" >6.1 <a 
href="#x1-410071">Perturbation
expressions</a></span><br /><span class="lotToc" >6.2 <a 
href="#x1-540022">User deﬁned parameters</a></span><br />
</div>
                                                                                  

                                                                                  
<!--l. 95--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 1</span><br /><a 
 id="x1-30001"></a>Introduction</h2>
<div class="center" 
>
<!--l. 96--><p class="noindent" >
<!--l. 96--><p class="noindent" ><img 
src="Ka0x.png" alt="PIC" class="graphics" width="256.0748pt" height="136.58414pt" ><!--tex4ht:graphics  
name="Ka0x.png" src="img/KaSim-Logo.pdf"  
--></div>
<h3 class="sectionHead"><span class="titlemark">1.1   </span> <a 
 id="x1-40001.1"></a>Preamble</h3>
<!--l. 99--><p class="noindent" >This manual describes the usage of <span 
class="ecss-1095">KaSim</span> and <span 
class="ecss-1095">KaSa</span>, the latest implementation of Kappa, one
member of the growing family of rule-based languages. Rule-based modelling has attracted recent
attention in developing biological models that are concise, comprehensible, easily extensible, and
allows one to deal with the combinatorial complexity of multi-state and multi-component
biological molecules. Although this manual contains a self-contained description of Kappa, it is
<span 
class="ecti-1095">not </span>intended as a tutorial on rule-based modeling.
<!--l. 103--><p class="noindent" >To get an idea of how Kappa is used in a modeling context, the reader can consult the following
note <a 
href="http://www.pps.univ-paris-diderot.fr/~danos/pdf/eov.pdf" >Agile modelling of cellular signalling (SOS&#x2019;08)</a>. A longer article, expounding on causal
analysis is also available: <a 
href="http://www.pps.univ-paris-diderot.fr/~danos/pdf/ka-fix.pdf" >Rule-based modelling of cellular signalling (CONCUR&#x2019;07)</a>. See
also this tutorial: <a 
href="http://www.pps.univ-paris-diderot.fr/~danos/pdf/mytdg.pdf" >Modelling epigenetic information maintenance: a Kappa tutorial
(CAV&#x2019;09)</a>.
<!--l. 108--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">1.2   </span> <a 
 id="x1-50001.2"></a>The <span 
class="ecss-1095">KaSim</span> engine</h3>
<!--l. 109--><p class="noindent" ><span 
class="ecss-1095">KaSim</span> is an open source stochastic simulator of rule-based models <span class="cite">[<a 
href="#XDanLan04">7</a>, <a 
href="#XDan_etal07a">6</a>, <a 
href="#XFae_etal05">8</a>]</span> written in Kappa.
The Kappa language describes site graphs and their local transformations. <span 
class="ecss-1095">KaSim</span> takes one or
several <a 
href="#x1-130003">Kappa ﬁles</a> as input and generates stochastic trajectories of various observables.
                                                                                  

                                                                                  
<span 
class="ecss-1095">KaSim</span> implements Danos <span 
class="ecti-1095">et al</span>&#x2019;s implicit state simulation algorithm <span class="cite">[<a 
href="#XDan_etal07b">4</a>]</span> which adapts Gillespie&#x2019;s
algorithm <span class="cite">[<a 
href="#XGil76">11</a>, <a 
href="#XGil77">12</a>]</span> to rule-based models.
<!--l. 111--><p class="noindent" >A <span 
class="ecti-1095">simulation event</span><a 
 id="dx1-5001"></a> corresponds to the application of a rewriting rule, contained in the Kappa
ﬁles, to the current graph<a 
 id="dx1-5002"></a> (also called a <span 
class="ecti-1095">mixture</span><a 
 id="dx1-5003"></a>). At each step, the next event is selected with a
probability which is proportional to the rate<a 
 id="dx1-5004"></a> of the rule it is an event of. If there are no
events, that is to say if none of the rules apply to the current state of the system, one
has a <span 
class="ecti-1095">deadlock</span>. Note that a given rule will in general apply in many diﬀerent ways;
one says it has many instances. The <span 
class="ecti-1095">activity</span><a 
 id="dx1-5005"></a> of a rule is the number of its instances
in the current mixture<a 
 id="dx1-5006"></a> multiplied by its rate. The probability that the next event is
associated to a given rule is therefore proportional to the activity of the rule. Rule activities<a 
 id="dx1-5007"></a>
are updated at each step (see Fig. <a 
href="#x1-50081">1.1<!--tex4ht:ref: fig:event-loop --></a>). Importantly, the cost of a simulation event
is bounded by a constant that is independent of the size of the graph it is applied
to <span class="cite">[<a 
href="#XDan_etal07b">4</a>]</span>.
<!--l. 121--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-50081"></a>
                                                                                  

                                                                                  
<div class="center" 
>
<!--l. 122--><p class="noindent" >

<!--l. 123--><p class="noindent" ><img 
src="img/event-loop.png" alt="PIC"  
>
<br /> <div class="caption" 
><span class="id">Figure 1.1: </span><span  
class="content">The event loop</span></div><!--tex4ht:label?: x1-50081 -->
</div>
                                                                                  

                                                                                  
<!--l. 127--><p class="noindent" ></div><hr class="endfigure">
<!--l. 129--><p class="noindent" >Note that <span 
class="ecss-1095">KaSim</span> can only render curves in the svg format. However, data outputs
given in a text format can be displayed using any standard plotting software such as
<a 
href="http://www.gnuplot.info/" >gnuplot</a>.
<h3 class="sectionHead"><span class="titlemark">1.3   </span> <a 
 id="x1-60001.3"></a>The <span 
class="ecss-1095">KaSa</span> static analyser</h3>
<!--l. 133--><p class="noindent" ><span 
class="ecss-1095">KaSa</span> is an open source static analyser tool of rule-based models <span class="cite">[<a 
href="#XDanLan04">7</a>, <a 
href="#XDan_etal07a">6</a>, <a 
href="#XFae_etal05">8</a>]</span> written in Kappa.
<span 
class="ecss-1095">KaSa</span> takes one or several <a 
href="#x1-130003">Kappa ﬁles</a> as input and some command line options to toggle on/oﬀ
some speciﬁc static analysis. Currently, <span 
class="ecss-1095">KaSa</span> can compute the contact map and the inﬂuence
map. It can perform reachability analysis <span class="cite">[<a 
href="#XFeret-ICCMSE2007">9</a>, <a 
href="#XDanosEtAl-VMCAI08">5</a>]</span> as well. Other analyses including model reduction
<span class="cite">[<a 
href="#XFeret-et-al-pnas2009">10</a>, <a 
href="#XDanosEtAl-LICS2010">3</a>, <a 
href="#XFeret-MFPSXXVII">1</a>]</span> will come soon.
<!--l. 135--><p class="noindent" >A graphical interface is proposed to navigate through the various options and utilities of <span 
class="ecss-1095">KaSa</span>.
The compilation of this interface requires <a 
href="https://forge.ocamlcore.org/projects/labltk/" >labltk</a> and, in particular, <a 
href="http://www.tcl.tk/" >tk-dev</a>.
<!--l. 138--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">1.4   </span> <a 
 id="x1-70001.4"></a>Support</h3>
     <ul class="itemize1">
     <li class="itemize">Kappa language tutorials and downloads: <a 
href="http://kappalanguage.org" class="url" ><span 
class="ectt-1095">http://kappalanguage.org</span></a>
     </li>
     <li class="itemize">Bug           reports           should           be           posted           on           github:
     <a 
href="https://github.com/Kappa-Dev/KaSim/issues" class="url" ><span 
class="ectt-1095">https://github.com/Kappa-Dev/KaSim/issues</span></a>
     </li>
     <li class="itemize">Questions       and       answers       on       the       kappa-user       mailing       list:
     <a 
href="http://groups.google.com/group/kappa-users" class="url" ><span 
class="ectt-1095">http://groups.google.com/group/kappa-users</span></a>
     </li>
     <li class="itemize">Want to contribute to the project? <span 
class="ectt-1095">jean.krivine@pps.univ-paris-diderot.fr</span></li></ul>
                                                                                  

                                                                                  
<!--l. 146--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 2</span><br /><a 
 id="x1-80002"></a>Installation</h2>
<h3 class="sectionHead"><span class="titlemark">2.1   </span> <a 
 id="x1-90002.1"></a>Using precompiled binaries</h3>
<!--l. 149--><p class="noindent" >The easiest way to use <span 
class="ecss-1095">KaSim</span> and <span 
class="ecss-1095">KaSa</span> is to use pre-compiled versions available in the release
section on the github repository (<a 
href="https://github.com/Kappa-Dev/KaSim/releases" class="url" ><span 
class="ectt-1095">https://github.com/Kappa-Dev/KaSim/releases</span></a>).
Download the version that corresponds to your operating system (Windows, Linux or
Mac OSX) and rename the downloaded ﬁle into <span 
class="ecss-1095">KaSim</span> and <span 
class="ecss-1095">KaSa</span>. Note that on Mac
OSX or Linux, it might be necessary to give executable permissions to <span 
class="ecss-1095">KaSim</span> and
<span 
class="ecss-1095">KaSa</span>. This can be done using the shell commands: <span 
class="ectt-1095">chmod u+x KaSim </span>and <span 
class="ectt-1095">chmod u+x</span>
<span 
class="ectt-1095">KaSa</span>
<!--l. 152--><p class="noindent" >To test whether your program does work, simply type <span 
class="ectt-1095">./KaSim --version </span>on a terminal, from
the directory that contains the binaries. If the version is displayed it means that the binaries are
indeed compatible with your OS. Otherwise you may need to compile <span 
class="ecss-1095">KaSim</span> from the sources
(see next Section).
<!--l. 154--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">2.2   </span> <a 
 id="x1-100002.2"></a>Obtaining the sources</h3>
<!--l. 155--><p class="noindent" >To obtain <span 
class="ecss-1095">KaSim</span>/<span 
class="ecss-1095">KaSa</span> you can either use pre-compiled binaries (see previous section) or compile
the sources for your architecture by yourself.
<!--l. 159--><p class="noindent" >To do so, download the source code from <a 
href="https://github.com/Kappa-Dev/KaSim" class="url" ><span 
class="ectt-1095">https://github.com/Kappa-Dev/KaSim</span></a>, make sure you
have a recent OCaml compiler (<span 
class="ecss-1095">KaSim</span>/<span 
class="ecss-1095">KaSa</span> currently requires Ocaml 4.01.0 to compile) and the
ﬁndlib library installed.
<!--l. 164--><p class="noindent" >You can check if it is the case from a terminal window by typing <span 
class="ectt-1095">ocamlfind ocamlopt -v</span>. If it
fails or prints a version number too old, then you need to install Ocaml Native compiler that can
be downloaded from <a 
href="http://caml.inria.fr/download.en.html" class="url" ><span 
class="ectt-1095">http://caml.inria.fr/download.en.html</span></a> and/or ﬁndlib available at
<a 
href="http://projects.camlcity.org/projects/findlib.html" class="url" ><span 
class="ectt-1095">http://projects.camlcity.org/projects/findlib.html</span></a>.
<!--l. 171--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">2.3   </span> <a 
 id="x1-110002.3"></a>Compilation</h3>
<!--l. 172--><p class="noindent" >Once OCaml is safely installed, untar <span 
class="ecss-1095">KaSim</span> archive and compile following these few
                                                                                  

                                                                                  
steps:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">tar xzvf kasim.tar.gz -d Kappa</span>
     </li>
     <li class="itemize"><span 
class="ectt-1095">cd Kappa</span>
     </li>
     <li class="itemize"><span 
class="ectt-1095">make bin/KaSim</span>
     </li>
     <li class="itemize"><span 
class="ectt-1095">make bin/KaSa</span></li></ul>
<!--l. 179--><p class="noindent" >At the end of these steps you should see, in the <span 
class="ectt-1095">bin </span>directory of the <span 
class="ectt-1095">Kappa </span>directory, an
executable ﬁle named KaSim. In order to check the compilation went ﬁne, simply type <span 
class="ectt-1095">bin/KaSim</span>
<span 
class="ectt-1095">--version</span>.
<!--l. 184--><p class="noindent" >If the tool <span 
class="ectt-1095">ocamlbuild </span>is not in your path, you may set the variable <span 
class="ectt-1095">OCAMLBINPATH </span>to point
to the location of the compiler by doing <span 
class="ectt-1095">make OCAMLBINPATH=&#x2019;the_correct_dir&#x2019;</span>
<span 
class="ectt-1095">bin/KaSim</span>.
<!--l. 188--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">2.4   </span> <a 
 id="x1-120002.4"></a>Compilation of KaSa graphical interface</h3>
<!--l. 190--><p class="noindent" >The graphical interface of <span 
class="ecss-1095">KaSa</span> requires <a 
href="http://www.tcl.tk/" >tk-dev</a> and <a 
href="https://forge.ocamlcore.org/projects/labltk/" >labltk</a>. By default, the graphical interface is
not compiled. The compilation of this interface can be toggled on by using the following
script:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">cd Kappa</span>
     </li>
     <li class="itemize"><span 
class="ectt-1095">make USE_TK=1 bin/KaSa</span></li></ul>
<!--l. 195--><p class="noindent" >Common compilation errors are the following:
     <ol  class="enumerate1" >
     <li 
  class="enumerate" id="x1-12002x1">The following error:
                                                                                  

                                                                                  
     <div class="verbatim" id="verbatim-1">
     /usr/bin/ld: cannot find -ltk
      <br />collect2: error: ld returned 1 exit status
      <br />File &#x0022;caml_startup&#x0022;, line 1:
      <br />Error: Error during linking
      <br />Command exited with code 2.</div>
     <!--l. 205--><p class="nopar" >
     <!--l. 207--><p class="noindent" >occurs when the module <a 
href="http://www.tcl.tk/" >tk-dev</a> is not installed.
     </li>
     <li 
  class="enumerate" id="x1-12004x2">The following error:
                                                                                  

                                                                                  
     <div class="verbatim" id="verbatim-2">
     File &#x0022;_none_&#x0022;, line 1:
      <br />Error: Cannot find file jpflib.cmxa
      <br />Command exited with code 2.</div>
     <!--l. 214--><p class="nopar" >
     <!--l. 216--><p class="noindent" >occurs when ocaml cannot link the labltk library.
     <!--l. 218--><p class="noindent" >Please document the variable <span 
class="ectt-1095">LABLTKLIBREP </span>in the Makeﬁle.
     </li></ol>
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 3</span><br /><a 
 id="x1-130003"></a>The kappa language</h2>
<h3 class="sectionHead"><span class="titlemark">3.1   </span> <a 
 id="x1-140003.1"></a>General structure</h3>
<!--l. 225--><p class="noindent" >A model is represented in Kappa by a set of <span 
class="ecti-1095">Kappa File</span>. We use KF<a 
 id="dx1-14001"></a> to denote the union of the
ﬁles that are given as input (to either <span 
class="ecss-1095">KaSim</span> or <span 
class="ecss-1095">KaSa</span>).
<!--l. 229--><p class="noindent" >Each line of the KF<a 
 id="dx1-14002"></a> is interpreted as a <span 
class="ecti-1095">declaration</span><a 
 id="dx1-14003"></a> except if the line ends by the <span 
class="tcrm-1095">'</span>
<!--l. 231--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-bin">∖</mo></math><span 
class="tcrm-1095">' </span>character.
Therefore, in order to write a declaration<a 
 id="dx1-14004"></a> on several lines, ends every by the last of the lines with a
<!--l. 234--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-bin">∖</mo></math>.
<!--l. 236--><p class="noindent" >Declarations can be: agent and token <span 
class="ecti-1095">signatures </span>(Sec. <a 
href="#x1-150003.2">3.2<!--tex4ht:ref: sec:sig --></a>), <span 
class="ecti-1095">rules</span><a 
 id="dx1-14005"></a> (Sec. <a 
href="#x1-220003.4">3.4<!--tex4ht:ref: sec:rules --></a>), <span 
class="ecti-1095">variables</span><a 
 id="dx1-14006"></a> (Sec. <a 
href="#x1-300003.5">3.5<!--tex4ht:ref: sec:var --></a>),
<span 
class="ecti-1095">initial conditions</span><a 
 id="dx1-14007"></a> (Sec. <a 
href="#x1-310003.6">3.6<!--tex4ht:ref: sec:init --></a>), <span 
class="ecti-1095">perturbations</span><a 
 id="dx1-14008"></a> (Sec. <a 
href="#x1-410006.1">6.1<!--tex4ht:ref: sec:mod --></a>) and <span 
class="ecti-1095">parameter conﬁgurations</span>
(Sec. <a 
href="#x1-540006.4">6.4<!--tex4ht:ref: sec:param --></a>).
<!--l. 243--><p class="noindent" >The KF<a 
 id="dx1-14009"></a>&#x2019;s structure is quite ﬂexible. Neither dividing into several sub-ﬁles nor the order of
declaration<a 
 id="dx1-14010"></a>s matters (to the exception of variable declaration<a 
 id="dx1-14011"></a>s, see Section <a 
href="#x1-300003.5">3.5<!--tex4ht:ref: sec:var --></a> for
details).
<!--l. 249--><p class="noindent" >Comments<a 
 id="dx1-14012"></a> can be used either by inserting the marker <span 
class="ectt-1095"># </span>that tells <span 
class="ecss-1095">KaSim</span> to ignore the rest of the
line or by putting any text between the delimiters <span 
class="ectt-1095">/* </span>and <span 
class="ectt-1095">*/</span>. The combined use of
<!--l. 252--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-bin">∖</mo></math> and <span 
class="ectt-1095">#</span>
is an alternative way to write comments in the middle of a declaration<a 
 id="dx1-14013"></a>.
<!--l. 255--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">3.2   </span> <a 
 id="x1-150003.2"></a>Agent and token signatures</h3>
<a 
 id="dx1-15001"></a>
<!--l. 257--><p class="noindent" >In Kappa there are two entities that can be used for representing biological elements: <span 
class="ecti-1095">agents</span><a 
 id="dx1-15002"></a> and
<span 
class="ecti-1095">tokens</span><a 
 id="dx1-15003"></a>. Agents are used to represent complex molecules that may bind to other molecules on
speciﬁc sites. Tokens are typically used to represent small particles such as ions, ATP, etc.
Tokens cannot bind to each other, they can only appear or disappear. In a given model,
agents always have a discrete number of instances while tokens may have a continuous
concentration.
<!--l. 266--><p class="noindent" >In order to use agents or tokens in a model, one needs to declare them ﬁrst. <span 
class="ecti-1095">Agent signatures</span><a 
 id="dx1-15004"></a>
constitute a form of typing information about the agents that are used in the model. It
contains information about the name and number of interaction sites the agent has, and
about their possible internal states. A signature<a 
 id="dx1-15005"></a> is declared in the KF<a 
 id="dx1-15006"></a> by the following
                                                                                  

                                                                                  
line:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%agent:  </span><span 
class="ecti-1095">signature_expression</span></li></ul>
<!--l. 273--><p class="noindent" >according to the grammar given Table <a 
href="#x1-150071">3.1<!--tex4ht:ref: tab:sig --></a> where terminal symbols are written in (blue) typed font,
and <!--l. 275--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>𝜀</mi></math>
stands for the empty list. An identiﬁer <span 
class="ectt-1095">Id </span>can be any string generated by a regular expression of the
type <!--l. 277--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>a</mi><mi 
>-</mi><mi 
>z</mi><mspace width="1em" class="nbsp" /><mi 
>A</mi><mi 
>-</mi><mi 
>Z</mi></mrow><mo 
class="MathClass-close">]</mo></mrow><msup><mrow 
><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>a</mi><mi 
>-</mi><mi 
>z</mi><mspace width="1em" class="nbsp" /><mi 
>A</mi><mi 
>-</mi><mi 
>Z</mi><mspace width="1em" class="nbsp" /><mn>0</mn><mi 
>-</mi><mn>9</mn><mspace width="1em" class="nbsp" /><mstyle 
class="text"><mtext  >_</mtext></mstyle><mspace width="1em" class="nbsp" /> <mo 
class="MathClass-bin">&minus;</mo><mspace width="1em" class="nbsp" /><mo 
class="MathClass-bin">+</mo></mrow><mo 
class="MathClass-close">]</mo></mrow></mrow><mrow 
><mo 
class="MathClass-bin">&lowast;</mo></mrow></msup 
></math>.
<div class="table">
<!--l. 280--><p class="noindent" ><a 
 id="x1-150071"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.1: </span><span  
class="content">Agent signatureexpression</span></div><!--tex4ht:label?: x1-150071 -->
<div class="tabular"> <table id="TBL-2" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-2-1g"><col 
id="TBL-2-1"><col 
id="TBL-2-2"><col 
id="TBL-2-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-2-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-2-1-1"  
class="td01"><span 
class="ecti-1095">signature_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-2-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-2-1-3"  
class="td10"> <span id="textcolor1"><span 
class="ectt-1095">Id</span></span><span id="textcolor2"><span 
class="ectt-1095">(</span></span><span 
class="ecti-1095">sig</span><span id="textcolor3"><span 
class="ectt-1095">)</span></span>                                                                                              </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-2-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-2-2-1"  
class="td01"><span 
class="ecti-1095">sig                         </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-2-2-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-2-2-3"  
class="td10"> <span id="textcolor4"><span 
class="ectt-1095">Id</span></span> <span 
class="ecti-1095">internal_state_list</span><span id="textcolor5"><span 
class="ectt-1095">,</span></span> <span 
class="ecti-1095">sig </span><!--l. 290--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo><mi 
>𝜀</mi></math></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-2-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-2-3-1"  
class="td01"><span 
class="ecti-1095">internal_state_list     </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-2-3-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-2-3-3"  
class="td10"> <span id="textcolor6"><span 
class="ectt-1095">~Id</span></span> <span 
class="ecti-1095">internal_state_list </span><!--l. 294--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo><mi 
>𝜀</mi></math>     </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<!--l. 300--><p class="noindent" >For instance the line: <!--l. 301-->
<div class="lstlisting" id="listing-1"><span class="label"><a 
 id="x1-15008r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,y</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,z</span><span 
class="ectt-1095">~0~1~2)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Signature</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">of</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">agent</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span>
</div>
<!--l. 304--><p class="noindent" >will declare an agent <span 
class="ectt-1095">A </span>with 3 <span 
class="ecti-1095">(interaction) sites </span><span 
class="ectt-1095">x,y </span>and <span 
class="ectt-1095">z </span>with the site <span 
class="ectt-1095">y</span>
possessing two <span 
class="ecti-1095">internal states</span><a 
 id="dx1-15009"></a> <span 
class="ectt-1095">u </span>and <span 
class="ectt-1095">p </span>(for instance for the unphosphorylated
and phosphorylated forms of <span 
class="ectt-1095">y</span>) and the site <span 
class="ectt-1095">z </span>having three possible states
<!--l. 308--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>0</mn></math>,
<!--l. 308--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn></math> and
<!--l. 309--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>2</mn></math>. Note
that internal states<a 
 id="dx1-15010"></a> values are treated as untyped symbols by <span 
class="ecss-1095">KaSim</span>, so choosing a character or
an integer as internal state is purely a matter of convention.
<!--l. 313--><p class="noindent" >Token signature<a 
 id="dx1-15011"></a>s are declared using a statement of the form: <!--l. 315-->
<div class="lstlisting" id="listing-2"><span class="label"><a 
 id="x1-15012r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%token:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">ca</span><span 
class="ectt-1095">+</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Signature</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">of</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">calcium</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">token</span>
</div>
<h3 class="sectionHead"><span class="titlemark">3.3   </span> <a 
 id="x1-160003.3"></a>Sited-graph pattern: Kappa expression</h3>
<!--l. 321--><p class="noindent" >The state of the system is represented in Kappa as a sited graph: a graph were edges speciﬁes a
site of the node they use. You must think as sites as resources. At most one edge of the graph can
use a site of a node (representing an agent in our case). We call this concept the <span 
class="ecti-1095">rigidity of</span>
<span 
class="ecti-1095">Kappa</span>.
<!--l. 327--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">3.3.1   </span> <a 
 id="x1-170003.3.1"></a>Graph syntax</h4>
<!--l. 328--><p class="noindent" >The ascii syntax we use to represent sited graphs follows the skeletons (describe formaly in
ﬁg <a 
href="#x1-190022">3.2<!--tex4ht:ref: tab:patterns --></a>):
                                                                                  

                                                                                  
     <ul class="itemize1">
     <li class="itemize">we the type of the agent and then it interface (the comma separeted list of the state
     of its sites) in between parenthesis.
     </li>
     <li class="itemize">When the site is <span 
class="ecti-1095">free </span>(is not a member of a edge) you just write its name to represent
     its state. If it has a internal state, you write it after a &#x2019;~&#x2019;. For example, the graph
     TODO is written A(x,y~p,z~0)
     </li>
     <li class="itemize">When a site is part of an edge, you assign an integer identiﬁer <!--l. 338--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>
     to this edge and you specify the appartenance of the site to this edge by writing
     site_name<!--l. 339--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-punc">!</mo><mi 
>n</mi></math>.
     The graph TODO can be reprensented as A(x!23,y~u!4,z~1), A(x!4,y~u!954,z~1),
     A(x!95,y~u!234,z~1).
     <!--l. 344--><p class="noindent" ><span class="paragraphHead"><a 
 id="x1-180003.3.1"></a><span 
class="ecbx-1095">Remark</span></span>
     Each link identiﬁer appears exactly twice of course. this is a consequence of the regidity of
     Kappa.</li></ul>
<!--l. 348--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">3.3.2   </span> <a 
 id="x1-190003.3.2"></a>Pattern syntax</h4>
<!--l. 349--><p class="noindent" >Kappa strength is to describe transformations by only mentionning (and storing) the relevant
part of the subgraph required for that transfor;ation to be possible. It plays a key role in resisting
combinatorial explosion when writing models. We use the <span 
class="ecti-1095">don&#x2019;t care, don&#x2019;t write</span><a 
 id="dx1-19001"></a> principle. If a
transformation occurs independently of the state of a site of an agent, don&#x2019;t mention it in the
<span 
class="ecti-1095">pattern </span>to match. The pattern A(x,z) represents an agent of type A whose sites x and z are free
but the sites y and z can be in any internal state and the site y can be linked or not to
anything.
<!--l. 360--><p class="noindent" >If the link state of a site does not matter but the internal state does, an &#x2019;?&#x2019; has to be added after
the site name (and internal state). An agent A whose sites x and z are free, y is in state u and z
in state 2 is written A(x,y~u?4,z~2).
<div class="table">
                                                                                  

                                                                                  
<!--l. 365--><p class="noindent" ><a 
 id="x1-190022"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.2: </span><span  
class="content">Kappa expressions</span></div><!--tex4ht:label?: x1-190022 -->
<div class="tabular"> <table id="TBL-3" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-3-1g"><col 
id="TBL-3-1"><col 
id="TBL-3-2"><col 
id="TBL-3-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-3-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-1-1"  
class="td01"><span 
class="ecti-1095">kappa_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-3-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-3-1-3"  
class="td10"> <span 
class="ecti-1095">agent_expression </span><span id="textcolor7"><span 
class="ectt-1095">,</span></span> <span 
class="ecti-1095">kappa_expression </span><!--l. 369--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo><mi 
>𝜀</mi></math>  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-3-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-2-1"  
class="td01"><span 
class="ecti-1095">agent_expression   </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-3-2-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-3-2-3"  
class="td10"> <span id="textcolor8"><span 
class="ectt-1095">Id</span></span><span id="textcolor9"><span 
class="ectt-1095">(</span></span><span 
class="ecti-1095">interface</span><span id="textcolor10"><span 
class="ectt-1095">)</span></span>                                                                                                   </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-3-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-3-1"  
class="td01"><span 
class="ecti-1095">interface              </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-3-3-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-3-3-3"  
class="td10"> <span id="textcolor11"><span 
class="ectt-1095">Id</span></span> <span 
class="ecti-1095">internal_state link_state </span><span id="textcolor12"><span 
class="ectt-1095">,</span></span> <span 
class="ecti-1095">interface </span><!--l. 371--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo><mi 
>𝜀</mi></math></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-3-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-4-1"  
class="td01"><span 
class="ecti-1095">internal_state       </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-3-4-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-3-4-3"  
class="td10"> <!--l. 372--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>𝜀</mi></math> | <span id="textcolor13"><span 
class="ectt-1095">~Id</span></span>                             </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-3-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-5-1"  
class="td01"><span 
class="ecti-1095">link_state            </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-3-5-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-3-5-3"  
class="td10"> <!--l. 373--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>𝜀</mi></math> | <span id="textcolor14"><span 
class="ectt-1095">!n</span></span> | <span id="textcolor15"><span 
class="ectt-1095">!_</span></span> | <span id="textcolor16"><span 
class="ectt-1095">?</span></span> | <span id="textcolor17"><span 
class="ectt-1095">!Id.Id</span></span>                </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-3-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-3-6-1"  
class="td01">                 </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<h4 class="subsectionHead"><span class="titlemark">3.3.3   </span> <a 
 id="x1-200003.3.3"></a>Link type</h4>
<!--l. 380--><p class="noindent" >In standard kappa, in order to require a site to be bound for an interaction to occur, one may use
the <span 
class="ecti-1095">semi-link</span><a 
 id="dx1-20001"></a> construct <span 
class="ectt-1095">!_ </span>which does not specify who the partner of the bond is. For instance
in the variable: <span class="lstinline"><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">\</span><span 
class="ectt-1095">var</span><span 
class="ectt-1095">{</span><span 
class="ectt-1095">ab</span><span 
class="ectt-1095">}~|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|</span></span> will count the number of <span 
class="ectt-1095">A</span>s and
<span 
class="ectt-1095">B</span>s connected to someone, including the limit case <span 
class="ectt-1095">A(x!1),B(y!1)</span>. It is sometimes
convenient to specify the <span 
class="ecti-1095">type</span><a 
 id="dx1-20002"></a> of the semi-link, in order to restrict the choice of the
binding partner. For instance the variable: <span class="lstinline"><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">\</span><span 
class="ectt-1095">var</span><span 
class="ectt-1095">{</span><span 
class="ectt-1095">ab</span><span 
class="ectt-1095">}~|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|!</span></span> will
count the number of <span 
class="ectt-1095">A</span>s whose site <span 
class="ectt-1095">x </span>is connected to a site <span 
class="ectt-1095">y </span>of <span 
class="ectt-1095">B</span>, plus the number
of <span 
class="ectt-1095">B</span>s whose site <span 
class="ectt-1095">y </span>is connected to a site <span 
class="ectt-1095">x </span>of <span 
class="ectt-1095">A</span>. Note that this still includes the case
<span 
class="ectt-1095">A(x!1),B(y!1)</span>.
<!--l. 397--><p class="noindent" ><span class="paragraphHead"><a 
 id="x1-210003.3.3"></a><span 
class="ecbx-1095">Remark</span></span>
Transformations on semi-links and links type indiuce side eﬀects (eﬀect on unmention
agents/unmentionned site of agent) and can even don&#x2019;t make sense at all. What would mean to
remove the link to A but not the link to B in the example above? Be carefull when you use
them.
<!--l. 403--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">3.4   </span> <a 
 id="x1-220003.4"></a>Rules</h3>
<!--l. 405--><p class="noindent" >Once agents are declared, one may add to the KF<a 
 id="dx1-22001"></a> the rules<a 
 id="dx1-22002"></a> that describe their dynamics. A <span 
class="ecti-1095">pure</span>
<span 
class="ecti-1095">rule</span><a 
 id="dx1-22003"></a> looks like:
     <ul class="itemize1">
     <li class="itemize"><span 
class="tctt-1095">'</span><span 
class="ectt-1095">my rule</span><span 
class="tctt-1095">' </span><span 
class="ecti-1095">kappa_expression </span><!--l. 412--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo></math>
     <span 
class="ecti-1095">kappa_expression </span><span 
class="ectt-1095">@ </span><span 
class="ecti-1095">rate</span></li></ul>
                                                                                  

                                                                                  
<!--l. 414--><p class="noindent" >where <span 
class="tctt-1095">'</span><span 
class="ectt-1095">my rule</span><span 
class="tctt-1095">' </span>can be any name. This rule name can be used to refer to the rule which follows
immediately. A rule can be decomposed into a <span 
class="ecti-1095">left hand side</span><a 
 id="dx1-22004"></a> (LHS), a <span 
class="ecti-1095">right hand side</span><a 
 id="dx1-22005"></a> (RHS)
kappa expressions<a 
 id="dx1-22006"></a>, and a <span 
class="ecti-1095">rate expression</span><a 
 id="dx1-22007"></a>. One may also declare a <span 
class="ecti-1095">bi-directional rule</span><a 
 id="dx1-22008"></a> using the
convention:
     <ul class="itemize1">
     <li class="itemize"><span 
class="tctt-1095">'</span><span 
class="ectt-1095">bi-rule</span><span 
class="tctt-1095">' </span><span 
class="ecti-1095">kappa_expression </span><!--l. 424--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&harr;</mo></math>
     <span 
class="ecti-1095">kappa_expression </span><span 
class="ectt-1095">@ </span><span 
class="ecti-1095">rate</span><!--l. 424--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msup><mrow 
></mrow><mrow 
><mo 
class="MathClass-bin">+</mo></mrow></msup 
></math><span 
class="ecti-1095">,rate</span><!--l. 424--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msup><mrow 
></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo></mrow></msup 
></math></li></ul>
<!--l. 426--><p class="noindent" >Note that the above declaration<a 
 id="dx1-22009"></a> is equivalent to writing, in addition of <span 
class="tctt-1095">'</span><span 
class="ectt-1095">my-rule</span><span 
class="tctt-1095">'</span>,
another rule named <span 
class="tctt-1095">'</span><span 
class="ectt-1095">my rule_op</span><span 
class="tctt-1095">' </span>which swaps left and right hand sides, and has rate
<span 
class="ecti-1095">rate</span><!--l. 429--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msup><mrow 
></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo></mrow></msup 
></math>.
<!--l. 431--><p class="noindent" >Rate expressions are given by the grammar in Table <a 
href="#x1-220113">3.3<!--tex4ht:ref: tab:rates --></a>. Algebraic expressions<a 
 id="dx1-22010"></a> are described later
in Table <a 
href="#x1-300036">3.6<!--tex4ht:ref: tab:alg --></a> (but can be thought of for now as positive real numbers).
<div class="table">
                                                                                  

                                                                                  
<!--l. 436--><p class="noindent" ><a 
 id="x1-220113"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.3: </span><span  
class="content">Rate expressions</span></div><!--tex4ht:label?: x1-220113 -->
<div class="tabular"> <table id="TBL-4" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-4-1g"><col 
id="TBL-4-1"><col 
id="TBL-4-2"><col 
id="TBL-4-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-4-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-4-1-1"  
class="td01"><span 
class="ecti-1095">rate_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-4-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-4-1-3"  
class="td10"> <span 
class="ecti-1095">algebraic_expression                               </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-4-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-4-2-1"  
class="td01">               </td><td  style="text-align:center; white-space:nowrap;" id="TBL-4-2-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-4-2-3"  
class="td10"> | <span 
class="ecti-1095">algebraic_expression </span><span id="textcolor18"><span 
class="ectt-1095">(</span></span><span 
class="ecti-1095">algebraic_expression</span><span id="textcolor19"><span 
class="ectt-1095">)</span></span></td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<!--l. 446--><p class="noindent" >If pure rules induce reactions between agents, it is possible to mix agents and tokens
in <span 
class="ecti-1095">hybrid rules</span><a 
 id="dx1-22012"></a> (which may also be bi-directional). A hybrid rule has the following
form:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ecti-1095">kappa_expression </span>| <span 
class="ecti-1095">token_expression </span><!--l. 452--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo></math>
     <span 
class="ecti-1095">kappa_expression </span>| <span 
class="ecti-1095">token_expression </span><span 
class="ectt-1095">@ </span><span 
class="ecti-1095">rate</span></li></ul>
<!--l. 454--><p class="noindent" >Token expressions are also given by the grammar in Table <a 
href="#x1-220134">3.4<!--tex4ht:ref: tab:tokens --></a>. <div class="table">
                                                                                  

                                                                                  
<!--l. 457--><p class="noindent" ><a 
 id="x1-220134"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.4: </span><span  
class="content">Token expressions</span></div><!--tex4ht:label?: x1-220134 -->
<div class="tabular"> <table id="TBL-5" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-5-1g"><col 
id="TBL-5-1"><col 
id="TBL-5-2"><col 
id="TBL-5-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-5-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-5-1-1"  
class="td01"><span 
class="ecti-1095">token_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-5-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-5-1-3"  
class="td10"> <span 
class="ecti-1095">algebraic_expression</span><span id="textcolor20"><span 
class="ectt-1095">:</span></span><span 
class="ecti-1095">token_name      </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-5-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-5-2-1"  
class="td01">                </td><td  style="text-align:center; white-space:nowrap;" id="TBL-5-2-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-5-2-3"  
class="td10"> | <span 
class="ecti-1095">token_expression </span><span id="textcolor21"><span 
class="ectt-1095">+</span></span> <span 
class="ecti-1095">token_expression</span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-5-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-5-3-1"  
class="td01">                </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-5-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-5-4-1"  
class="td01"><span 
class="ecti-1095">token_name         </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-5-4-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-5-4-3"  
class="td10"> <span id="textcolor22"><span 
class="ectt-1095">Id</span></span>                               </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-5-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-5-5-1"  
class="td01">                </td></tr></table></div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<h4 class="subsectionHead"><span class="titlemark">3.4.1   </span> <a 
 id="x1-230003.4.1"></a>Pure rules</h4>
<a 
 id="dx1-23001"></a>
<!--l. 470--><p class="noindent" >
<h5 class="likesubsubsectionHead"><a 
 id="x1-240003.4.1"></a>A simple rule</h5>
<!--l. 471--><p class="noindent" >With the signature<a 
 id="dx1-24001"></a> of <span 
class="ectt-1095">A </span>deﬁned in the previous section, the line <!--l. 472-->
<div class="lstlisting" id="listing-3"><span class="label"><a 
 id="x1-24002r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">dimerization</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 475--><p class="noindent" >declares a dimerization rule between two instances of agent <span 
class="ectt-1095">A </span>provided the second is
phosphorylated (say that is here the meaning of <span 
class="ectt-1095">p</span>) on site <span 
class="ectt-1095">y</span>. Note that the bond between both <span 
class="ectt-1095">A</span>s
is denoted by the identiﬁer <span 
class="ectt-1095">!1 </span>which uses an arbitrary integer (<span 
class="ectt-1095">!0 </span>would denote the same bond).
Note also the fact that site <span 
class="ectt-1095">z </span>of <span 
class="ectt-1095">A </span>is not mentioned in the expression which means that it has no
inﬂuence on the triggering of this rule. This is the <span 
class="ecti-1095">don&#x2019;t care don&#x2019;t write convention </span>(DCDW)
<a 
 id="dx1-24003"></a>.
<!--l. 477--><p class="noindent" >
<h5 class="likesubsubsectionHead"><a 
 id="x1-250003.4.1"></a>Adding and deleting agents</h5>
<!--l. 478--><p class="noindent" >Sticking with <span 
class="ectt-1095">A</span>&#x2019;s signature<a 
 id="dx1-25001"></a>, the rule <!--l. 479-->
<div class="lstlisting" id="listing-4"><span class="label"><a 
 id="x1-25002r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">budding</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 482--><p class="noindent" >indicates that an agent <span 
class="ectt-1095">A </span>free on site <span 
class="ectt-1095">z</span>, no matter what its internal state is, may beget a new
copy of <span 
class="ectt-1095">A </span>bound to it via site <span 
class="ectt-1095">x</span>. Note that in the RHS, the interface of the new copy is not
completely described. Following the DCDW convention<a 
 id="dx1-25003"></a>, <span 
class="ecss-1095">KaSim</span> will then assume that the sites
                                                                                  

                                                                                  
that are not mentioned are created in the <span 
class="ecti-1095">default state</span><a 
 id="dx1-25004"></a>, ie they appear free of any bond and their
internal state (if any) is the ﬁrst of the list shown in the signature<a 
 id="dx1-25005"></a> (here state <span 
class="ectt-1095">u </span>for <span 
class="ectt-1095">y </span>and <span 
class="ectt-1095">0 </span>for
<span 
class="ectt-1095">z</span>).
<!--l. 484--><p class="noindent" >Importantly, <span 
class="ecss-1095">KaSim</span> respects the <span 
class="ecti-1095">longest preﬁx convention</span><a 
 id="dx1-25006"></a> to determine which agent
in the RHS stems from an agent in the LHS. In a word, from a rule of the form
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-op">&hellip;</mo><mo 
class="MathClass-punc">,</mo><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>n</mi></mrow></msub 
> <mo 
class="MathClass-rel">&rarr;</mo> <msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-op">&hellip;</mo><mo 
class="MathClass-punc">,</mo><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mi 
>k</mi></mrow></msub 
></math>, with
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math>s and
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math>s being agents, one
computes the largest <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi> <mo 
class="MathClass-rel">&le;</mo> <mi 
>n</mi><mo 
class="MathClass-punc">,</mo><mi 
>k</mi></math>
such that the agents <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-op">&hellip;</mo><mo 
class="MathClass-punc">,</mo><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math> are
pairwise consistent with <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-op">&hellip;</mo><mo 
class="MathClass-punc">,</mo><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math>,
ie the <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math>s
and <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math>s
have the same name and the same sites. In which case we say that for all
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi> <mo 
class="MathClass-rel">&le;</mo> <mi 
>i</mi></math>,
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math> is <span 
class="ecti-1095">preserved </span>by the
transition and for all <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi> <mo 
class="MathClass-rel">&#x003E;</mo> <mi 
>i</mi></math>,
<!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math> is <span 
class="ecti-1095">deleted </span>by the
transition and <!--l. 485--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>b</mi></mrow><mrow 
><mi 
>j</mi></mrow></msub 
></math>
is <span 
class="ecti-1095">created </span>by the transition. This convention allows us to write a deletion rule as: <!--l. 486-->
<div class="lstlisting" id="listing-5"><span class="label"><a 
 id="x1-25007r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">deleting</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">}</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 489--><p class="noindent" >which will remove the <span 
class="ectt-1095">A </span>agent in the mixture<a 
 id="dx1-25008"></a> that will match the second occurrence of <span 
class="ectt-1095">A </span>in this
rule. Note that the rule: <!--l. 491-->
<div class="lstlisting" id="listing-6"><span class="label"><a 
 id="x1-25009r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">weird</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 494--><p class="noindent" >will delete both <span 
class="ectt-1095">A</span>s and create a new one with a free <span 
class="ectt-1095">z </span>site.
<!--l. 496--><p class="noindent" >
<h5 class="likesubsubsectionHead"><a 
 id="x1-260003.4.1"></a>Side eﬀects</h5>
<!--l. 498--><p class="noindent" >It may happen that the application of a rule has some <span 
class="ecti-1095">side eﬀects</span><a 
 id="dx1-26001"></a> on agents that are not
mentioned explicitly in the rule. Consider for instance the previous rule: <!--l. 499-->
                                                                                  

                                                                                  
<div class="lstlisting" id="listing-7"><span class="label"><a 
 id="x1-26002r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">deleting</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">z</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">}</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 502--><p class="noindent" >The <span 
class="ectt-1095">A </span>in the graph that is matched to the second occurrence of <span 
class="ectt-1095">A </span>in the LHS will be deleted by
the rule. As a consequence all its sites will disappear together with the bonds that were pointing
to them. For instance, when applied to the graph
     <ul class="itemize1">
     <li class="itemize"><!--l. 505--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>G</mi> <mo 
class="MathClass-rel">=</mo></math><span 
class="ectt-1095">A(x!1,y~p,z~2),A(x!2,y~u,z~0!1),C(t!2)</span></li></ul>
<!--l. 506--><p class="noindent" >the above rule will result in a new graph <!--l. 506--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msup><mrow 
><mi 
>G</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msup 
> <mo 
class="MathClass-rel">=</mo> <mstyle 
class="text"><mtext class="texttt" mathvariant="monospace" >A(x!1,y~p,z~2),C(t)</mtext></mstyle></math>
where the site <span 
class="ectt-1095">t </span>of <span 
class="ectt-1095">C </span>is now free as side eﬀect.
<!--l. 508--><p class="noindent" ><span 
class="ecti-1095">Wildcard </span>symbols for link state <span 
class="ectt-1095">? </span>(for bound or not), <span 
class="ectt-1095">!_ </span>(for bound to someone), may also induce
side eﬀects when they are not preserved in the RHS of a rule, as in <!--l. 509-->
<div class="lstlisting" id="listing-8"><span class="label"><a 
 id="x1-26003r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Disconnect</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!\</span><span 
class="ectt-1095">_</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">}</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">\</span><span 
class="ectt-1095">ttt</span><span 
class="ectt-1095">{</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 512--><p class="noindent" >or <!--l. 513-->
<div class="lstlisting" id="listing-9"><span class="label"><a 
 id="x1-26004r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Force</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">bind</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">?)</span><span 
class="ectt-1095">}</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">t</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">gamma</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 517--><p class="noindent" >Both these rule will cause <span 
class="ecss-1095">KaSim</span> to raise a warning at rule compilation time.
<!--l. 519--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">3.4.2   </span> <a 
 id="x1-270003.4.2"></a>Hybrid rules</h4>
<!--l. 521--><p class="noindent" >Using KaSim <span 
class="ecti-1095">hybrid rules</span><a 
 id="dx1-27001"></a>, one may declare that an action has eﬀects on the concentration of
some particles of the system. For instance a rule may consume atp, calcium ions etc. It would be
a waste of memory and time to use discrete agents to represent such particles. Instead one may
declare tokens using declarations<a 
 id="dx1-27002"></a> of the form: <!--l. 522-->
<div class="lstlisting" id="listing-10"><span class="label"><a 
 id="x1-27003r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%token:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">atp</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-27004r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%token:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">adp</span>
                                                                                  

                                                                                  
</div>
<!--l. 526--><p class="noindent" >One may then use these tokens in conjunction with a classical rule using the hybrid format:
<!--l. 527-->
<div class="lstlisting" id="listing-11"><span class="label"><a 
 id="x1-27005r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">hybrid</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">rule</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">S</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,K</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0.1</span><span 
class="ectt-1095">:atp</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">S</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,K</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0.1</span><span 
class="ectt-1095">:adp</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 530--><p class="noindent" >When applied, the above rule will consume 0.1 <span 
class="ectt-1095">atp </span>token and produce 0.1 <span 
class="ectt-1095">adp </span>token. Note that as
speciﬁed by the grammar given Table <a 
href="#x1-220134">3.4<!--tex4ht:ref: tab:tokens --></a>, the number of consumed (and produced) tokens can be
given by a sum of the form:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ecit-1095">lhs </span><span 
class="ectt-1095">| a</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
></mrow><mrow 
><mn>1</mn></mrow></msub 
></math><span 
class="ectt-1095">:t</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
></mrow><mrow 
><mn>1</mn></mrow></msub 
></math>
     <span 
class="ectt-1095">+ ... + a</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
></mrow><mrow 
><mi 
>n</mi></mrow></msub 
></math><span 
class="ectt-1095">:t</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
></mrow><mrow 
><mi 
>n</mi></mrow></msub 
></math>
     <!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo></math>
     <span 
class="ecit-1095">rhs </span><span 
class="ectt-1095">| a</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
></mrow><mrow 
><mn>1</mn></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math><span 
class="ectt-1095">:t</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
></mrow><mrow 
><mn>1</mn></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>
     <span 
class="ectt-1095">+ ... + a</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
></mrow><mrow 
><mi 
>k</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math><span 
class="ectt-1095">:t</span><!--l. 533--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
></mrow><mrow 
><mi 
>k</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>
     <span 
class="ectt-1095">@ r</span></li></ul>
<!--l. 534--><p class="noindent" >where each <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
><mo 
class="MathClass-punc">,</mo><msubsup><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>
is an arbitrary algebraic expression<a 
 id="dx1-27006"></a> (see Table <a 
href="#x1-300036">3.6<!--tex4ht:ref: tab:alg --></a>) and each
<!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>t</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
><mo 
class="MathClass-punc">,</mo><msubsup><mrow 
><mi 
>t</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math> is a declared token. In the
above hybrid rule, calling <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>n</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
><mo 
class="MathClass-punc">,</mo><msubsup><mrow 
><mi 
>n</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>
the evaluation of <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math> and
<!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
><mi 
>a</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>, the concentration of
token <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>t</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math> will decrease
from <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>n</mi></mrow><mrow 
><mi 
>i</mi></mrow></msub 
></math> and the
concentration of token <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
><mi 
>t</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>
will increase from <!--l. 534--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msubsup><mrow 
><mi 
>n</mi></mrow><mrow 
><mi 
>i</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msubsup 
></math>.
Importantly, the activity<a 
 id="dx1-27007"></a> of a hybrid rule like the above one is still deﬁned by
<!--l. 535--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mstyle 
class="text"><mtext class="texttt" mathvariant="monospace" >|lhs|*r</mtext></mstyle></math>, where
<!--l. 535--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mstyle 
class="text"><mtext class="texttt" mathvariant="monospace" >|lhs|</mtext></mstyle></math> is the
number of embeddings of the lhs of the rule in the mixture, and does not take into account the
concentration of the tokens it mentions. As we will see in the next section, it is however possible
to make its rate explicitly depend on the concentrations of the tokens using a <span 
class="ecti-1095">variable</span><a 
 id="dx1-27008"></a>
rate.
<!--l. 537--><p class="noindent" >
                                                                                  

                                                                                  
<h4 class="subsectionHead"><span class="titlemark">3.4.3   </span> <a 
 id="x1-280003.4.3"></a>Rates</h4>
<!--l. 538--><p class="noindent" >As said earlier, Kappa rules are equipped with one or two <span 
class="ecti-1095">kinetic rate(s)</span><a 
 id="dx1-28001"></a>. A
rate is a real number, or an algebraic expression<a 
 id="dx1-28002"></a> evaluated as such, called the
<span 
class="ecti-1095">individual-based or stochastic rate constant</span><a 
 id="dx1-28003"></a>, it is the rate at which the corresponding
rule is applied per instance of the rule. Its dimension is the inverse of a time
<!--l. 538--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><msup><mrow 
><mi 
>T</mi></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></mrow><mo 
class="MathClass-close">]</mo></mrow></math>.
<!--l. 540--><p class="noindent" >The stochastic rate is related to the <span 
class="ecti-1095">concentration-based rate constant</span><a 
 id="dx1-28004"></a>
<!--l. 540--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math> of the
rule of interest by the following relation: <table class="equation"><tr><td> <a 
 id="x1-28005r1"></a>
<!--l. 547--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="block" class="equation">
                                  <mi 
>k</mi> <mo 
class="MathClass-rel">=</mo> <mi 
>&gamma;</mi><msup><mrow 
><mrow ><mo 
class="MathClass-open">(</mo><mrow><mi 
mathvariant="bold-script">𝒜</mi><mspace width="3.0235pt" class="tmspace"/><mi 
>V</mi> </mrow><mo 
class="MathClass-close">)</mo></mrow></mrow><mrow 
><mrow ><mo 
class="MathClass-open">(</mo><mrow><mi 
>a</mi><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow><mo 
class="MathClass-close">)</mo></mrow></mrow></msup 
>
</math></td><td class="eq-no">(3.1)</td></tr></table>
<!--l. 550--><p class="noindent" >where <!--l. 551--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>V</mi> </math> is the volume where
the model is considered, <!--l. 552--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
mathvariant="bold-script">𝒜</mi> <mo 
class="MathClass-rel">=</mo> <mn>6</mn><mo 
class="MathClass-punc">.</mo><mn>0</mn><mn>2</mn><mn>2</mn> <mo 
class="MathClass-bin">&sdot;</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>2</mn><mn>3</mn></mrow></msup 
></math>
is Avogadro&#x2019; s number, <!--l. 553--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>a</mi> <mo 
class="MathClass-rel">&ge;</mo> <mn>0</mn></math>
is the arity of the rule (ie 2 for a bimolecular rule).
<!--l. 555--><p class="noindent" >In a modeling context, the constant <!--l. 555--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math>
is typically expressed using <span 
class="ecti-1095">molars </span><!--l. 555--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi> <mo 
class="MathClass-punc">:</mo><mo 
class="MathClass-rel">=</mo> <mstyle mathvariant="italic"><mi 
>m</mi></mstyle><mi 
>o</mi><mi 
>l</mi><mi 
>e</mi><mi 
>s</mi><mspace width="0.3em" class="thinspace"/><msup><mrow 
><mi 
>l</mi></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>
(or variants thereof such as <!--l. 556--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&mu;</mi><mi 
>M</mi></math>,
<!--l. 556--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi><mi 
>M</mi></math>),
and seconds or minutes. If we choose molars and seconds,
<!--l. 556--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math>&#x2019; s unit
is <!--l. 556--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msup><mrow 
><mstyle mathvariant="italic"><mi 
>M</mi></mstyle></mrow><mrow 
><mn>1</mn><mo 
class="MathClass-bin">&minus;</mo><mi 
>a</mi></mrow></msup 
><msup><mrow 
><mstyle mathvariant="italic"><mi 
>s</mi></mstyle></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>, as
follows from the relation above.
<!--l. 559--><p class="noindent" >Concentration-based rates are usually favored for measurements and/or deterministic models, so
it is useful to know how to convert them into individual-based ones used by KaSim. Here are
typical volumes used in modeling:
     <ul class="itemize1">
     <li class="itemize">Mammalian cell: <!--l. 564--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>2</mn><mo 
class="MathClass-punc">.</mo><mn>2</mn><mn>5</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn><mn>2</mn></mrow></msup 
><mi 
>l</mi></math>
     (<!--l. 564--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>l</mi> <mo 
class="MathClass-rel">=</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>3</mn></mrow></msup 
><msup><mrow 
><mi 
>m</mi></mrow><mrow 
><mn>3</mn></mrow></msup 
></math>),
                                                                                  

                                                                                  
     and <!--l. 564--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
mathvariant="bold-script">𝒜</mi><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>1</mn><mo 
class="MathClass-punc">.</mo><mn>3</mn><mn>5</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>1</mn><mn>2</mn></mrow></msup 
></math>.
     <!--l. 566--><p class="noindent" >A concentration of <!--l. 566--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>M</mi></math>
     in a mammalian cell volume corresponds to <!--l. 566--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mo 
class="MathClass-punc">.</mo><mn>3</mn><mn>5</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>1</mn><mn>2</mn></mrow></msup 
></math>
     molecules; <!--l. 566--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>n</mi><mi 
>M</mi> <mo 
class="MathClass-rel">&asymp;</mo> <mn>1</mn><mn>3</mn><mn>5</mn><mn>0</mn></math>
     molecules per cell.
     </li>
     <li class="itemize">Yeast cell (haploid): <!--l. 569--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>4</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn><mn>4</mn></mrow></msup 
><mi 
>l</mi></math>,
     and <!--l. 569--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
mathvariant="bold-script">𝒜</mi><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>2</mn><mo 
class="MathClass-punc">.</mo><mn>4</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>1</mn><mn>0</mn></mrow></msup 
></math>.
     <!--l. 571--><p class="noindent" >A concentration of <!--l. 571--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>M</mi></math>
     in a yeast cell volume corresponds to <!--l. 571--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>2</mn><mo 
class="MathClass-punc">.</mo><mn>4</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>1</mn><mn>0</mn></mrow></msup 
></math>
     molecules; <!--l. 571--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>n</mi><mi 
>M</mi> <mo 
class="MathClass-rel">&asymp;</mo> <mn>2</mn><mn>4</mn></math>
     molecules per cell. The volume is doubled in a diploid cell.
     </li>
     <li class="itemize">E. Coli cell: <!--l. 573--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn><mn>5</mn></mrow></msup 
><mi 
>l</mi></math>,
     and <!--l. 573--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
mathvariant="bold-script">𝒜</mi><mi 
>V</mi> <mo 
class="MathClass-rel">=</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>8</mn></mrow></msup 
></math>.
     <!--l. 575--><p class="noindent" >A concentration of <!--l. 575--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mi 
>M</mi></math>
     in a yeast cell volume corresponds to <!--l. 575--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>8</mn></mrow></msup 
></math>
     molecules; <!--l. 575--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mn>0</mn><mi 
>n</mi><mi 
>M</mi> <mo 
class="MathClass-rel">&asymp;</mo> <mn>1</mn></math>
     molecule per cell.</li></ul>
<!--l. 578--><p class="noindent" >The table below lists typical ranges for deterministic rate constants and their stochastic
counterparts assuming a mammalian cell volume.
<div class="table">
                                                                                  

                                                                                  
<!--l. 581--><p class="noindent" ><a 
 id="x1-280065"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.5: </span><span  
class="content">Example of kinetic rates.</span></div><!--tex4ht:label?: x1-280065 -->
<div class="tabular">
 <table id="TBL-6" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-6-1g"><col 
id="TBL-6-1"><col 
id="TBL-6-2"><col 
id="TBL-6-3"><col 
id="TBL-6-4"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-6-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-1-1"  
class="td01">process                   </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-1-2"  
class="td11"> <!--l. 586--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math> </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-1-3"  
class="td11"> <!--l. 586--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&gamma;</mi></math> </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-2-1"  
class="td01">general binding         </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-2-2"  
class="td11"> <!--l. 589--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>7</mn></mrow></msup 
> <mo 
class="MathClass-bin">&minus;</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>9</mn></mrow></msup 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-2-3"  
class="td11"> <!--l. 589--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>5</mn></mrow></msup 
> <mo 
class="MathClass-bin">&minus;</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>3</mn></mrow></msup 
></math>  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-3-1"  
class="td01">general unbinding      </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-3-2"  
class="td11"> <!--l. 591--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>3</mn></mrow></msup 
> <mo 
class="MathClass-bin">&minus;</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-3-3"  
class="td11"> <!--l. 591--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>3</mn></mrow></msup 
> <mo 
class="MathClass-bin">&minus;</mo> <mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-4-1"  
class="td01">dephosphorylation      </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-4-2"  
class="td11"> 1                                                                                                                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-4-3"  
class="td11"> 1                                                                                                                       </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-5-1"  
class="td01">phosphorylation         </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-5-2"  
class="td11"> 0.1                                                                                                                    </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-5-3"  
class="td11"> 0.1                                                                                                                    </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-6-1"  
class="td01">receptor dimerization  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-6-2"  
class="td11"> <!--l. 597--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>2</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mn>6</mn></mrow></msup 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-6-3"  
class="td11"> <!--l. 597--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mo 
class="MathClass-punc">.</mo><mn>6</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>6</mn></mrow></msup 
></math>  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-7-1"  
class="td01">receptor dissociation   </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-7-2"  
class="td11"> <!--l. 599--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mo 
class="MathClass-punc">.</mo><mn>6</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-6-7-3"  
class="td11"> <!--l. 599--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mo 
class="MathClass-punc">.</mo><mn>6</mn><mspace width="3.0235pt" class="tmspace"/><mn>1</mn><msup><mrow 
><mn>0</mn></mrow><mrow 
><mo 
class="MathClass-bin">&minus;</mo><mn>1</mn></mrow></msup 
></math>  </td>

</tr><tr  
 style="vertical-align:baseline;" id="TBL-6-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-6-8-1"  
class="td01">                   </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<h4 class="subsectionHead"><span class="titlemark">3.4.4   </span> <a 
 id="x1-290003.4.4"></a>Ambiguous molecularity</h4>
<!--l. 607--><p class="noindent" >It is considered malpractice to use a Kappa rule of the form
<span 
class="ectt-1095">A(x),B(y)</span><!--l. 607--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo><mo 
class="MathClass-op">&hellip;</mo><mspace width="0.3em" class="thinspace"/></math> <span 
class="ectt-1095">@</span>
<!--l. 607--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&gamma;</mi></math> in a model
where this rule could be applied in a context where <span 
class="ectt-1095">A </span>and <span 
class="ectt-1095">B </span>are sometimes already connected and
sometimes disconnected. Indeed, this would lead to an inconsistency in the deﬁnition of the kinetic
rate <!--l. 607--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&gamma;</mi></math>
which should have a volume dependency in the former case and no volume dependency in the
latter (see Section <a 
href="#x1-280003.4.3">3.4.3<!--tex4ht:ref: sec:kinetics --></a>).
<!--l. 609--><p class="noindent" >This sort of ambiguity should be resolved, if possible, by reﬁning the ambiguous
rule into cases that are either exclusively unary or binary. Each reﬁnement having
a kinetic rate that is consistent with its molecularity. Note that in practice, for
models with a large number of agents, it is suﬃcient to assume that the rule
<span 
class="ectt-1095">A(x),B(y)</span><!--l. 609--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo><mo 
class="MathClass-op">&hellip;</mo><mspace width="0.3em" class="thinspace"/></math>
<span 
class="ectt-1095">@ </span><!--l. 609--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&gamma;</mi></math> will
have only binary instances. In this case it suﬃces to consider the approximate model:
<!--l. 610-->
<div class="lstlisting" id="listing-12"><span class="label"><a 
 id="x1-29001r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">assumed</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">binary</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">AB</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">...</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">ga_2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29002r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">unary</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">AB</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">!1</span><span 
class="ectt-1095">,b</span><span 
class="ectt-1095">!2)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y,c</span><span 
class="ectt-1095">!2)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">...</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_1</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 615--><p class="noindent" >There are however systems where even enumerating unary cases becomes impossible. As an
alternative, one should use the kappa notation for ambiguous rules:
     <ul class="itemize1">
     <li class="itemize"><span 
class="tctt-1095">'</span><span 
class="ectt-1095">my rule</span><span 
class="tctt-1095">' </span><span 
class="ecti-1095">kappa_expression </span><!--l. 618--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">&rarr;</mo></math>
     <span 
class="ecti-1095">kappa_expression </span><span 
class="ectt-1095">@</span><!--l. 618--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>&gamma;</mi></mrow><mrow 
><mn>2</mn></mrow></msub 
><mrow ><mo 
class="MathClass-open">(</mo><mrow><msub><mrow 
><mi 
>k</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
></mrow><mo 
class="MathClass-close">)</mo></mrow></math></li></ul>
<!--l. 619--><p class="noindent" >which will tell <span 
class="ecss-1095">KaSim</span> to apply the above rule with a rate
<!--l. 619--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>&gamma;</mi></mrow><mrow 
><mn>2</mn></mrow></msub 
></math> for binary instances
and a rate <!--l. 619--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>k</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
></math>
for unary instances. The obtained model will behave exactly as a model in which the ambiguous rule
has been replaced by unambiguous reﬁnements. However the usage of such rule might <span 
class="ecti-1095">slowdown</span>
<span 
class="ecti-1095">simulation in a signiﬁcant manner </span>depending on various parameters (such as the presence of large
                                                                                  

                                                                                  
polymers in the model). We give below an example of a model utilizing binary/unary rates for
rules<span class="footnote-mark"><a 
href="Ka2.htm#fn1x4"><sup class="textsuperscript">1</sup></a></span><a 
 id="x1-29003f1"></a> .
<!--l. 621-->
<div class="lstlisting" id="listing-13"><span class="label"><a 
 id="x1-29004r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29005r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29006r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b,a</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29007r4"></a><span 
class="ecrm-0600">4</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29008r5"></a><span 
class="ecrm-0600">5</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">V</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29009r6"></a><span 
class="ecrm-0600">6</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">INF</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29010r7"></a><span 
class="ecrm-0600">7</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1.0</span><span 
class="ectt-1095">E-4</span><span 
class="ectt-1095">/</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">V</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29011r8"></a><span 
class="ecrm-0600">8</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_off</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0.1</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29012r9"></a><span 
class="ecrm-0600">9</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29013r10"></a><span 
class="ecrm-0600">10</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29014r11"></a><span 
class="ecrm-0600">11</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29015r12"></a><span 
class="ecrm-0600">12</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29016r13"></a><span 
class="ecrm-0600">13</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29017r14"></a><span 
class="ecrm-0600">14</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">..</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_off</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29018r15"></a><span 
class="ecrm-0600">15</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">..</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_off</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29019r16"></a><span 
class="ecrm-0600">16</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">..</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_off</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29020r17"></a><span 
class="ecrm-0600">17</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29021r18"></a><span 
class="ecrm-0600">18</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">n</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1000</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29022r19"></a><span 
class="ecrm-0600">19</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29023r20"></a><span 
class="ecrm-0600">20</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">n</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29024r21"></a><span 
class="ecrm-0600">21</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">10000</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">\</span><span 
class="ectt-1095">$STOP</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-29025r22"></a><span 
class="ecrm-0600">22</span></span><span 
class="ectt-1095">%def:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">dotSnapshots</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">&#x0022;</span>
</div>
<!--l. 646--><p class="noindent" >Notice at lines 10-12 the use of binary/unary notation for rules. As a result binding between
freely ﬂoating agents will occur at rate <span 
class="tctt-1095">'</span><span 
class="ectt-1095">k2</span><span 
class="tctt-1095">' </span>while binding between agents that are
part of the same complex will occur at rate <span 
class="tctt-1095">'</span><span 
class="ectt-1095">k1</span><span 
class="tctt-1095">'</span>. Line 21 contains a <span 
class="ecti-1095">perturbation </span>that
requires <span 
class="ecss-1095">KaSim</span> to stop the simulation after 10,000 events and output the list of molecular
species present in the ﬁnal mixture<a 
 id="dx1-29026"></a> as a dot ﬁle (see Section <a 
href="#x1-410006.1">6.1<!--tex4ht:ref: sec:mod --></a>) and that we give
Figure <a 
href="#x1-290271">3.1<!--tex4ht:ref: fig:species --></a>.
<!--l. 648--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-290271"></a>
                                                                                  

                                                                                  
<div class="center" 
>
<!--l. 649--><p class="noindent" >

<!--l. 650--><p class="noindent" ><img 
src="generated_img/poly.png" alt="PIC"  
width="426.79134pt" height="114.2121pt" >
<br /> <div class="caption" 
><span class="id">Figure 3.1: </span><span  
class="content">Final mixtureobtained after 10,000 events of simulation of the <span 
class="ectt-1095">poly.ka </span>model.
The inﬁnite rate for cycle closure allows one to obtain a large number of triangles.</span></div><!--tex4ht:label?: x1-290271 -->
</div>
                                                                                  

                                                                                  
<!--l. 655--><p class="noindent" ></div><hr class="endfigure">
<h3 class="sectionHead"><span class="titlemark">3.5   </span> <a 
 id="x1-300003.5"></a>Variables</h3>
<!--l. 660--><p class="noindent" >In the KF<a 
 id="dx1-30001"></a> it is also possible to declare <span 
class="ecti-1095">variables</span><a 
 id="dx1-30002"></a> with the declaration:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%var: </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">var_name</span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">  </span>(<span 
class="ecti-1095">algebraic_expression</span>)</li></ul>
<!--l. 664--><p class="noindent" >where <span 
class="ectt-1095">var_name </span>can be any string and <span 
class="ecti-1095">algebraic_expression </span>are deﬁned Table <a 
href="#x1-300036">3.6<!--tex4ht:ref: tab:alg --></a> (available
symbols for variable, constants and operators are given Table <a 
href="#x1-300047">3.7<!--tex4ht:ref: tab:operators --></a>).
<div class="table">
                                                                                  

                                                                                  
<!--l. 667--><p class="noindent" ><a 
 id="x1-300036"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.6: </span><span  
class="content">Algebraic expressions</span></div><!--tex4ht:label?: x1-300036 -->
<div class="tabular"> <table id="TBL-7" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-7-1g"><col 
id="TBL-7-1"><col 
id="TBL-7-2"><col 
id="TBL-7-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-7-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-7-1-1"  
class="td01"><span 
class="ecti-1095">algebraic_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-7-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-7-1-3"  
class="td10"> <span id="textcolor23"><!--l. 671--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi> <mo 
class="MathClass-rel">&isin;</mo> <mi 
>ℝ</mi></math></span> <!--l. 671--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo></math> <span id="textcolor24"><span 
class="ectt-1095">variable</span></span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-7-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-7-2-1"  
class="td01">                   </td><td  style="text-align:center; white-space:nowrap;" id="TBL-7-2-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-7-2-3"  
class="td10"> <!--l. 672--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo></math> <span 
class="ecti-1095">algebraic_expression </span><span id="textcolor25"><span 
class="ectt-1095">binary_op</span></span> <span 
class="ecti-1095">algebraic_expression                                                          </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-7-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-7-3-1"  
class="td01">                   </td><td  style="text-align:center; white-space:nowrap;" id="TBL-7-3-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-7-3-3"  
class="td10"> <!--l. 673--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">∣</mo></math> <span id="textcolor26"><span 
class="ectt-1095">unary_op</span></span> <span id="textcolor27"><span 
class="ectt-1095">(</span></span><span 
class="ecti-1095">algebraic_expression</span><span id="textcolor28"><span 
class="ectt-1095">)</span></span>                                                         </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-7-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-7-4-1"  
class="td01">                   </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<div class="table">
                                                                                  

                                                                                  
<!--l. 681--><p class="noindent" ><a 
 id="x1-300047"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 3.7: </span><span  
class="content">Symbol usable in algebraic expressions</span></div><!--tex4ht:label?: x1-300047 -->
<div class="tabular">
 <table id="TBL-8" class="tabular" 
cellspacing="0" cellpadding="0" rules="groups" 
><colgroup id="TBL-8-1g"><col 
id="TBL-8-1"></colgroup><colgroup id="TBL-8-2g"><col 
id="TBL-8-2"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-8-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-1-1"  
class="td01"><span id="textcolor29"><span 
class="ectt-1095">variable</span></span>                                                                      </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-1-2"  
class="td10"> Interpretation                                                                                                                                   </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-2-1"  
class="td01"><span 
class="ectt-1095">[E]                                                                            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-2-2"  
class="td10"> the total number of (productive) simulation events<a 
 id="dx1-30005"></a>                                                                                   </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-3-1"  
class="td01">                                                                               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-3-2"  
class="td10"> since the beginning of the simulation                                                                                                     </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-4-1"  
class="td01"><span 
class="ectt-1095">[E-]                                                                           </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-4-2"  
class="td10"> the total number of null events<a 
 id="dx1-30006"></a>                                                                                                             </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-5-1"  
class="td01"><span 
class="ectt-1095">[Emax]                                                                         </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-5-2"  
class="td10"> the max (productive) event limit as set by the option <span 
class="ectt-1095">-e</span>.                                                                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-6-1"  
class="td01">                                                                               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-6-2"  
class="td10"> Note that if unset <span 
class="ectt-1095">Emax</span><!--l. 692--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">=</mo> <mi 
>&infin;</mi></math></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-8-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-7-1"  
class="td01"><span 
class="ectt-1095">[T] </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-7-2"  
class="td10"> the bio-time of the simulation</td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-8-1"  
class="td01"><span 
class="ectt-1095">[Tsim]                                                                         </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-8-2"  
class="td10"> the cpu-time since the beginning of the simulation                                                                                   </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-9-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-9-1"  
class="td01"><span 
class="ectt-1095">[Tmax]                                                                         </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-9-2"  
class="td10"> the max (bio)-time limit as set by the option <span 
class="ectt-1095">-t</span>.                                                                                     </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-10-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-10-1"  
class="td01">                                                                               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-10-2"  
class="td10"> Note that if unset <span 
class="ectt-1095">Tmax</span><!--l. 695--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" > <mo 
class="MathClass-rel">=</mo> <mi 
>&infin;</mi></math></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-8-11-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-11-1"  
class="td01"><span 
class="ectt-1095">[p] </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-11-2"  
class="td10"> the number of requested plotting points set by the option <span 
class="ectt-1095">-p</span>.</td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-12-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-12-1"  
class="td01"><span 
class="tctt-1095">'</span><span 
class="ectt-1095">v</span><span 
class="tctt-1095">'                                                                            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-12-2"  
class="td10"> the value of variable <span 
class="tctt-1095">'</span><span 
class="ectt-1095">v</span><span 
class="tctt-1095">' </span>(declared using the <span 
class="ectt-1095">%var: </span>statement)                                                                   </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-13-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-13-1"  
class="td01"><span 
class="ectt-1095">|t|                                                                            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-13-2"  
class="td10"> the concentration of token <span 
class="ectt-1095">t                                                                        </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-14-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-14-1"  
class="td01"><span 
class="ectt-1095">|</span><span 
class="ecit-1095">kappa_expression</span><span 
class="ectt-1095">|                                                             </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-14-2"  
class="td10"> number of occurences of the pattern <span 
class="ecti-1095">kappa_expression                                                                         </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-15-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-15-1"  
class="td01"><span 
class="ectt-1095">INF                                                                            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-15-2"  
class="td10"> symbol for <!--l. 701--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>&infin;</mi></math>       </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-16-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-16-1"  
class="td01">                                                                               </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-17-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-17-1"  
class="td01"><span id="textcolor30"><span 
class="ectt-1095">unary/binary_op</span></span>                                                                </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-17-2"  
class="td10"> Interpretation                                                                                                                                   </td>

</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-18-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-18-1"  
class="td01"><span 
class="ectt-1095">[</span><!--l. 705--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>f</mi></math><span 
class="ectt-1095">] </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-18-2"  
class="td10"> usual mathematical functions and constants                                                                                           </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-19-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-19-1"  
class="td01">                                                                               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-19-2"  
class="td10"> with <!--l. 705--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>f</mi> <mo 
class="MathClass-rel">&isin;</mo><mrow ><mo 
class="MathClass-open">{</mo><mrow><mi 
>l</mi><mi 
>o</mi><mi 
>g</mi><mi 
>,</mi><mi 
>e</mi><mi 
>x</mi><mi 
>p</mi><mi 
>,</mi><mi 
>s</mi><mi 
>i</mi><mi 
>n</mi><mi 
>,</mi><mi 
>c</mi><mi 
>o</mi><mi 
>s</mi><mi 
>,</mi><mi 
>t</mi><mi 
>a</mi><mi 
>n</mi><mi 
>,</mi><mi 
>s</mi><mi 
>q</mi><mi 
>r</mi><mi 
>t</mi><mi 
>,</mi><mi 
>p</mi><mi 
>i</mi></mrow><mo 
class="MathClass-close">}</mo></mrow></math>          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-20-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-20-1"  
class="td01"><span 
class="ectt-1095">[int]                                                                          </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-20-2"  
class="td10"> the ﬂoor function <!--l. 706--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi> <mo 
class="MathClass-rel">&isin;</mo> <mi 
>ℝ</mi><mo 
class="MathClass-rel">↦</mo><mrow ><mo 
class="MathClass-open">&lfloor;</mo><mrow><mi 
>x</mi></mrow><mo 
class="MathClass-close">&rfloor;</mo></mrow><mo 
class="MathClass-rel">&isin;</mo> <mi 
>ℤ</mi></math>        </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-21-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-21-1"  
class="td01"><span 
class="ectt-1095">+,-,*,/,^                                                                      </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-21-2"  
class="td10"> basic mathematical operators (inﬁx notation)                                                                                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-22-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-22-1"  
class="td01"><span 
class="ectt-1095">[mod]                                                                          </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-22-2"  
class="td10"> the <span 
class="ecti-1095">modulo </span>operator (inﬁx notation)                                                                                                     </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-23-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-23-1"  
class="td01"><span 
class="ectt-1095">[max]                                                                          </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-23-2"  
class="td10"> the <span 
class="ecti-1095">maximum </span>of two values                                                                                                                 </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-24-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-24-1"  
class="td01"><span 
class="ectt-1095">[min]                                                                          </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-8-24-2"  
class="td10"> the <span 
class="ecti-1095">minimum </span>of two values                                                                                                                 </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-8-25-"><td  style="text-align:left; white-space:nowrap;" id="TBL-8-25-1"  
class="td01">                                                                               </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<!--l. 718--><p class="noindent" >For instance the declaration<a 
 id="dx1-30007"></a>s <!--l. 719-->
<div class="lstlisting" id="listing-14"><span class="label"><a 
 id="x1-30008r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">homodimer</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-30009r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">aa</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">homodimer</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">/2</span>
</div>
<!--l. 723--><p class="noindent" >deﬁne 2 variables, the ﬁrst one tracking the number of embeddings of <span 
class="ectt-1095">A(x!1),A(x!1) </span>in the
graph over time, while the second divides this value by 2: the number of automorphisms in
<span 
class="ectt-1095">A(x!1),A(x!1)</span>. Note that variables that are used in the expression of another variable must be
declared beforehand.
<!--l. 725--><p class="noindent" >It is also possible to use algebraic expressions<a 
 id="dx1-30010"></a> as kinetic rates<a 
 id="dx1-30011"></a> as in <!--l. 726-->
<div class="lstlisting" id="listing-15"><span class="label"><a 
 id="x1-30012r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_on</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1.0</span><span 
class="ectt-1095">E-6</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">molecule</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">second</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-30013r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">ab</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_on</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">/2</span>
</div>
<!--l. 731--><p class="noindent" ><span 
class="ecss-1095">KaSim</span> may output values of variables in the data ﬁle<a 
 id="dx1-30014"></a> (see option <span 
class="ectt-1095">-p </span>in Chapter <a 
href="#x1-320004">4<!--tex4ht:ref: chap:cl --></a>) using plot do:
<!--l. 732-->
<div class="lstlisting" id="listing-16"><span class="label"><a 
 id="x1-30015r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%plot:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">var_name</span><span 
class="ectt-1095">&#x2019;</span>
</div>
<!--l. 735--><p class="noindent" >One may use the shortcut:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%obs: </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">var_name</span><span 
class="tctt-1095">'  </span><span 
class="ecti-1095">algebraic_expression</span></li></ul>
<!--l. 738--><p class="noindent" >to declare a variable and at the same time require it to be outputted in the data ﬁle<a 
 id="dx1-30016"></a>.
<h3 class="sectionHead"><span class="titlemark">3.6   </span> <a 
 id="x1-310003.6"></a>Initial conditions</h3>
<a 
 id="dx1-31001"></a>
<!--l. 742--><p class="noindent" >The initial mixture<a 
 id="dx1-31002"></a> to which rules in the KF<a 
 id="dx1-31003"></a> will be applied are declared as
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%init:  </span><span 
class="ecti-1095">algebraic_expression kappa_expression</span></li></ul>
                                                                                  

                                                                                  
<!--l. 746--><p class="noindent" >or
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%init:  </span><span 
class="ecti-1095">token_name </span><span 
class="ectt-1095">&#x003C;- </span><span 
class="ecti-1095">algebraic_expression</span></li></ul>
<!--l. 752--><p class="noindent" >where <span 
class="ecti-1095">algebraic_expression </span>is evaluated before initialization of the simulation (hence all token
and kappa expression values in the expression are evaluated to 0). This will add to the initial
state of the model <span 
class="ecti-1095">mult </span>copies of the graph described by the kappa expression. Again the
DCDW convention<a 
 id="dx1-31004"></a> allows us not to write the complete interface of added agents (the
remaining sites will be completed according to the agent&#x2019;s signature<a 
 id="dx1-31005"></a>). For instance:
<!--l. 753-->
<div class="lstlisting" id="listing-17"><span class="label"><a 
 id="x1-31006r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">n</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1000</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-31007r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">n</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">y</span><span 
class="ectt-1095">\</span><span 
class="ectt-1095">intstate</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">p</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-31008r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">ca2</span><span 
class="ectt-1095">+</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003C;-</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0.39</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">mM</span>
</div>
<!--l. 758--><p class="noindent" >will add 1000 instances of <span 
class="ectt-1095">A </span>in its default state <span 
class="ectt-1095">A(x,y~u,z~0)</span>, 1000 instances of <span 
class="ectt-1095">A </span>in
state <span 
class="ectt-1095">A(x,y~p,z~0) </span>and a concentration of 0.39 mM of calcium ions. Recall that the
concentration of calcium can be observed during simulation using <span 
class="ectt-1095">|ca2+|</span>. As any other
declaration<a 
 id="dx1-31009"></a>, <span 
class="ectt-1095">%init </span>can be used multiple times, and agents will add up to the initial
state.
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 4</span><br /><a 
 id="x1-320004"></a>The command line</h2>
<h3 class="sectionHead"><span class="titlemark">4.1   </span> <a 
 id="x1-330004.1"></a>General usage</h3>
<!--l. 765--><p class="noindent" >From a terminal window, <span 
class="ecss-1095">KaSim</span> can be invoked by typing
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim file_1 ... file_n [option] </span></li></ul>
<!--l. 769--><p class="noindent" >where <span 
class="ectt-1095">file_i </span>are the input Kappa ﬁles containing the rules, initial conditions and observables
(see Chapter <a 
href="#x1-130003">3<!--tex4ht:ref: chap:kappa --></a>). Tables <a 
href="#x1-340011">4.1<!--tex4ht:ref: tab:options --></a> and <a 
href="#x1-350012">4.2<!--tex4ht:ref: tab:add-options --></a> summarize all the options that can be given to the simulator.
Basically, one speciﬁes an upper bound either in simulated or bio-time (arbitrary time unit),
or in number of events. Note that bio-time is computed using Gillespie<span 
class="tcrm-1095">'</span>s formula for
time advance (see Fig. <a 
href="#x1-50081">1.1<!--tex4ht:ref: fig:event-loop --></a>) and should not be confused with CPU-time (it<span 
class="tcrm-1095">'</span>s not even
proportional). In doubt, we recommend using a bound in number of events since the cost of one
event is bounded (in CPU time) by a constant, so the CPU-time used for simulating
<!--l. 769--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math> events is roughly
<!--l. 769--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math> times lower than that
used for simulating <!--l. 769--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi> <mo 
class="MathClass-bin">×</mo> <mi 
>n</mi></math>
events.
<!--l. 771--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">4.2   </span> <a 
 id="x1-340004.2"></a>Main options</h3>
<!--l. 773--><p class="noindent" >Table <a 
href="#x1-340011">4.1<!--tex4ht:ref: tab:options --></a> summarizes the main options that are accessible through the command line. Options
that expects an argument are preceded by a single dash, options that do not need any argument
start with a double dash. Note that the option <span 
class="ectt-1095">-p </span>speciﬁes the number of points that one
wishes to have in the ﬁnal plot. The interval at which these points will be taken is
then computed using the simulation limit deﬁned by the user using option <span 
class="ectt-1095">-t </span>or <span 
class="ectt-1095">-e</span>.
For instance requiring a simulation of 100 points during 10 time units will result in a
simulation where observables are recorded every 0.1 time units, while requiring 100
points for 1000 events will result in observable being written every 10 events. Be careful
that the <span 
class="ecti-1095">event density</span>, ie the number of events per time unit, might vary during a
simulation, and thus the two sampling methods can lead to very diﬀerent repartitions of the
instants at which observables are recorded even if they specify the same number of
observations.
<div class="table">
                                                                                  

                                                                                  
<!--l. 775--><p class="noindent" ><a 
 id="x1-340011"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 4.1: </span><span  
class="content">Command line: main options</span></div><!--tex4ht:label?: x1-340011 -->
<div class="tabular"> <table id="TBL-9" class="tabular" 
cellspacing="0" cellpadding="0" rules="groups" 
><colgroup id="TBL-9-1g"><col 
id="TBL-9-1"></colgroup><colgroup id="TBL-9-2g"><col 
id="TBL-9-2"></colgroup><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-9-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-1-1"  
class="td11"> Argument                                                                                                               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-1-2"  
class="td11"> Description                                                                                                                                                                                      </td>
</tr><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-9-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-2-1"  
class="td11"> <span 
class="ectt-1095">-e </span><!--l. 781--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>e</mi></mrow><mrow 
><mstyle mathvariant="italic"><mi 
>m</mi></mstyle><mi 
>a</mi><mi 
>x</mi></mrow></msub 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-2-2"  
class="td11"> Terminates simulation after <!--l. 781--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>e</mi></mrow><mrow 
><mstyle mathvariant="italic"><mi 
>m</mi></mstyle><mi 
>a</mi><mi 
>x</mi></mrow></msub 
> <mo 
class="MathClass-rel">&ge;</mo> <mn>0</mn></math> events                                </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-3-1"  
class="td11"> <span 
class="ectt-1095">-t </span><!--l. 782--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>t</mi></mrow><mrow 
><mstyle mathvariant="italic"><mi 
>m</mi></mstyle><mi 
>a</mi><mi 
>x</mi></mrow></msub 
></math>  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-3-2"  
class="td11"> Terminates simulation after <!--l. 782--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>t</mi></mrow><mrow 
><mstyle mathvariant="italic"><mi 
>m</mi></mstyle><mi 
>a</mi><mi 
>x</mi></mrow></msub 
> <mo 
class="MathClass-rel">&ge;</mo> <mn>0</mn><mo 
class="MathClass-punc">.</mo><mn>0</mn></math> time units                           </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-4-1"  
class="td11"> <span 
class="ectt-1095">-p </span><!--l. 783--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math> </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-4-2"  
class="td11"> Produces a data ﬁle<a 
 id="dx1-34002"></a> (default: <span 
class="ectt-1095">data.out</span>) with <!--l. 783--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi> <mo 
class="MathClass-rel">&ge;</mo> <mn>0</mn></math> data points  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-5-1"  
class="td11"> <span 
class="ectt-1095">-o </span><span 
class="ecti-1095">ﬁle                                                                                                             </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-5-2"  
class="td11"> Set the name of data ﬁle to <span 
class="ecti-1095">ﬁle                                                                                                                                                 </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-6-1"  
class="td11">                                                                                 </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-6-2"  
class="td11"> Generate an image instead of a raw ﬁle when it ends by <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">.svg</span></span></span>                                                                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-7-1"  
class="td11"> <span 
class="ectt-1095">-i </span><span 
class="ecti-1095">ﬁle                                                                                                             </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-7-2"  
class="td11"> Interpret <span 
class="ecti-1095">ﬁle </span>as an input ﬁlename                                                                                                                                                        </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-8-1"  
class="td11">                                                                                 </td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-8-2"  
class="td11"> (for compatibility with <span 
class="ecss-1095">KaSim</span>&#x003C;= 3 and ﬁlenames starting by -)                                                                                                                 </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-9-9-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-9-1"  
class="td11"> <span 
class="ectt-1095">-d </span><span 
class="ecti-1095">dir                                                                                                             </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-9-9-2"  
class="td11"> Output any produced ﬁle to the directory <span 
class="ecti-1095">dir                                                                                                                                </span></td>
</tr><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-9-10-"><td  style="text-align:left; white-space:nowrap;" id="TBL-9-10-1"  
class="td11">                                                                                 </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<h3 class="sectionHead"><span class="titlemark">4.3   </span> <a 
 id="x1-350004.3"></a>Advanced options</h3>
<!--l. 796--><p class="noindent" >Table <a 
href="#x1-350012">4.2<!--tex4ht:ref: tab:add-options --></a> summarizes the advanced options that are accessible through the command
line.
<div class="table">
                                                                                  

                                                                                  
<!--l. 798--><p class="noindent" ><a 
 id="x1-350012"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 4.2: </span><span  
class="content">Command line: advanced options</span></div><!--tex4ht:label?: x1-350012 -->
<div class="tabular"> <table id="TBL-10" class="tabular" 
cellspacing="0" cellpadding="0" rules="groups" 
><colgroup id="TBL-10-1g"><col 
id="TBL-10-1"></colgroup><colgroup id="TBL-10-2g"><col 
id="TBL-10-2"></colgroup><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-10-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-1-1"  
class="td11"> Argument                                                                                                                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-1-2"  
class="td11"> Description                                                                                                                                                                    </td>
</tr><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-10-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-2-1"  
class="td11">  <span 
class="ectt-1095">-seed </span><!--l. 804--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-2-2"  
class="td11"> Seeds the pseudo-random number generator <!--l. 804--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi> <mo 
class="MathClass-rel">&#x003E;</mo> <mn>0</mn></math>  </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-3-1"  
class="td11">  <span 
class="ectt-1095">-rescale </span><!--l. 805--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> </td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-3-2"  
class="td11"> Multiply each initial quantity by <!--l. 805--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math>              </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-4-1"  
class="td11">  <span 
class="ectt-1095">--implicit-signature                                                                  </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-4-2"  
class="td11"> Automatically deduce agent signature<a 
 id="dx1-35002"></a>s (see Chapter <a 
href="#x1-400006">6<!--tex4ht:ref: chap:advanced --></a>)                                                                                                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-5-1"  
class="td11">  <span 
class="ectt-1095">-make-sim </span><span 
class="ecti-1095">sim_ﬁle                                                                                                     </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-5-2"  
class="td11"> makes a simulation package out of the input kappa ﬁles                                                                                                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-6-1"  
class="td11">  <span 
class="ectt-1095">-load-sim </span><span 
class="ecti-1095">sim_ﬁle                                                                                                     </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-6-2"  
class="td11"> use simulation package <span 
class="ecti-1095">sim_ﬁle </span>as input                                                                                                                             </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-7-1"  
class="td11">  <span 
class="ectt-1095">--gluttony                                                                            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-7-2"  
class="td11"> simulation mode that is memory intensive                                                                                                                           </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-8-1"  
class="td11">                                                                                        </td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-8-2"  
class="td11"> but that speeds up simulation time                                                                                                                                    </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-9-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-9-1"  
class="td11">  <span 
class="ectt-1095">--batch                                                                               </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-9-2"  
class="td11"> Set non interactive mode (never halt waiting for an user                                                                                                         </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-10-10-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-10-1"  
class="td11">                                                                                        </td><td  style="text-align:left; white-space:nowrap;" id="TBL-10-10-2"  
class="td11"> action but assume default (data loosing) answer)                                                                                                                  </td>
</tr><tr 
class="hline"><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-10-11-"><td  style="text-align:left; white-space:nowrap;" id="TBL-10-11-1"  
class="td11">                                                                                        </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<h3 class="sectionHead"><span class="titlemark">4.4   </span> <a 
 id="x1-360004.4"></a>Example</h3>
<!--l. 819--><p class="noindent" >The command
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim model.ka -e 1000000 -p 1000 -o model.out</span></li></ul>
<!--l. 823--><p class="noindent" >will generate a ﬁle <span 
class="ectt-1095">model.out </span>containing the trajectories of the observables deﬁned in the kappa
ﬁle <span 
class="ectt-1095">model.ka</span>. The ﬁle <span 
class="ectt-1095">model.out </span>will contain 1000 data points (ie in this case, a measure will be
taken every 1000 events). The command
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim init.ka rules.ka obs.ka mod.ka -t 1.5 -p 1000</span></li></ul>
<!--l. 827--><p class="noindent" >will generate a ﬁle <span 
class="ectt-1095">data.out </span>(default name) containing 1000 data points of a simulation of 1.5
(arbitrary) time units of the model. Note that the input Kappa ﬁle is split in four ﬁles containing,
for instance, the initial conditions, <span 
class="ectt-1095">init.ka</span>, the rule set, <span 
class="ectt-1095">rules.ka</span>, the observables, <span 
class="ectt-1095">obs.ka</span>, and
the perturbations, <span 
class="ectt-1095">pert.ka </span>(see Chapter <a 
href="#x1-130003">3<!--tex4ht:ref: chap:kappa --></a> for details). The order in which the ﬁles are given does
not matter.
                                                                                  

                                                                                  
<!--l. 829--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 5</span><br /><a 
 id="x1-370005"></a>A simple model</h2>
<!--l. 831--><p class="noindent" >We describe below the content of a simple Kappa model and give examples of some typical
run<span class="footnote-mark"><a 
href="Ka3.htm#fn1x6"><sup class="textsuperscript">1</sup></a></span><a 
 id="x1-37001f1"></a> .
<h3 class="sectionHead"><span class="titlemark">5.1   </span> <a 
 id="x1-380005.1"></a>ABC.ka</h3>
<!--l. 834-->
<div class="lstlisting" id="listing-18"><span class="label"><a 
 id="x1-38001r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">###</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Signatures</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38002r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Declaration</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">of</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">agent</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38003r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Declaration</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">of</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38004r4"></a><span 
class="ecrm-0600">4</span></span><span 
class="ectt-1095">%agent:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Declaration</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">of</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">with</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">2</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">modifiable</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">sites</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38005r5"></a><span 
class="ecrm-0600">5</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">###</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Rules</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38006r6"></a><span 
class="ecrm-0600">6</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">on_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">binds</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38007r7"></a><span 
class="ecrm-0600">7</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">..</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">off_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">AB</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">dissociation</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38008r8"></a><span 
class="ecrm-0600">8</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">ab</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_,c</span><span 
class="ectt-1095">!2)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">!2)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">on_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">AB</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">binds</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38009r9"></a><span 
class="ecrm-0600">9</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">mod</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">mod_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">ABC</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">modifies</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38010r10"></a><span 
class="ecrm-0600">10</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">on_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">binds</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">on</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">x2</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38011r11"></a><span 
class="ecrm-0600">11</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">mod</span><span 
class="ectt-1095">␣</span><span 
class="ectt-1095">x2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">@</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">mod_rate</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">modifies</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">x2</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38012r12"></a><span 
class="ecrm-0600">12</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">###</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Variables</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38013r13"></a><span 
class="ecrm-0600">13</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">on_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1.0</span><span 
class="ectt-1095">E-4</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">molecule</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">second</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38014r14"></a><span 
class="ecrm-0600">14</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">off_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0.1</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">second</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38015r15"></a><span 
class="ecrm-0600">15</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">mod_rate</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">#</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">per</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">second</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38016r16"></a><span 
class="ecrm-0600">16</span></span><span 
class="ectt-1095">%obs:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">AB</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38017r17"></a><span 
class="ecrm-0600">17</span></span><span 
class="ectt-1095">%obs:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cuu</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38018r18"></a><span 
class="ecrm-0600">18</span></span><span 
class="ectt-1095">%obs:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpu</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38019r19"></a><span 
class="ecrm-0600">19</span></span><span 
class="ectt-1095">%obs:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,x2</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38020r20"></a><span 
class="ecrm-0600">20</span></span><span 
class="ectt-1095">#</span><span 
class="ectt-1095">###</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">Initial</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">conditions</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38021r21"></a><span 
class="ecrm-0600">21</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1000</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">()</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-38022r22"></a><span 
class="ecrm-0600">22</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">10000</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">()</span>
</div>
<!--l. 859--><p class="noindent" >Line 1-4 of this KF<a 
 id="dx1-38023"></a> contains signature<a 
 id="dx1-38024"></a> declarations<a 
 id="dx1-38025"></a><a 
 id="dx1-38026"></a>. Agents of type <span 
class="ectt-1095">C </span>have 2 sites <span 
class="ectt-1095">x1 </span>and <span 
class="ectt-1095">x2 </span>whose
internal state may be <span 
class="ectt-1095">u</span>(nphosphorylated) or <span 
class="ectt-1095">p</span>(hosphorylated). Recall that the default state of
these sites is <span 
class="ectt-1095">u </span>(the ﬁrst one). Line 8, rule <span 
class="tctt-1095">'</span><span 
class="ectt-1095">ab.c</span><span 
class="tctt-1095">' </span>binds an <span 
class="ectt-1095">A </span>connected to someone on
site <span 
class="ectt-1095">x </span>(link type <span 
class="ectt-1095">!_</span>) to a <span 
class="ectt-1095">C</span>. Note that the only rule that binds an agent to <span 
class="ectt-1095">x </span>of <span 
class="ectt-1095">A </span>is
<span 
class="tctt-1095">'</span><span 
class="ectt-1095">a.b</span><span 
class="tctt-1095">' </span>at line 6. Hence the use of <span 
class="ectt-1095">!_ </span>is a commodity and the rule could be replaced by
<!--l. 860-->
<div class="lstlisting" id="listing-19"><span class="label"><a 
 id="x1-38027r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">alt_ab</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">c</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1</span><span 
class="ectt-1095">,c</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">...</span>
</div>
<!--l. 863--><p class="noindent" >There are two main points to notice about this model: <span 
class="ectt-1095">A </span>can modify both sites of <span 
class="ectt-1095">C </span>once it is
bound to them. However, only an <span 
class="ectt-1095">A </span>bound to a <span 
class="ectt-1095">B </span>can connect on <span 
class="ectt-1095">x1 </span>and only a free <span 
class="ectt-1095">A </span>can
connect on <span 
class="ectt-1095">x2</span>. Note also that <span 
class="ectt-1095">x2 </span>is available for connection only when <span 
class="ectt-1095">x1 </span>is already
modiﬁed.
<!--l. 865--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">5.2   </span> <a 
 id="x1-390005.2"></a>Some runs</h3>
                                                                                  

                                                                                  
<!--l. 866--><p class="noindent" >We try ﬁrst a coarse simulation of <!--l. 866--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mn>0</mn><mn>0</mn><mo 
class="MathClass-punc">,</mo><mn>0</mn><mn>0</mn><mn>0</mn></math>
events (10 times the number of agents in the initial system).
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim ABC.ka -e 100000 -p 1000 -o abc.out</span></li></ul>
<!--l. 871--><p class="noindent" >Plotting the content of the <span 
class="ectt-1095">abc.out </span>ﬁle one notices that nothing of signiﬁcant interest
happen to the observables after 250s. So we can now specify a meaningful time limit by
running
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim ABC.ka -e 100000 -t 250 -p 1000 -o abc.out</span></li></ul>
<!--l. 876--><p class="noindent" >which produces the data points whose rendering is given in Fig. <a 
href="#x1-390011">5.1<!--tex4ht:ref: fig:abc --></a>. <hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-390011"></a>
                                                                                  

                                                                                  
<div class="center" 
>
<!--l. 878--><p class="noindent" >

<!--l. 879--><p class="noindent" ><img 
src="generated_img/plot-abc.png" alt="PIC"  
>
<br /> <div class="caption" 
><span class="id">Figure 5.1: </span><span  
class="content">Simulation of the ABC model: population of unmodiﬁed <span 
class="ectt-1095">C</span>s (observable <span 
class="ectt-1095">Cuu</span>
in red) drops rapidly and is replaced, in a ﬁrst step by simply modiﬁed <span 
class="ectt-1095">C</span>s (observable <span 
class="ectt-1095">Cpu</span>
in blue) which are in turn replaced by doubly modiﬁed <span 
class="ectt-1095">C</span>s (observable <span 
class="ectt-1095">Cpp </span>in red). Note
that the population of <span 
class="ectt-1095">AB </span>complexes (observable <span 
class="ectt-1095">AB </span>in black) stabilizes slightly below 400
individuals after about 20s.</span></div><!--tex4ht:label?: x1-390011 -->
</div>
                                                                                  

                                                                                  
<!--l. 883--><p class="noindent" ></div><hr class="endfigure">
<!--l. 884--><p class="noindent" >We will use this model as a running example for the next chapter, in order to illustrate various
advanced concepts.
                                                                                  

                                                                                  
<!--l. 886--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 6</span><br /><a 
 id="x1-400006"></a>Advanced concepts</h2>
<h3 class="sectionHead"><span class="titlemark">6.1   </span> <a 
 id="x1-410006.1"></a>Perturbation language</h3>
<!--l. 890--><p class="noindent" >It is possible to use variables<a 
 id="dx1-41001"></a> of the model as precondition for triggering a <span 
class="ecti-1095">perturbation</span><a 
 id="dx1-41002"></a> of the
simulation. Note that, by default, a perturbation is applied whenever its pre-condition is satisﬁed
and then discarded. Such perturbation is called <span 
class="ecti-1095">&#x0022;one shot&#x0022;</span><a 
 id="dx1-41003"></a>. It is however possible to re-apply the
same perturbation each time its pre-condition is satisﬁed and until a certain condition is met,
using the <span 
class="ectt-1095">repeat ... until </span>constructors.
<!--l. 892--><p class="noindent" >Basic perturbations are obtained using the declaration <a 
 id="dx1-41004"></a>:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%mod: </span><span 
class="ecti-1095">boolean_expression </span><span 
class="ectt-1095">do </span><span 
class="ecti-1095">eﬀect_list</span></li></ul>
<!--l. 896--><p class="noindent" >and may be applied repeatedly using:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%mod: repeat </span><span 
class="ecti-1095">boolean_expression </span><span 
class="ectt-1095">do </span><span 
class="ecti-1095">eﬀect_list </span><span 
class="ectt-1095">until </span><span 
class="ecti-1095">boolean_expression</span></li></ul>
<!--l. 900--><p class="noindent" >where <span 
class="ecti-1095">boolean_expression </span>and <span 
class="ecti-1095">eﬀect_list</span><a 
 id="dx1-41005"></a> are deﬁned by the grammar
given Table <a 
href="#x1-410071">6.1<!--tex4ht:ref: tab:pert --></a> (the operator <span 
class="ectt-1095">rel </span>can be any usual binary relation in
<!--l. 900--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">{</mo><mrow><mo 
class="MathClass-rel">&#x003C;</mo><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-rel">=</mo><mo 
class="MathClass-punc">,</mo><mo 
class="MathClass-rel">&#x003E;</mo></mrow><mo 
class="MathClass-close">}</mo></mrow></math> and
algebraic expressions<a 
 id="dx1-41006"></a> are deﬁned Table <a 
href="#x1-300036">3.6<!--tex4ht:ref: tab:alg --></a>).
<div class="table">
                                                                                  

                                                                                  
<!--l. 902--><p class="noindent" ><a 
 id="x1-410071"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 6.1: </span><span  
class="content">Perturbation expressions</span></div><!--tex4ht:label?: x1-410071 -->
<div class="tabular"> <table id="TBL-11" class="tabular" 
cellspacing="0" cellpadding="0"  
><colgroup id="TBL-11-1g"><col 
id="TBL-11-1"><col 
id="TBL-11-2"><col 
id="TBL-11-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-11-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-1-1"  
class="td01"><span 
class="ecti-1095">perturbation_expression  </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-1-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-1-3"  
class="td10"> <span id="textcolor31"><span 
class="ectt-1095">%mod:</span></span> <span 
class="ecti-1095">perturbation                                                                                                                                 </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-2-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-2-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-2-3"  
class="td10"> | <span id="textcolor32"><span 
class="ectt-1095">%mod:</span></span> <span id="textcolor33"><span 
class="ectt-1095">repeat</span></span> <span 
class="ecti-1095">perturbation </span><span id="textcolor34"><span 
class="ectt-1095">until</span></span> <span 
class="ecti-1095">boolean_expression                                                                                     </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-3-1"  
class="td01">                      </td></tr><tr  
 style="vertical-align:baseline;" id="TBL-11-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-4-1"  
class="td01"><span 
class="ecti-1095">perturbation</span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-4-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-4-3"  
class="td10"> <span 
class="ecti-1095">boolean_expression </span><span id="textcolor35"><span 
class="ectt-1095">do</span></span> <span 
class="ecti-1095">eﬀect_list                                                                                                                </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-5-1"  
class="td01">                      </td></tr><tr  
 style="vertical-align:baseline;" id="TBL-11-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-6-1"  
class="td01"><span 
class="ecti-1095">boolean_expression</span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-6-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-6-3"  
class="td10"> <span 
class="ecti-1095">algebraic_expression</span><a 
 id="dx1-41008"></a> <span id="textcolor36"><span 
class="ectt-1095">rel</span></span> <span 
class="ecti-1095">algebraic_expression                                                                                               </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-7-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-7-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-7-3"  
class="td10"> | (<span 
class="ecti-1095">boolean_expression </span><span id="textcolor37"><span 
class="ectt-1095">||</span></span> <span 
class="ecti-1095">boolean_expression</span>)                                                                                                       </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-8-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-8-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-8-3"  
class="td10"> | (<span 
class="ecti-1095">boolean_expression </span><span id="textcolor38"><span 
class="ectt-1095">&#x0026;&#x0026;</span></span> <span 
class="ecti-1095">boolean_expression</span>)                                                                                                       </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-9-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-9-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-9-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-9-3"  
class="td10"> | <span id="textcolor39"><span 
class="ectt-1095">[not]</span></span> <span 
class="ecti-1095">boolean_expression                                                                                                                       </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-10-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-10-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-10-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-10-3"  
class="td10"> | <span id="textcolor40"><span 
class="ectt-1095">[true]</span></span> | <span id="textcolor41"><span 
class="ectt-1095">[false]</span></span>                                                                                        </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-11-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-11-1"  
class="td01">                      </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-12-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-12-1"  
class="td01"><span 
class="ecti-1095">eﬀect_list                    </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-12-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-12-3"  
class="td10"> <span 
class="ecti-1095">eﬀect </span><span id="textcolor42"><span 
class="ectt-1095">;</span></span> <span 
class="ecti-1095">eﬀect_list </span>| <span 
class="ecti-1095">eﬀect                                                                                                                         </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-13-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-13-1"  
class="td01">                      </td></tr><tr  
 style="vertical-align:baseline;" id="TBL-11-14-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-14-1"  
class="td01"><span 
class="ecti-1095">eﬀect</span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-14-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-14-3"  
class="td10"> <span id="textcolor43"><span 
class="ectt-1095">$ADD</span></span> <span 
class="ecti-1095">algebraic_expression agent_expression                                                                                                  </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-15-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-15-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-15-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-15-3"  
class="td10"> | <span id="textcolor44"><span 
class="ectt-1095">$DEL</span></span> <span 
class="ecti-1095">algebraic_expression agent_expression                                                                                                </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-16-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-16-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-16-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-16-3"  
class="td10"> | <span 
class="ecti-1095">token_name </span><span id="textcolor45"><span 
class="ectt-1095">&#x003C;-</span></span> <span 
class="ecti-1095">algebraic_expression                                                                                                         </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-17-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-17-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-17-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-17-3"  
class="td10"> | <span id="textcolor46"><span 
class="ectt-1095">$SNAPSHOT</span></span> <span 
class="ecti-1095">string_expression                                                                                                                   </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-18-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-18-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-18-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-18-3"  
class="td10"> | <span id="textcolor47"><span 
class="ectt-1095">$STOP</span></span> <span 
class="ecti-1095">string_expression                                                                                                                        </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-19-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-19-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-19-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-19-3"  
class="td10"> | <span id="textcolor48"><span 
class="ectt-1095">$FLUX</span></span> <span 
class="ecti-1095">string_expression boolean                                                                                                               </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-20-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-20-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-20-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-20-3"  
class="td10"> | <span id="textcolor49"><span 
class="ectt-1095">$TRACK </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">var_name</span><span 
class="tctt-1095">'</span></span> <span 
class="ecti-1095">boolean                                                                                                                    </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-21-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-21-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-21-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-21-3"  
class="td10"> | <span id="textcolor50"><span 
class="ectt-1095">$UPDATE </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">var_name</span><span 
class="tctt-1095">'</span></span> <span 
class="ecti-1095">algebraic_expression                                                                                                  </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-22-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-22-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-22-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-22-3"  
class="td10"> | <span id="textcolor51"><span 
class="ectt-1095">$PLOTENTRY</span></span>                                                                                             </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-23-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-23-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-23-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-23-3"  
class="td10"> | <span id="textcolor52"><span 
class="ectt-1095">$PRINT</span></span> <span id="textcolor53"><span 
class="ectt-1095">&#x003C;</span></span><span 
class="ecti-1095">string_expression</span><span id="textcolor54"><span 
class="ectt-1095">&#x003E;</span></span>                                                                                </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-24-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-24-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-24-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-24-3"  
class="td10"> | <span id="textcolor55"><span 
class="ectt-1095">$PRINTF</span></span> <span 
class="ecti-1095">string_expression </span><span id="textcolor56"><span 
class="ectt-1095">&#x003C;</span></span><span 
class="ecti-1095">string_expression</span><span id="textcolor57"><span 
class="ectt-1095">&#x003E;</span></span>                                                               </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-25-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-25-1"  
class="td01">                      </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-26-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-26-1"  
class="td01"><span 
class="ecti-1095">string_expression          </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-26-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-26-3"  
class="td10"> <span id="textcolor58"><!--l. 928--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>𝜀</mi></math></span> | <span id="textcolor59"><span 
class="ectt-1095">&#x0022;string&#x0022; . </span></span> <span 
class="ecti-1095">string_expression</span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-27-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-27-1"  
class="td01">                      </td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-27-2"  
class="td11">     </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-27-3"  
class="td10"> | <span 
class="ecti-1095">algebraic_expression</span><span id="textcolor60"> <span 
class="ectt-1095">. </span></span> <span 
class="ecti-1095">string_expression                                                                                                  </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-28-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-28-1"  
class="td01">                      </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-11-29-"><td  style="text-align:left; white-space:nowrap;" id="TBL-11-29-1"  
class="td01"><span 
class="ecti-1095">boolean                       </span></td><td  style="text-align:center; white-space:nowrap;" id="TBL-11-29-2"  
class="td11"> ::=  </td><td  style="text-align:left; white-space:nowrap;" id="TBL-11-29-3"  
class="td10"> <span id="textcolor61"><span 
class="ectt-1095">[true]</span></span> | <span id="textcolor62"><span 
class="ectt-1095">[false]</span></span>                                                                                          </td></tr></table>
</div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
<!--l. 935--><p class="noindent" >The boolean expression is used as a <span 
class="ecti-1095">precondition</span><a 
 id="dx1-41009"></a> that determines when the perturbation will be
triggered, for instance a user writes <!--l. 936-->
<div class="lstlisting" id="listing-20"><span class="label"><a 
 id="x1-41010r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">([</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;10</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0026;&#x0026;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">v1</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">/</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">v2</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">...</span>
</div>
<!--l. 939--><p class="noindent" >to indicate she wishes to trigger a perturbation whenever the simulation time has passed 10 time
units and the ratio of variables <span 
class="ectt-1095">v1 </span>over <span 
class="ectt-1095">v2 </span>is above 1. Recall that the perturbations are &#x0022;one shot&#x0022;
interventions on the simulation. Possible interventions are described in the following sections
using examples.
<!--l. 941--><p class="noindent" ><span 
class="ecbx-1095">Note on time dependent preconditions: </span><br 
class="newline" />Consider a perturbation of the form:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">%mod: </span><span 
class="ecti-1095">f</span><span 
class="ectt-1095">(t)=</span><span 
class="ecti-1095">x </span><span 
class="ectt-1095">do </span><!--l. 945--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-op">&hellip;</mo><mspace width="0.3em" class="thinspace"/></math></li></ul>
<!--l. 946--><p class="noindent" >where <!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>f</mi><mrow ><mo 
class="MathClass-open">(</mo><mrow><mi 
>t</mi></mrow><mo 
class="MathClass-close">)</mo></mrow></math> is an algebraic expression
dependent on time and <!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>
an arbitrary algebraic expression. Having in mind the simulation
algorithm implemented by <span 
class="ecss-1095">KaSim</span>, at the beginning of an event loop, both
<!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>f</mi><mrow ><mo 
class="MathClass-open">(</mo><mrow><mi 
>t</mi></mrow><mo 
class="MathClass-close">)</mo></mrow></math> and
<!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math> will be
evaluated. It is very unlikely (in general with a probability equal to 0) that both values coincide.
Currently <span 
class="ecss-1095">KaSim</span> is not equipped with a solver able to detect that in the past of the current state, there
was a <!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>t</mi></math>
that made the precondition hold, unless the equation is trivial to solve. Therefore the only time
dependent precondition with an equality test that is allowed in <span 
class="ecss-1095">KaSim</span> has to be of the form
<!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mstyle mathvariant="monospace"><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>T</mi></mrow><mo 
class="MathClass-close">]</mo></mrow> <mo 
class="MathClass-rel">=</mo></mstyle><mi 
>n</mi></math> with
<!--l. 946--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi> <mo 
class="MathClass-rel">&isin;</mo> <mi 
>ℕ</mi></math>. For
instance: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]=10</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$STOP</span></span> will interrupt the simulation after exactly 10 time
units.
<h4 class="subsectionHead"><span class="titlemark">6.1.1   </span> <a 
 id="x1-420006.1.1"></a>Adding or deleting agents during a simulation</h4>
<!--l. 953--><p class="noindent" >Continuing with the ABC model, the perturbation eﬀect<a 
 id="dx1-42001"></a>: <span class="lstinline"><span 
class="ectt-1095">$ADD</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">n</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x1</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">)</span></span> will add
<!--l. 955--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi> <mo 
class="MathClass-rel">&ge;</mo> <mn>0</mn></math>
                                                                                  

                                                                                  
instances of <span 
class="ectt-1095">C </span>with <span 
class="ectt-1095">x1 </span>already in state <span 
class="ectt-1095">p </span>(and the rest of its interface in the default state as
speciﬁed line 4 of ABC.ka). Also the perturbation eﬀect<a 
 id="dx1-42002"></a>: <span class="lstinline"><span 
class="ectt-1095">$DEL</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">INF</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">B</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_</span><span 
class="ectt-1095">)</span></span> will remove <span 
class="ecti-1095">all </span><span 
class="ectt-1095">B</span>s
connected to some agent from the mixture<a 
 id="dx1-42003"></a>.
<!--l. 959--><p class="noindent" >There are various ways one can use perturbations to study more deeply a given kappa model. A
basic illustration is the use of a simple perturbation to let a system equilibrate before starting a
real simulation. For instance, as can be seen from the curve given in Fig. <a 
href="#x1-390011">5.1<!--tex4ht:ref: fig:abc --></a>, the number of AB
complexes is arbitrarily set to 0 in the initial state (all <span 
class="ectt-1095">A</span>s are disconnected from <span 
class="ectt-1095">B</span>s in the initial
mixture<a 
 id="dx1-42004"></a>). In order to avoid this, one can modify the kappa ﬁle the following way: we set the initial
concentration of <span 
class="ectt-1095">C </span>to 0 by deleting line 22. Now we introduce <span 
class="ectt-1095">C</span>s after 25 t.u using the
perturbation: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]=25</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$ADD</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">10000</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">C</span><span 
class="ectt-1095">()</span></span>
<!--l. 962--><p class="noindent" >The modiﬁed kappa ﬁle is available in the source repository, in the <span 
class="ectt-1095">model/ </span>directory (ﬁle
<span 
class="ectt-1095">abc-pert.ka</span>). Running again a simulation (a bit longer) by entering in the command
line:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim ABC-pert.ka -e 100000 -t 300 -p 1000 -o abc2.out</span></li></ul>
<!--l. 968--><p class="noindent" >one obtains the curve given in Fig. <a 
href="#x1-420051">6.1<!--tex4ht:ref: fig:abc2 --></a>.
<!--l. 970--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-420051"></a>
                                                                                  

                                                                                  
<div class="center" 
>
<!--l. 971--><p class="noindent" >

<!--l. 972--><p class="noindent" ><img 
src="generated_img/plot-abc2.png" alt="PIC"  
>
<br /> <div class="caption" 
><span class="id">Figure 6.1: </span><span  
class="content">Simulation of the ABC model with a perturbation: for t&#x003C;25s, only <span 
class="tctt-1095">'</span><span 
class="ectt-1095">a.b</span><span 
class="tctt-1095">' </span>and
<span 
class="tctt-1095">'</span><span 
class="ectt-1095">a..b</span><span 
class="tctt-1095">' </span>rules may apply. This enables the concentration of <span 
class="tctt-1095">'</span><span 
class="ectt-1095">AB</span><span 
class="tctt-1095">' </span>complexes to go to steady
state, before introducing fresh <span 
class="ectt-1095">C</span>s at t=25s.</span></div><!--tex4ht:label?: x1-420051 -->
</div>
                                                                                  

                                                                                  
<!--l. 976--><p class="noindent" ></div><hr class="endfigure">
<h4 class="subsectionHead"><span class="titlemark">6.1.2   </span> <a 
 id="x1-430006.1.2"></a>Using snapshots to deﬁne a new initial state</h4>
<!--l. 980--><p class="noindent" >In the previous example, we let the system evolve for some time without its main reactant <span 
class="ectt-1095">C </span>in
order to let other reactants go to a less arbitrary initial state. One may object that this way of
proceeding is CPU-time consuming if one has to do this at each simulation. An alternative is to
use the <span 
class="ectt-1095">$SNAPSHOT </span>primitive that allows a user to export a snapshot of the mixture<a 
 id="dx1-43001"></a>
at a given time point as a new (piece of) kappa ﬁle. For instance, the declaration<a 
 id="dx1-43002"></a>:
<span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">]/([</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]+[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">])</span><span 
class="ectt-1095">&#x003E;0</span><span 
class="ectt-1095">.9</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$SNAPSHOT</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">prefix</span><span 
class="ectt-1095">&#x0022;</span></span> will ask <span 
class="ecss-1095">KaSim</span> to export the mixture<a 
 id="dx1-43003"></a> the
ﬁrst time the percentage of null events reaches 90%. The exported ﬁle will be named
<span 
class="ectt-1095">prefix_</span><!--l. 983--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math><span 
class="ectt-1095">.ka</span>
where <!--l. 983--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>
is the event number at which the snapshot was taken. One may also use a <span 
class="ecti-1095">string_expression </span>to
construct any preﬁx using local variables. Note that one may omit to deﬁne a preﬁx and simply
type: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">]/([</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]+[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">])</span><span 
class="ectt-1095">&#x003E;0</span><span 
class="ectt-1095">.9</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$SNAPSHOT</span></span> in which case the default preﬁx <span 
class="ectt-1095">snap.ka </span>will
be used for naming snapshots. If the name already exists a counter will be appended at the end of
the ﬁle to prevent overwriting. Snapshots can be performed multiple times, for instance every
1000 events, using the declaration<a 
 id="dx1-43004"></a>: <!--l. 987-->
<div class="lstlisting" id="listing-21"><span class="label"><a 
 id="x1-43005r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">repeat</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">([</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">mod</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1000)</span><span 
class="ectt-1095">=0</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$SNAPSHOT</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">abc</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">ka</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">until</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span>
</div>
<!--l. 990--><p class="noindent" >which results in <span 
class="ecss-1095">KaSim</span> producing a snapshot every 1000 (productive) events until the simulation
ends. The perturbation <span 
class="ectt-1095">$STOP &#x0022;final_state.ka&#x0022; </span>will terminate the simulation whenever its
precondition is satisﬁed and produce a snapshot of the last mixture<a 
 id="dx1-43006"></a>. Note that instead of
producing kappa ﬁles, one may use snapshot perturbations to produce an image of the mixture<a 
 id="dx1-43007"></a> in
the dot/html format using the parameter by specifying the extention in the name skeleton
(<span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">]/([</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]+[</span><span 
class="ectt-1095">E-</span><span 
class="ectt-1095">])</span><span 
class="ectt-1095">&#x003E;0</span><span 
class="ectt-1095">.9</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$SNAPSHOT</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">‘‘</span><span 
class="ectt-1095">snap</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">dot</span></span>).
<!--l. 992--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.3   </span> <a 
 id="x1-440006.1.3"></a>Changing the value of a token</h4>
<!--l. 993--><p class="noindent" >The concentration of any token can be reset on the ﬂy using a perturbation. For instance the
declaration<a 
 id="dx1-44001"></a>: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">repeat</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(|</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">&#x003C;100</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">a</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003C;-</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">|*2)</span><span 
class="ectt-1095">until</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span></span> will double the
concentration of token <span 
class="ectt-1095">a </span>each time it gets below 100.
                                                                                  

                                                                                  
<!--l. 997--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.4   </span> <a 
 id="x1-450006.1.4"></a>Causality analysis</h4>
<!--l. 999--><p class="noindent" >In our ABC example, adding the instruction: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span></span> will
ask <span 
class="ecss-1095">KaSim</span> to turn on causality analysis<a 
 id="dx1-45001"></a> for the observable <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">' </span>since the beginning of the
simulation, and display the causal explanation of every new occurrence of <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">'</span>, until the end of
the simulation. The explanation, that we call a <span 
class="ecti-1095">causal ﬂow</span><a 
 id="dx1-45002"></a>, is a set of rule application
ordered by causality and displayed as a graph using dot format. In this graph, an edge
<span 
class="ectt-1095">r</span><!--l. 1001--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mo 
class="MathClass-rel">&rarr;</mo></math> <span 
class="ectt-1095">r</span><span 
class="tctt-1095">' </span>between two
rule applications <!--l. 1001--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mstyle 
class="text"><mtext class="texttt" mathvariant="monospace" >r</mtext></mstyle></math>
and <!--l. 1001--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mstyle 
class="text"><mtext class="texttt" mathvariant="monospace" >'r'</mtext></mstyle></math>
indicates that the ﬁrst rule application has used, in the simulation, some sites that were
modiﬁed by the application of the former. We show Fig. <a 
href="#x1-450032">6.2<!--tex4ht:ref: fig:cflow --></a> an example of such causal
ﬂow.
<!--l. 1003--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-450032"></a>
                                                                                  

                                                                                  
<div class="center" 
>
<!--l. 1004--><p class="noindent" >

<!--l. 1005--><p class="noindent" ><img 
src="generated_img/cflow.png" alt="PIC"  
>
<br /> <div class="caption" 
><span class="id">Figure 6.2: </span><span  
class="content">Causal ﬂow for the observable <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">' </span>of the ABC model. Plain arrows represent
causal dependency, dotted arrows show asymmetric conﬂict between rule occurrences. Here
the <span 
class="tctt-1095">'</span><span 
class="ectt-1095">ab.c</span><span 
class="tctt-1095">' </span>rule has to occur before the <span 
class="tctt-1095">'</span><span 
class="ectt-1095">a.b</span><span 
class="tctt-1095">' </span>rule. Red observable indicate that the last
rule allowed one to observe a new instance of <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">'</span>.</span></div><!--tex4ht:label?: x1-450032 -->
</div>
                                                                                  

                                                                                  
<!--l. 1009--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1011--><p class="noindent" >Causality analysis of the observable <span 
class="ectt-1095">Cpp </span>can be turned oﬀ at any time using a declaration<a 
 id="dx1-45004"></a> of the
form: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;25</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span></span>
<!--l. 1014--><p class="noindent" >Each time <span 
class="ecss-1095">KaSim</span> detects a new occurrence of the observable that is being tracked, it will dump
it&#x2019;s causal past as a graph using the dot format (see Fig. <a 
href="#x1-450032">6.2<!--tex4ht:ref: fig:cflow --></a> above). The name of
the ﬁle in which the causal ﬂow is stored can be set using the <span 
class="ectt-1095">%def </span>instruction (see
Section <a 
href="#x1-540006.4">6.4<!--tex4ht:ref: sec:param --></a>).
<h5 class="likesubsubsectionHead"><a 
 id="x1-460006.1.4"></a>Compressing causal ﬂows.</h5>
<!--l. 1018--><p class="noindent" >In general pure causal ﬂows<a 
 id="dx1-46001"></a> will contain a lot of information that modelers may
not wish to consider. Indeed in classical ﬂows, causality (represented by an edge
between to rule applications in the graph) is purely local. Therefore a sequence
<!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>a</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>b</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>c</mi></math> only implies that an
instance of rule <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>a</mi></math> caused
an instance of rule <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>b</mi></math>
which in turn created an instance of the observable
<!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math>. However it does
not imply that <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>a</mi></math> was
&#x0022;necessary&#x0022; for <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math> to occur
(for instance <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math> might have
been possible before <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>a</mi></math>
but not after, and <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>b</mi></math> would
be simply re-enabling <!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math>).
It is possible to tell <span 
class="ecss-1095">KaSim</span> to retain only events that are more strongly related to the
observable using two compression techniques (see Ref. <span class="cite">[<a 
href="#XDan_etal12">2</a>]</span> for formal details). Intuitively,
in a <span 
class="ecti-1095">weakly </span>compressed causal<a 
 id="dx1-46002"></a> ﬂow one has the additional property that if an event
<!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>e</mi></math>
is a (possibly indirect) cause of the observable, then preventing
<!--l. 1018--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>e</mi></math> from
occurring would have prevented the rest of the causal ﬂow to occur (ie it is not possible to
reconstruct a computation trace containing the observable with the events that remain in
the causal ﬂow). A <span 
class="ecti-1095">strongly </span>compressed causal ﬂow enjoys the same property with an
additional level of compression obtained by considering diﬀerent instances of the same
rule to be indistinguishable<a 
 id="dx1-46003"></a>. Note that causal ﬂow compressions may be memory and
computation demanding. For large systems it may be safer to start with weak compressions
only.
<!--l. 1020--><p class="noindent" >The type of compression can be set using the <span 
class="ectt-1095">%def </span>instruction (see Section <a 
href="#x1-540006.4">6.4<!--tex4ht:ref: sec:param --></a>). For instance:
                                                                                  

                                                                                  
<span class="lstinline"><span 
class="ectt-1095">%def:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">displayCompression</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">none</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">weak</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">strong</span><span 
class="ectt-1095">&#x0022;</span></span> will ask <span 
class="ecss-1095">KaSim</span> to output 3 versions of each
computed causal ﬂow, with all possible degrees of compressions. Each causal ﬂow is outputted into a ﬁle
<span 
class="ectt-1095">[filename][Type]_</span><!--l. 1022--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math><span 
class="ectt-1095">.dot</span>
where <span 
class="ectt-1095">filename </span>is the default name for causal ﬂows which can be redeﬁned using the parameter
<span 
class="ectt-1095">cflowFileName</span>, <span 
class="ectt-1095">Type </span>is the type of compression (either nothing or <span 
class="ectt-1095">Strongly</span>, or <span 
class="ectt-1095">Weakly</span>) and
<!--l. 1022--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math> is
the identiﬁer of the causal ﬂow. For each compression type a summary ﬁle, named
<span 
class="ectt-1095">[filename][Type]Summary.dat</span>, is also produced. It allows to map each compressed causal ﬂow
to the identiﬁer of its uncompressed version (row <span 
class="ectt-1095">#id</span>), together with the production time
<!--l. 1022--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>T</mi></math> and event
number <!--l. 1022--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math> at
which the observable was produced. It also contains information about the size of the causal
ﬂow.
<!--l. 1024--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.5   </span> <a 
 id="x1-470006.1.5"></a>Flux maps</h4>
<!--l. 1026--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-470013"></a>
                                                                                  

                                                                                  

<!--l. 1028--><p class="noindent" ><img 
src="generated_img/flux.png" alt="PIC"  
width="426.79134pt" height="367.48277pt" >
<br /> <div class="caption" 
><span class="id">Figure 6.3: </span><span  
class="content">Flux map of the <span 
class="ectt-1095">abc.ka </span>model, taken from t=0 to t=20 time units. The <span 
class="ectt-1095">A</span>
releasing rules <span 
class="ectt-1095">a..b </span>and <span 
class="ectt-1095">mod x2 </span>are contributing very little to the activity of <span 
class="ectt-1095">a.c </span>which is
a sign of an excess of free <span 
class="ectt-1095">A</span>s in the system at this time interval.</span></div><!--tex4ht:label?: x1-470013 -->
                                                                                  

                                                                                  
<!--l. 1031--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1033--><p class="noindent" >The <span 
class="ecti-1095">ﬂux map</span><a 
 id="dx1-47002"></a> is a powerful observation that tracks, on the ﬂy, the inﬂuence that rule applications
have on each others. It is dynamically generated and tracks eﬀective impacts (positive or
negative) a every rule application. The ﬂux map can be computed using declaration<a 
 id="dx1-47003"></a>s of the form:
<!--l. 1034-->
<div class="lstlisting" id="listing-22"><span class="label"><a 
 id="x1-47004r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$FLUX</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">flux</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">dot</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-47005r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;20</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$FLUX</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">flux</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">dot</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span>
</div>
<!--l. 1038--><p class="noindent" >The resulting <span 
class="ecti-1095">ﬂux map </span>is a graph where a positive edge between rules
<!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> and
<!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math> (in green) indicates an overall
positive contribution of <!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math>
over <!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>. Said otherwise,
the sum of <!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> applications
increased the activity<a 
 id="dx1-47006"></a> of <!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>.
Conversely, a negative edge (in red) will indicate that
<!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> had an overall negative
impact on the activity<a 
 id="dx1-47007"></a> of <!--l. 1038--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>.
Note that the importance of the ﬂux between two rules can be observed by looking at the label on
the edges that indicate the overall activity transfer (positive or negative) between the rules. The
above declaration<a 
 id="dx1-47008"></a> produce a ﬂux map that is shown Fig. <a 
href="#x1-470013">6.3<!--tex4ht:ref: fig:flux --></a>. Note that ﬂux may vary during
time, therefore the time or event limit of the simulation is of importance and will likely change
the aspect of the produced map.
<h4 class="subsectionHead"><span class="titlemark">6.1.6   </span> <a 
 id="x1-480006.1.6"></a>Updating kinetic rates on the ﬂy</h4>
<!--l. 1043--><p class="noindent" >Any variable between simple quotes can be updated during a simulation using a declaration<a 
 id="dx1-48001"></a> of the
form: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">500</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$UPDATE</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_on</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">0.0</span></span>
<!--l. 1046--><p class="noindent" >This perturbation will be applied whenever the observable <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">' </span>will become greater than
500. Its eﬀect will be to set the on rate of all binding rules to 0. Note that according
to the grammar given Table <a 
href="#x1-410071">6.1<!--tex4ht:ref: tab:pert --></a>, one may use any algebraic expression<a 
 id="dx1-48002"></a> as the new
value of the variable. For instance: <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">500</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$UPDATE</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_on</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">k_on</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">/100</span></span>
will cause the on rate of all rules to decrease a hunderd fold. Note that it is possible
to override the kinetic rate of a speciﬁc rule: in our ABC example, the declaration<a 
 id="dx1-48003"></a>:
<span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">500</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$UPDATE</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">a</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">b</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">INF</span></span> will set the kinetic rate of rule <span 
class="tctt-1095">'</span><span 
class="ectt-1095">a.b</span><span 
class="tctt-1095">'</span> to
inﬁnity.
                                                                                  

                                                                                  
<!--l. 1052--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.7   </span> <a 
 id="x1-490006.1.7"></a>Combining several eﬀects in a single perturbation</h4>
<!--l. 1053--><p class="noindent" >As an example, consider the computation of causal ﬂows between
<!--l. 1053--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>t</mi> <mo 
class="MathClass-rel">=</mo> <mn>1</mn><mn>0</mn></math> and
<!--l. 1053--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>t</mi> <mo 
class="MathClass-rel">=</mo> <mn>2</mn><mn>0</mn></math> using
the declarations: <!--l. 1054-->
<div class="lstlisting" id="listing-23"><span class="label"><a 
 id="x1-49001r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;10</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-49002r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;20</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span>
</div>
<!--l. 1059--><p class="noindent" >The above declaration will ask <span 
class="ecss-1095">KaSim</span> to analyze each new occurrence of <span 
class="tcrm-1095">'</span>Cpp<span 
class="tcrm-1095">' </span>in that time interval.
If <!--l. 1059--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>
new instances took place, then <span 
class="ecss-1095">KaSim</span> will have to compute
<!--l. 1059--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math> causal
ﬂows. One may want to bound the number of computed ﬂows to a certain value, say 10.
One may do so using the combination of perturbations and variables given below:
<!--l. 1060-->
<div class="lstlisting" id="listing-24"><span class="label"><a 
 id="x1-49003r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%var:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-49004r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;10</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">true</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$UPDATE</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-49005r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;20</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">||</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0026;&#x0026;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">9)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$TRACK</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">Cpp</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span>
</div>
<!--l. 1065--><p class="noindent" >The ﬁrst line is a declaration of an <!--l. 1065--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>
variable that is initially set to 0. Note that the second line is a perturbation that contains two
simultaneous eﬀects, the ﬁrst one triggering causality analysis and the second one updating the value
of variable <!--l. 1065--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>
to the current value of variable <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">'</span>. The last line stops causality analysis whenever time is greater
than 20 or when 10 new observables have been found (the diﬀerence between the current value of <span 
class="tctt-1095">'</span><span 
class="ectt-1095">Cpp</span><span 
class="tctt-1095">'</span>
and <!--l. 1066--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>.
<!--l. 1068--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.8   </span> <a 
 id="x1-500006.1.8"></a>Printing values during a simulation</h4>
<!--l. 1069--><p class="noindent" >The eﬀect <span 
class="ectt-1095">$PRINT &#x003C;</span><span 
class="ecit-1095">string_expression</span><span 
class="ectt-1095">&#x003E; </span>enables one to output values during a computation to
standard output, or to a speciﬁc ﬁle when using <span 
class="ectt-1095">$PRINTF</span>. For instance: <!--l. 1070-->
                                                                                  

                                                                                  
<div class="lstlisting" id="listing-25"><span class="label"><a 
 id="x1-50001r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">repeat</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">\</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-50002r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">&#x003C;0</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$PRINTF</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">token_</span><span 
class="ectt-1095">&#x0022;.[</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">].&#x0022;.</span><span 
class="ectt-1095">dat</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x003C;</span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095">Token</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">is:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">.</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">|</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">|</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">.</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">&#x0022;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">at</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">time</span><span 
class="ectt-1095">=&#x0022;.</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">T</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095">&#x003E;</span><span 
class="ectt-1095">\</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-50003r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">until</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span>
</div>
<!--l. 1075--><p class="noindent" >will ask <span 
class="ecss-1095">KaSim</span> to output the value of token <span 
class="ectt-1095">A </span>in a ﬁle
&#x0022;token_<!--l. 1075--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>.dat&#x0022;
which changes at each new productive event, each time its value gets below 0.
<!--l. 1077--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">6.1.9   </span> <a 
 id="x1-510006.1.9"></a>Add an entry in the output data</h4>
<!--l. 1078--><p class="noindent" >The eﬀect <span 
class="ectt-1095">$PLOTENTRY </span>outputs a line with the current value of observables in the data ﬁle. For
example, <span class="lstinline"><span 
class="ectt-1095">%mod:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">repeat</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">E</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">mod</span><span 
class="ectt-1095">]</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">10</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">=</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">0</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">do</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">$PLOTENTRY</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">until</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">[</span><span 
class="ectt-1095">false</span><span 
class="ectt-1095">]</span></span> will store the value
of observables every 10 productive events.
<!--l. 1082--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">6.2   </span> <a 
 id="x1-520006.2"></a>Implicit signature</h3>
<!--l. 1083--><p class="noindent" ><span 
class="ecss-1095">KaSim</span> permits users in a hurry to avoid writing agent signatures explicitly using the option
<span 
class="ectt-1095">--implicit-signature </span>of the command line. The signature is then deduced using information
gathered in the KF<a 
 id="dx1-52001"></a>. Note that it is not recommended to use the DCDW convention for
introduced agents in conjunction with the <span 
class="ectt-1095">--implicit-signature </span>option unless the default
state of all sites is mentioned in the <span 
class="ectt-1095">%init </span>declaration<a 
 id="dx1-52002"></a>s or in the rules that create
agents.
<!--l. 1085--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">6.3   </span> <a 
 id="x1-530006.3"></a>Simulation packages</h3>
<!--l. 1087--><p class="noindent" >The simulation algorithm that is implemented in <span 
class="ecss-1095">KaSim</span> requires an initialization phase whose complexity is
proportional to <!--l. 1087--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>R</mi> <mo 
class="MathClass-bin">&lowast;</mo> <mi 
>G</mi></math>
where <!--l. 1087--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>R</mi></math> is the cardinal
of the rule set and <!--l. 1087--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>G</mi></math>
the size of the initial mixture<a 
 id="dx1-53001"></a>. Thus for large systems, initialization may take a while. Whenever a
                                                                                  

                                                                                  
user wishes to run several simulations of the <span 
class="ecti-1095">same </span>kappa model, it is possible to skip this
initialization phase by creating a <span 
class="ecti-1095">simulation package</span><a 
 id="dx1-53002"></a>. For instance:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim abc.ka -t </span><!--l. 1090--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>
     <span 
class="ectt-1095">-make-sim abc.kasim</span></li></ul>
<!--l. 1091--><p class="noindent" >will generate a standard simulation of the <span 
class="ectt-1095">abc.ka </span>model, but in addition, will create the
simulation package <span 
class="ectt-1095">abc.kasim </span>(.kasim extension is not mandatory). This package is a binary
ﬁle, ie not human readable, that can be used as input of a new simulation using the
command:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSim -load-sim abc.kasim -t </span><!--l. 1094--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math></li></ul>
<!--l. 1095--><p class="noindent" >Note that this simulation is now run for <!--l. 1095--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>k</mi></math>
time units instead of <!--l. 1095--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>n</mi></math>.
Importantly, simulation packages can only be given as input to the <span 
class="ecti-1095">same </span><span 
class="ecss-1095">KaSim</span> that produced it.
As a consequence, recompiling the code, or obtaining diﬀerent binaries, will cause the simulation
package to become useless.
<!--l. 1097--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">6.4   </span> <a 
 id="x1-540006.4"></a>Simulation parameters conﬁguration</h3>
<!--l. 1099--><p class="noindent" >In the KF<a 
 id="dx1-54001"></a> (usually in a dedicated ﬁle) one may use expressions of the form:
<div class="math-display"><!--l. 1100--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="block" ><mrow 
>
                    <mi 
>%</mi><mi 
>d</mi><mi 
>e</mi><mi 
>f</mi><mi 
>:</mi> <mi 
>&#x0022;</mi><mi 
>p</mi><mi 
>a</mi><mi 
>r</mi><mi 
>a</mi><mi 
>m</mi><mi 
>e</mi><mi 
>t</mi><mi 
>e</mi><mi 
>r</mi><mi 
>_</mi><mi 
>n</mi><mi 
>a</mi><mi 
>m</mi><mi 
>e</mi><mi 
>&#x0022;</mi> <mi 
>&#x0022;</mi><mi 
>p</mi><mi 
>a</mi><mi 
>r</mi><mi 
>a</mi><mi 
>m</mi><mi 
>e</mi><mi 
>t</mi><mi 
>e</mi><mi 
>r</mi><mi 
>_</mi><mi 
>v</mi><mi 
>a</mi><mi 
>l</mi><mi 
>u</mi><mi 
>e</mi><mi 
>&#x0022;</mi>
</mrow></math></div>
<!--l. 1102--><p class="nopar" > where tunable parameters are described table <a 
href="#x1-540022">6.2<!--tex4ht:ref: tab:parameters --></a> (default values are given ﬁrst in the possible
values column). <div class="table">
                                                                                  

                                                                                  
<!--l. 1105--><p class="noindent" ><a 
 id="x1-540022"></a><hr class="float"><div class="float" 
>
                                                                                  

                                                                                  
 <div class="caption" 
><span class="id">Table 6.2: </span><span  
class="content">User deﬁned parameters</span></div><!--tex4ht:label?: x1-540022 -->
<div class="tabular"> <table id="TBL-12" class="tabular" 
cellspacing="0" cellpadding="0" rules="groups" 
><colgroup id="TBL-12-1g"><col 
id="TBL-12-1"></colgroup><colgroup id="TBL-12-2g"><col 
id="TBL-12-2"></colgroup><colgroup id="TBL-12-3g"><col 
id="TBL-12-3"></colgroup><tr  
 style="vertical-align:baseline;" id="TBL-12-1-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-1-1"  
class="td11"> parameter                    </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-1-2"  
class="td11"> possible values                    </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-1-3"  
class="td11"> description                         </td>
</tr><tr 
class="hline"><td><hr></td><td><hr></td><td><hr></td></tr><tr  
 style="vertical-align:baseline;" id="TBL-12-2-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-2-1"  
class="td11"> <span 
class="ecti-1095">Causality analysis          </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-2-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-2-3"  
class="td11">                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-3-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-3-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;displayCompression&#x0022;  </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-3-2"  
class="td11"> any combination of              </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-3-3"  
class="td11"> <span 
class="ecrm-1000">type of compression                 </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-4-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-4-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-4-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;none&#x0022;, &#x0022;strong&#x0022;, &#x0022;weak&#x0022; </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-4-3"  
class="td11">                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-5-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-5-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;cflowFileName&#x0022;       </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-5-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;cflow&#x0022;</span>, any string             </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-5-3"  
class="td11"> <span 
class="ecrm-1000">ﬁle name preﬁx for causal ﬂows  </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-6-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-6-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;showIntroEvents&#x0022;     </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-6-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;no&#x0022;, &#x0022;yes&#x0022;              </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-6-3"  
class="td11"> <span 
class="ecrm-1000">show introduction events in       </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-7-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-7-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-7-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-7-3"  
class="td11"> causal ﬂows                        </td></tr><tr  
 style="vertical-align:baseline;" id="TBL-12-8-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-8-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;dotCflows&#x0022; </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-8-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;no&#x0022;, &#x0022;yes&#x0022; </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-8-3"  
class="td11"> <span 
class="ecrm-1000">generate causal ﬂows in dot</span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-9-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-9-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-9-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-9-3"  
class="td11"> format                               </td></tr><tr  
 style="vertical-align:baseline;" id="TBL-12-10-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-10-1"  
class="td11"> <span 
class="ecti-1095">Pretty printing </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-10-2"  
class="td11"> </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-10-3"  
class="td11"></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-11-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-11-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;plotSepChar&#x0022;         </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-11-2"  
class="td11"> <span 
class="ectt-1095">&#x0022; &#x0022; </span>or any character            </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-11-3"  
class="td11"> <span 
class="ecrm-1000">separation character for plots     </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-12-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-12-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;colorDot&#x0022;            </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-12-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;no&#x0022;, &#x0022;yes&#x0022;              </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-12-3"  
class="td11"> <span 
class="ecrm-1000">use colors in dot format ﬁles      </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-13-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-13-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;progressBarSymbol&#x0022;   </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-13-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;#&#x0022; </span>or any character            </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-13-3"  
class="td11"> <span 
class="ecrm-1000">symbol for the progress bar       </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-14-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-14-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;progressBarSize&#x0022;     </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-14-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;60&#x0022; </span>or any integer              </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-14-3"  
class="td11"> <span 
class="ecrm-1000">length of the progress bar         </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-15-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-15-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-15-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-15-3"  
class="td11">                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-16-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-16-1"  
class="td11"> <span 
class="ecti-1095">Simulation options         </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-16-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-16-3"  
class="td11">                          </td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-17-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-17-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;dumpIfDeadlocked&#x0022;    </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-17-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;no&#x0022;,&#x0022;yes&#x0022;               </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-17-3"  
class="td11"> <span 
class="ecrm-1000">Snapshot when simulation         </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-18-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-18-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-18-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-18-3"  
class="td11"> <span 
class="ecrm-1000">is stalled                                </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-19-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-19-1"  
class="td11"> <span 
class="ectt-1095">&#x0022;maxConsecutiveClash&#x0022; </span></td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-19-2"  
class="td11"> <span 
class="ectt-1095">&#x0022;2&#x0022; </span>or any integer               </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-19-3"  
class="td11"> <span 
class="ecrm-1000">number of consecutive clashes    </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-20-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-20-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-20-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-20-3"  
class="td11"> <span 
class="ecrm-1000">before giving up                      </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-21-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-21-1"  
class="td11">                       </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-21-2"  
class="td11">                          </td><td  style="text-align:left; white-space:nowrap;" id="TBL-12-21-3"  
class="td11"> <span 
class="ecrm-1000">square approximation               </span></td>
</tr><tr  
 style="vertical-align:baseline;" id="TBL-12-22-"><td  style="text-align:left; white-space:nowrap;" id="TBL-12-22-1"  
class="td11">                       </td></tr></table></div>
                                                                                  

                                                                                  
</div><hr class="endfloat" />
</div>
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 7</span><br /><a 
 id="x1-550007"></a>The <span 
class="ecss-1095">KaSa</span> static analyser</h2>
<h3 class="sectionHead"><span class="titlemark">7.1   </span> <a 
 id="x1-560007.1"></a>General usage</h3>
<!--l. 1136--><p class="noindent" >From a terminal window, <span 
class="ecss-1095">KaSa</span> can be invoked by typing
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSa file_1 ... file_n [option]</span></li></ul>
<!--l. 1140--><p class="noindent" >where <span 
class="ectt-1095">file_i </span>are the input Kappa ﬁles containing the rules, initial conditions and observables
(see Chapter <a 
href="#x1-130003">3<!--tex4ht:ref: chap:kappa --></a>).
<!--l. 1142--><p class="noindent" >All the options are summarised as follows:
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-3">
</div>
<!--l. 2--><p class="nopar" >
<!--l. 1145--><p class="noindent" >Orders in option matter, since they can be used to toggle on/oﬀ some functionalities or to
assign a value to some environment variables. The options are interpreted from left to
right.
<!--l. 1148--><p class="noindent" >More options are available in the OCaml ﬁle <span 
class="ectt-1095">KaSa_rep/config/config.ml </span>and can be tuned
before compilation.
<!--l. 1150--><p class="noindent" >
<h3 class="sectionHead"><span class="titlemark">7.2   </span> <a 
 id="x1-570007.2"></a>Graphical interface</h3>
<!--l. 1152--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">7.2.1   </span> <a 
 id="x1-580007.2.1"></a>Launching the interface</h4>
<!--l. 1154--><p class="noindent" >The graphical interface can be launched by typing
     <ul class="itemize1">
     <li class="itemize"><span 
class="ectt-1095">KaSa</span></li></ul>
<!--l. 1157--><p class="noindent" >without any option.
<!--l. 1159--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-580011"></a>
                                                                                  

                                                                                  

<!--l. 1161--><p class="noindent" ><img 
src="img/kasa_0.png" alt="PIC"  
width="341.43306pt" height="215.99379pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.1: </span><span  
class="content"><span 
class="ecss-1095">KaSa</span>  graphical interface - main onglet</span></div><!--tex4ht:label?: x1-580011 -->
                                                                                  

                                                                                  
<!--l. 1164--><p class="noindent" ></div><hr class="endfigure">
<h4 class="subsectionHead"><span class="titlemark">7.2.2   </span> <a 
 id="x1-590007.2.2"></a>The areas of interests</h4>
<!--l. 1168--><p class="noindent" >There are ﬁve diﬀerent areas of importance in the graphical interface:
     <ol  class="enumerate1" >
     <li 
  class="enumerate" id="x1-59002x1">On the top left of the window, a button allows for the selection between the Normal
     and the Expert mode (other modes may be available if activated at compilation). In
     expert modes, more options are available in the graphical interface.
     </li>
     <li 
  class="enumerate" id="x1-59004x2">On the top center/right, some button allows for the selection of the onglet. There are
     currently ﬁve onglets available: <span 
class="ectt-1095">0_Actions</span>, <span 
class="ectt-1095">1_Output</span>, <span 
class="ectt-1095">2_Reachability_analysis</span>,
     <span 
class="ectt-1095">3_Influence_map</span>, <span 
class="ectt-1095">4_debugging_information</span>.
     </li>
     <li 
  class="enumerate" id="x1-59006x3">Center: The options of the selected onglet are displayed and can be tuned.
     <!--l. 1175--><p class="noindent" >Contextual help is provided when the mouse is hovered over an element.
     <!--l. 1177--><p class="noindent" >The interface will store the options that are checked or ﬁlled and the order in which
     they have been selected. When launched, the analysis interprets these options in the
     order they have been entered.
     <!--l. 1180--><p class="noindent" >Some options appear in several onglets. They denote the same option and share the
     same value.
     </li>
     <li 
  class="enumerate" id="x1-59008x4">File selector: The ﬁle selector can be used to upload as many kappa ﬁles as desired.
     The button &#x2019;<span 
class="ectt-1095">Clear</span>&#x2019; can be used to reset the selection of ﬁles.
     </li>
     <li 
  class="enumerate" id="x1-59010x5">Bottom: Some buttons are available. The button &#x2019;<span 
class="ectt-1095">Quit</span>&#x2019; can be used to leave the
     interface. The button &#x2019;<span 
class="ectt-1095">Reset to default</span>&#x2019; tune all the options to their default value.
     The button &#x2019;<span 
class="ectt-1095">Import options</span>&#x2019; can be used to restore the value of the options as saved
     during a previous session of the graphical interfaces. The button &#x2019;<span 
class="ectt-1095">Save options</span>&#x2019; can
     be used to save the value of the options for a further session. The button &#x2019;<span 
class="ectt-1095">Launch</span>
     <span 
class="ectt-1095">analyze</span>&#x2019; launch <span 
class="ecss-1095">KaSa</span> with the current options.
     <!--l. 1185--><p class="noindent" >Importantly, options are saved automatically under various occasions. Thus, it is
     possible to restore the value of the options before the last reset, before the last quit,
     or before the last analysis.</li></ol>
                                                                                  

                                                                                  
<!--l. 1189--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">7.2.3   </span> <a 
 id="x1-600007.2.3"></a>The onglet <span 
class="ectt-1095">0_Actions</span></h4>
<!--l. 1191--><p class="noindent" >The onglet <span 
class="ectt-1095">0_Actions </span>(see Fig. <a 
href="#x1-580011">7.1<!--tex4ht:ref: fig:kasa:0 --></a>) contains the main actions which can be performed.
     <ul class="itemize1">
     <li class="itemize">The button <span 
class="ectt-1095">–do-all </span>activates all the functionalities.
     </li>
     <li class="itemize">The button <span 
class="ectt-1095">–reset-all </span>inactivates all the functionalities.
     </li>
     <li class="itemize">The option <span 
class="ectt-1095">–compute-contact-map </span>can be used to (des)activate the computation of
     the contact map.
     </li>
     <li class="itemize">The option <span 
class="ectt-1095">–compute-influence-map </span>can be used to (des)activate the computation
     of the inﬂuence map.
     </li>
     <li class="itemize">The  option  <span 
class="ectt-1095">–compute-reachability-analysis </span>can  be  used  to  (des)activate  the
     computation of the reachability analysis.</li></ul>
<!--l. 1201--><p class="noindent" >
<h4 class="subsectionHead"><span class="titlemark">7.2.4   </span> <a 
 id="x1-610007.2.4"></a>The onglet <span 
class="ectt-1095">1_Output</span></h4>
<!--l. 1203--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-610012"></a>
                                                                                  

                                                                                  

<!--l. 1205--><p class="noindent" ><img 
src="img/kasa_1.png" alt="PIC"  
width="341.43306pt" height="215.99379pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.2: </span><span  
class="content"><span 
class="ecss-1095">KaSa</span>  graphical interface - main onglet</span></div><!--tex4ht:label?: x1-610012 -->
                                                                                  

                                                                                  
<!--l. 1208--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1211--><p class="noindent" >The onglet <span 
class="ectt-1095">1_Ouput </span>(see Fig. <a 
href="#x1-610012">7.2<!--tex4ht:ref: fig:kasa:1 --></a>) contains the names of the output ﬁles.
     <ul class="itemize1">
     <li class="itemize">The ﬁeld <span 
class="ectt-1095">–output-directory </span>can be used to set the repository where output ﬁle are
     written. <span 
class="ecss-1095">KaSa</span> will not create this repository, thus it has to exist.
     </li>
     <li class="itemize">The ﬁeld <span 
class="ectt-1095">–output-contact-map </span>contains the name of the ﬁle for the contact map.
     </li>
     <li class="itemize">The ﬁeld <span 
class="ectt-1095">–output-influence-map </span>contains the name of the ﬁle for the inﬂuence map.</li></ul>
<!--l. 1219--><p class="noindent" >When a ﬁle already exists, it is overwritten without any warning.
<h3 class="sectionHead"><span class="titlemark">7.3   </span> <a 
 id="x1-620007.3"></a>Reachability analysis</h3>
<!--l. 1223--><p class="noindent" >Reachability analysis aimed at detecting statically properties about the bio-molecular species that
can be formed in a model. Knowing whether, or not, a given bio-molecular species, can be formed
in a model is an undecidable problem <span class="cite">[<a 
href="#XKreyssig">13</a>]</span>. Thus, our analysis is approximate. Indeed, it computes
an over-approximation of the set of the bio-molecular species that can be reached from the initial
state of the model, by applying an unbounded number of computation steps. As formalized in <span class="cite">[<a 
href="#XDanosEtAl-VMCAI08">5</a>]</span>,
the abstraction consists in:
     <ol  class="enumerate1" >
     <li 
  class="enumerate" id="x1-62002x1">ﬁrstly, ignoring the number of occurrences of bio-molecular species (we assume that
     whenever a bio-molecular species can be formed, then it can be formed as many time
     as it could be necessary),
     </li>
     <li 
  class="enumerate" id="x1-62004x2">secondly, abstracting a bio-molecular species by the set of its local views (that is to say
     that we focus on the relationships between the states of the sites within agents, but
     we abstract away any relationships between diﬀerent agents within a bio-molecular
     species).</li></ol>
<!--l. 1230--><p class="noindent" >As an example, we consider the following model: <!--l. 1231-->
<div class="lstlisting" id="listing-26"><span class="label"><a 
 id="x1-62005r1"></a><span 
class="ecrm-0600">1</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">.</span><span 
class="ectt-1095">p</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u,y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-62006r2"></a><span 
class="ecrm-0600">2</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">dimer</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,y</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095">,A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">p,y</span><span 
class="ectt-1095">!1)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-62007r3"></a><span 
class="ecrm-0600">3</span></span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095">dead</span><span 
class="ectt-1095">&#x2019;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u,y</span><span 
class="ectt-1095">!</span><span 
class="ectt-1095">_</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">-&#x003E;</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">q,y</span><span 
class="ectt-1095">)</span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-62008r4"></a><span 
class="ecrm-0600">4</span></span><span 
class="ectt-1095"> </span><br /><span class="label"><a 
 id="x1-62009r5"></a><span 
class="ecrm-0600">5</span></span><span 
class="ectt-1095">%init:</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">1</span><span 
class="ectt-1095"> </span><span 
class="ectt-1095">A</span><span 
class="ectt-1095">(</span><span 
class="ectt-1095">x</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u,y</span><span 
class="ectt-1095">~</span><span 
class="ectt-1095">u</span><span 
class="ectt-1095">)</span>
</div>
<!--l. 1239--><p class="noindent" >Typing the following instruction:
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-4">
KaSa reachability.ka --reset-all --compute-reachability-analysis</div>
<!--l. 1242--><p class="nopar" >
<!--l. 1244--><p class="noindent" >will perform the reachability analysis on the model <span 
class="ectt-1095">reachability.ka</span>.
<!--l. 1247--><p class="noindent" >The result (eg. see Fig. <a 
href="#x1-620114">7.4<!--tex4ht:ref: fig:reachability_low --></a>) is displayed in the standard output, and it is made of three
parts:
     <ul class="itemize1">
     <li class="itemize"><span 
class="ecbx-1095">Detection of dead rules. </span>A rule is called dead, if there is no trace starting from the
     initial state in which this rule is applied. The analysis reports the list of the rules it
     has detected to be dead. Due to the over-approximation, it may happen that a dead
     rule is not discovered by the analysis. Yet, any rule that is reported as dead, is dead
     indeed.
     </li>
     <li class="itemize"><span 
class="ecbx-1095">Relational properties. </span>The analysis detects some relationships among the states
     of  the  sites  of  each  agent.  Simple  properties  are  reported  in  natural  languages.
     More complex properties are reported in extension, by enumerating the states that
     these site can take simultaneously within a given instance of an agent. Due to the
     over-approximation of the analysis, the analysis may fail in discovering a relationship.
     But each relationship that is found by the analysis, is satisﬁed.
     </li>
     <li class="itemize"><span 
class="ecbx-1095">Non-relational  properties. </span>The  analysis  detects  for  each  kind  of  site,  the  set
     of states this site can take. This set is described in natural language. Due to the
     over-approximation, the analysis reports a super-set of the set of the potential states.
     Yet, we are sure that a given site only take states within this set.</li></ul>
<!--l. 1256--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620103"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-5">
Kappa Static Analyzer (4e89051) (without Tk interface)
 <br />Analysis launched at 2016/02/27 08:34:58 (GMT+0) on
 <br />testing-worker-linux-docker-63416c9a-3348-linux-7
 <br />Parsing ../kappa/reachability.ka...
 <br />done
 <br />Compiling...
 <br />
 <br />Reachability analysis...
 <br />execution finished without any exception</div>
<!--l. 11--><p class="nopar" >
<br /><div class="caption" 
><span class="id">Figure 7.3: </span><span  
class="content">Reachability analysis of the model <span 
class="ectt-1095">reachbility.ka </span>with verbosity level “Mute”.</span></div><!--tex4ht:label?: x1-620103 -->
                                                                                  

                                                                                  
<!--l. 1260--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1261--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620114"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-6">
Kappa Static Analyzer (4e89051) (without Tk interface)
 <br />Analysis launched at 2016/02/27 08:34:58 (GMT+0) on
 <br />testing-worker-linux-docker-63416c9a-3348-linux-7
 <br />Parsing ../kappa/reachability.ka...
 <br />done
 <br />Compiling...
 <br />
 <br />Reachability analysis...
 <br />
 <br />------------------------------------------------------------
 <br />* Dead rules :
 <br />------------------------------------------------------------
 <br />rule 2: dead will never be applied.
 <br />
 <br />------------------------------------------------------------
 <br />* Dead agents :
 <br />------------------------------------------------------------
 <br />
 <br />------------------------------------------------------------
 <br />* Relational properties:
 <br />------------------------------------------------------------
 <br />In agent A, the internal state of site x is p whenever the
 <br />binding state of site y is A@y.
 <br />
 <br />------------------------------------------------------------
 <br />* Non relational properties:
 <br />------------------------------------------------------------
 <br />The binding state of site y in agent A ranges over free and
 <br />A@y.
 <br />The internal state of site y in agent A is always u.
 <br />The internal state of site x in agent A ranges over u and p.
 <br />execution finished without any exception</div>
<!--l. 34--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.4: </span><span  
class="content">Reachability analysis of the model <span 
class="ectt-1095">reachbility.ka </span>with verbosity level “Low”.</span></div><!--tex4ht:label?: x1-620114 -->
                                                                                  

                                                                                  
<!--l. 1265--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1266--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620125"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-7">
</div>
<!--l. 2--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.5: </span><span  
class="content">Reachability analysis: one rule that cannot be applied yet, according to the
bio-molecular species already constructed.</span></div><!--tex4ht:label?: x1-620125 -->
                                                                                  

                                                                                  
<!--l. 1270--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1272--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620136"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-8">
Applying rule 0: A.p:
 <br />the predcondition is satisfied
 <br /></div>
<!--l. 6--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.6: </span><span  
class="content">Reachability analysis: one rule successfully applied</span></div><!--tex4ht:label?: x1-620136 -->
                                                                                  

                                                                                  
<!--l. 1276--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1278--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620147"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-9">
Views in initial state
 <br />
 <br />
 <br />A(y~u)</div>
<!--l. 6--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.7: </span><span  
class="content">Reachability analysis: extensional description of initial states.</span></div><!--tex4ht:label?: x1-620147 -->
                                                                                  

                                                                                  
<!--l. 1282--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1284--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620158"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-10">
Applying rule 0: A.p:
 <br />the predcondition is satisfied
 <br />
 <br />rule 0: A.p is applied for the first time
 <br /></div>
<!--l. 8--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.8: </span><span  
class="content">Reachability analysis: extensional description of the new views created when
applying a rule.</span></div><!--tex4ht:label?: x1-620158 -->
                                                                                  

                                                                                  
<!--l. 1288--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1290--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-620169"></a>
                                                                                  

                                                                                  
<div class="verbatim" id="verbatim-11">
Applying rule 0: A.p:
 <br />the predcondition is satisfied
 <br />
 <br />rule 0: A.p is applied for the first time
 <br />
 <br />Updating the views for A(x~,y!)
 <br />
 <br />
 <br /></div>
<!--l. 11--><p class="nopar" >
<br /> <div class="caption" 
><span class="id">Figure 7.9: </span><span  
class="content">Reachability analysis: discovering new views force the analysis to apply some
rules again, until reaching a ﬁx-point.</span></div><!--tex4ht:label?: x1-620169 -->
                                                                                  

                                                                                  
<!--l. 1294--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1296--><p class="noindent" >The option <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span></span></span> can be used to switch on/oﬀ the translation of
properties in natural language: when the option is disabled, each relationship is described in
extension.
<!--l. 1298--><p class="noindent" >It is possible to get more details about the computation of the analysis by tuning the verbosity
level of the view analysis:
     <ul class="itemize1">
     <li class="itemize">With  the  option  <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span><span 
class="ectt-1095"> Mute</span></span></span>,  nothing  is  displayed.  Even  the
     result of the analysis is omitted (eg. see Fig. <a 
href="#x1-620103">7.3<!--tex4ht:ref: fig:reachability_mute --></a>).
     </li>
     <li class="itemize">With the option <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span><span 
class="ectt-1095"> Low</span></span></span>, only the result of the analysis is
     displayed (eg. see Fig. <a 
href="#x1-620114">7.4<!--tex4ht:ref: fig:reachability_low --></a>).
     </li>
     <li class="itemize">With the option <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span><span 
class="ectt-1095"> Medium</span></span></span>, the analysis also describes which
     rules are applied and in which order.
     <!--l. 1311--><p class="noindent" >When trying to apply a rule, the analysis may detect that the rule cannot be applied
     yet because the precondition is not satisﬁed at the current state of the iteration
     (eg. see Fig. <a 
href="#x1-620125">7.5<!--tex4ht:ref: fig:reachability_medium_ko --></a>). Otherwise, the analysis can apply the rule and update the state of
     the iteration accordingly (eg. see Fig. <a 
href="#x1-620136">7.6<!--tex4ht:ref: fig:reachability_medium_ok --></a>).
     </li>
     <li class="itemize">With the option <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span><span 
class="ectt-1095"> High</span></span></span>, the analysis also describes which
     views are discovered.
     <!--l. 1317--><p class="noindent" >In particular, at the beginning of the iteration, the analysis prompts the views that
     occur in initial state (eg. see Fig. <a 
href="#x1-620147">7.7<!--tex4ht:ref: fig:reachability_high_init --></a>). Then, each time a rule is applied successfully,
     the analysis shows which new views have been discovered (eg. see Fig. <a 
href="#x1-620158">7.8<!--tex4ht:ref: fig:reachability_high_rule --></a>).
     </li>
     <li class="itemize">When new views are discovered, then, it is necessary to apply again any rule that
     may operate over these views. With the option <span class="obeylines-h"><span class="verb"><span 
class="ectt-1095">--use-natural-language</span><span 
class="ectt-1095"> Full</span></span></span>, the
     analysis also describes which rules are awaken by the discovery of a new view (see
     Fig. <a 
href="#x1-620169">7.9<!--tex4ht:ref: fig:reachability_full --></a>).
     </li></ul>
<h3 class="sectionHead"><span class="titlemark">7.4   </span> <a 
 id="x1-630007.4"></a>Contact map</h3>
                                                                                  

                                                                                  
<!--l. 1331--><p class="noindent" >The contact map of a model is an object that may help modelers checking the consistency of the
rule set they use. The contact map is <span 
class="ecti-1095">statically </span>computed and does not depend on kinetic rates
nor initial conditions.
<!--l. 1334--><p class="noindent" >Typing the following instruction:
<!--l. 1336--><p class="noindent" ><span 
class="ectt-1095">KaSa abc.ka –reset-all –compute-contact-map</span>
<!--l. 1338--><p class="noindent" >will produce a dot format ﬁle named <span 
class="ectt-1095">contact.dot</span>. The name of the output ﬁle and the directory
can be changed to the command line options <span 
class="ectt-1095">–output-contact-map </span>and <span 
class="ectt-1095">–output-directory</span>.
The directory is assumed to exist. The ﬁle will be overwritten if it exists. All the options related
to the computation of the contact map can be accessed on the onglet <span 
class="ectt-1095">2_Reachability_analysis</span>
of the graphical interface (see Fig. <a 
href="#x1-6300110">7.10<!--tex4ht:ref: fig:kasa:2 --></a>).
<!--l. 1343--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-6300110"></a>
                                                                                  

                                                                                  

<!--l. 1345--><p class="noindent" ><img 
src="img/kasa_2.png" alt="PIC"  
width="341.43306pt" height="215.99379pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.10: </span><span  
class="content"><span 
class="ecss-1095">KaSa</span>  graphical interface - onglet <span 
class="ectt-1095">2_Reachability_analysis</span></span></div><!--tex4ht:label?: x1-6300110 -->
                                                                                  

                                                                                  
<!--l. 1348--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1351--><p class="noindent" >The contact map summarises the diﬀerent types of agent, their interface and the potential
binding between sites. It is an over approximation, thus if the contact map indicates a potential
bond, it does not mean that it is always possible to reach a state in which two sites of these
kinds are bound, but if the contact map indicates no bond between two sites, it means
that it is NOT possible to reach a state in which two sites of these kinds are bound
together.
<!--l. 1354--><p class="noindent" >The contact map for the <span 
class="ectt-1095">abc.ka </span>model deﬁned in Chapter <a 
href="#x1-370005">5<!--tex4ht:ref: chap:abc --></a> is given in
Figure <a 
href="#x1-6300211">7.11<!--tex4ht:ref: fig:abc-contact --></a>. On this map, we notice that there are three kinds of agent, namely
<!--l. 1354--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>A</mi></math>,
<!--l. 1354--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>B</mi></math>, and
<!--l. 1354--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>C</mi></math>. Agents of
kind <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>A</mi></math> have
two sites <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>
and <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math>,
that bear no internal state (they appear in yellow only), agents of kind
<!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>B</mi></math> have one
site <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math>,
that bears no internal state (they appear in yellow only), and agents of kind
<!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>C</mi></math> have two
sites <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>x</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
></math>
and <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>x</mi></mrow><mrow 
><mn>2</mn></mrow></msub 
></math>
with both a binding state and an internal state (they appear both in yellow and in green). We
notice that when a site can bear both an internal state and a binding state, they are considered as
two diﬀerent sites in the contact map. Additionally, the contact map indicates that sites
<!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math> of the agents of kind
<!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>A</mi></math> can be bound to the
site <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>x</mi></math> of an agent of
kind <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>B</mi></math> and that sites
<!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>c</mi></math> of the agents of
kind <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>A</mi></math> can be bound
to the agents of kind <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>C</mi></math>
either on the site <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>x</mi></mrow><mrow 
><mn>1</mn></mrow></msub 
></math>, or
on the site <!--l. 1355--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><msub><mrow 
><mi 
>x</mi></mrow><mrow 
><mn>2</mn></mrow></msub 
></math>.
<!--l. 1357--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-6300211"></a>
                                                                                  

                                                                                  

<!--l. 1359--><p class="noindent" ><img 
src="generated_img/abc_contact.png" alt="PIC"  
width="227.62204pt" height="143.98993pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.11: </span><span  
class="content">Contact Map for the <span 
class="ectt-1095">abc.ka </span>model deﬁned in Chapter <a 
href="#x1-370005">5<!--tex4ht:ref: chap:abc --></a></span></div><!--tex4ht:label?: x1-6300211 -->
                                                                                  

                                                                                  
<!--l. 1362--><p class="noindent" ></div><hr class="endfigure">
<h3 class="sectionHead"><span class="titlemark">7.5   </span> <a 
 id="x1-640007.5"></a>Inﬂuence map</h3>
<!--l. 1368--><p class="noindent" >The inﬂuence map of a model is an object that may help modelers checking the consistency of the
rule set they use.
<!--l. 1370--><p class="noindent" >Typing the following instruction:
<!--l. 1372--><p class="noindent" ><span 
class="ectt-1095">KaSa abc.ka –reset-all –compute-influence-map</span>
<!--l. 1374--><p class="noindent" >will produce a dot format ﬁle named <span 
class="ectt-1095">influence.dot</span>. The name of the output ﬁle and the
directory can be changed to the command line options <span 
class="ectt-1095">–output-influence-map </span>and
<span 
class="ectt-1095">–output-directory</span>. The directory is assumed to exist. The ﬁle will be overwritten if it exists. All
the options related to the computation of the inﬂuence map can be accessed on the onglet
<span 
class="ectt-1095">3_Influence_map </span>of the graphical interface (see Fig. <a 
href="#x1-6400112">7.12<!--tex4ht:ref: fig:kasa:3 --></a>).
<!--l. 1378--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-6400112"></a>
                                                                                  

                                                                                  

<!--l. 1380--><p class="noindent" ><img 
src="img/kasa_3.png" alt="PIC"  
width="341.43306pt" height="215.99379pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.12: </span><span  
class="content"><span 
class="ecss-1095">KaSa</span>  graphical interface - onglet <span 
class="ectt-1095">3_Influence_map</span></span></div><!--tex4ht:label?: x1-6400112 -->
                                                                                  

                                                                                  
<!--l. 1383--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1385--><p class="noindent" >Unlike the ﬂux map, the inﬂuence map is <span 
class="ecti-1095">statically </span>computed and does not depend on kinetic
rates nor initial conditions. It describes how rules may potentially inﬂuence each other during a
simulation. <span 
class="ecss-1095">KaSa</span> will produce a dot format ﬁle containing the inﬂuence relation over all
rules and observables of the model. The produced graph visualised using a circular
rendering<span class="footnote-mark"><a 
href="Ka4.htm#fn1x8"><sup class="textsuperscript">1</sup></a></span><a 
 id="x1-64002f1"></a> 
is given in Figure <a 
href="#x1-6400313">7.13<!--tex4ht:ref: fig:kasa-abc-im --></a>. Observables are represented as circular nodes and rules as rectangular
nodes. The labels of the nodes are either the label of the rule or of the observable
(if available), otherwise it is made of a unique identiﬁer allocated by <span 
class="ecss-1095">KaSa</span> followed
by the kappa deﬁnition of the rule/observable. Edges are decorated with the list of
embeddings (separated by a semi-colon) allowing the identiﬁcation of agents in both rules<span 
class="tcrm-1095">'</span>s
right hand sides/left hand sides. More precisely, for positive inﬂuences, the notation
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math> denotes a pair of embeddings
from the agent number <!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math>
of the origin<span 
class="tcrm-1095">'</span>s right hand side and from the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math> of the target<span 
class="tcrm-1095">'</span>s left hand
side and the notation <!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi><mo 
class="MathClass-bin">⋆</mo> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math>
denotes a pair of embeddings from an agent attached to the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math> of the
origin<span 
class="tcrm-1095">'</span>s left hand side, which have been freed by side eﬀect and from the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math>
of the target<span 
class="tcrm-1095">'</span>s left hand side; for negative inﬂuences, the notation
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math> denotes a pair of embeddings
from the agent number <!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math>
of the origin<span 
class="tcrm-1095">'</span>s left hand side and from the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math> of the target<span 
class="tcrm-1095">'</span>s left hand
side and the notation <!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi><mo 
class="MathClass-bin">⋆</mo> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math>
denotes a pair of embeddings from an agent attached to the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math> of the
origin<span 
class="tcrm-1095">'</span>s left hand side, which have been freed by side eﬀect and from the agent number
<!--l. 1387--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math> of the
target<span 
class="tcrm-1095">'</span>s left hand side; Observables have no inﬂuence, but they can be inﬂuenced by rules, if the
rule can increase or decrease their value.
<!--l. 1391--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-6400313"></a>
                                                                                  

                                                                                  

<!--l. 1393--><p class="noindent" ><img 
src="generated_img/abc_influence.png" alt="PIC"  
>
<br />  <div class="caption" 
><span class="id">Figure 7.13:   </span><span  
class="content">The   inﬂuence   map   of   the   <span 
class="ectt-1095">abc.ka  </span>model   deﬁned   in   Chapter <a 
href="#x1-370005">5<!--tex4ht:ref: chap:abc --></a>.
Edge    labels    denote    embeddings    with    the    convention    that    the    notation
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math>,
in   a   positive   inﬂuence,   denotes   a   pair   of   embeddings   from   the   agent   number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math>
of     the     origin<span 
class="tcrm-1095">'</span>s     right     hand     side     and     from     the     agent     number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math>
of the target<span 
class="tcrm-1095">'</span>s left hand side; the notation <!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math>,
in   negative   inﬂuence,   denotes   a   pair   of   embeddings   from   the   agent   number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math>
of     the     origin<span 
class="tcrm-1095">'</span>s     left     hand     side     and     from     the     agent     number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math>
of the target<span 
class="tcrm-1095">'</span>s left hand side; the notation <!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mrow ><mo 
class="MathClass-open">[</mo><mrow><mi 
>i</mi><mo 
class="MathClass-bin">⋆</mo> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>j</mi></mrow><mo 
class="MathClass-close">]</mo></mrow></math>,
whatever     the     inﬂuence     is     positive     of     negative,     denotes     a     pair
of     embeddings     from     an     agent     attached     to     the     agent     number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>i</mi></math>
of the origin<span 
class="tcrm-1095">'</span>s left hand side, which have been freed by side eﬀect and from the agent number
<!--l. 1397--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>j</mi></math>
of the target<span 
class="tcrm-1095">'</span>s left hand side. </span></div><!--tex4ht:label?: x1-6400313 -->
                                                                                  

                                                                                  
<!--l. 1399--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1401--><p class="noindent" >More formally, consider the rules <!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi> <mo 
class="MathClass-punc">:</mo> <mi 
>L</mi> <mo 
class="MathClass-rel">&rarr;</mo> <mi 
>R</mi></math>
and <!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi> <mo 
class="MathClass-punc">:</mo> <msup><mrow 
><mi 
>L</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msup 
><mo 
class="MathClass-rel">&rarr;</mo> <msup><mrow 
><mi 
>R</mi></mrow><mrow 
><mi 
>&prime;</mi></mrow></msup 
></math>.
One wishes to know whether it is possible that the application of rule
<!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> over a graph
<!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>G</mi></math> creates a new instance
of rule <!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math> (which is
called a positive inﬂuence and that is described by green arrows in the inﬂuence map), or destroy a previous
instance of rule <!--l. 1401--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>
(which is called negative inﬂuence and that is described by red arrows in the inﬂuence map). In
Fig. <a 
href="#x1-6400414">7.14<!--tex4ht:ref: fig:imbis --></a>, we illustrate the construction of positive inﬂuences due to overlap of the left hand side
of a rule and the right hand side of another rule on some sites that are modiﬁed by the former
one.
<!--l. 1404--><p class="noindent" ><hr class="figure"><div class="figure" 
>
                                                                                  

                                                                                  
<a 
 id="x1-6400414"></a>
                                                                                  

                                                                                  

<!--l. 1406--><p class="noindent" ><img 
src="img/im.png" alt="PIC"  
width="227.62204pt" height="117.69789pt" >
<br /> <div class="caption" 
><span class="id">Figure 7.14: </span><span  
class="content">Computation of the inﬂuence of the top rule on the rule below: the right hand
side of the ﬁrst rules embeds in a common term with the left hand side of the second rule.
It results that the ﬁrst rule has a positive inﬂuence on the second.</span></div><!--tex4ht:label?: x1-6400414 -->
                                                                                  

                                                                                  
<!--l. 1409--><p class="noindent" ></div><hr class="endfigure">
<!--l. 1411--><p class="noindent" >The current implementation has the following limitations:
     <ul class="itemize1">
     <li class="itemize">Currently, only observables that are deﬁned as patterns are taken into account.
     </li>
     <li class="itemize">Not atomic observables which are deﬁned as algebraic expressions are not taken into
     account yet. The observables are ignored.
     </li>
     <li class="itemize">The inﬂuence map does not take into account indirect inﬂuences due to perturbations
     (which could arises when the application of a rule triggers a perturbation which would
     create some agents or increase/decrease the value of some variables).
     </li>
     <li class="itemize">Token are not taken into yet. They are currently ignored.
     </li>
     <li class="itemize">Positive/negative inﬂuence of time is not taken into account either.</li></ul>
<!--l. 1420--><p class="noindent" >Lastly, KaSa computes an over-approximation of the inﬂuence map. They may show an inﬂuence
despite the fact that there can be no actual one. But if it shows no inﬂuence it means that either
there are NO such inﬂuence, or that we are in a case that is not covered yet as itemised
previously.
                                                                                  

                                                                                  
<!--l. 1422--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="chapterHead"><span class="titlemark">Chapter 8</span><br /><a 
 id="x1-650008"></a>Frequently asked questions</h2>
<h3 class="likesectionHead"><a 
 id="x1-660008"></a>Simulation hangs after a while</h3>
<!--l. 1424--><p class="noindent" >If the progress bar seems stalled, it does not necessarily mean that the simulation is blocked. In
particular when a simulation is triggered with a <span 
class="ecti-1095">time </span>limit (<span 
class="ectt-1095">-t </span>option of the command
line) it might only indicate that the bio clock is stalled while computation events still
occur. Recall that the average (bio) time one has to wait in order to apply a rule is
<!--l. 1424--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mn>1</mn><mo 
class="MathClass-bin">∕</mo><mi 
>A</mi></math>, where
<!--l. 1424--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>A</mi></math> is the
sum of all the rule activities (which is equal to the number of instances that a rule has, times its
kinetic rate). Whenever the number of occurrences of a rule grows too fast (if new agents are
created during the simulation for instance), or if the kinetic rate of a rule is deﬁned by a function
that grows rapidly, the average time increment might tend to 0 and if it remains so for a
while, it will block the progress bar whose advance is proportional to the bio time
<span 
class="ectt-1095">[T]</span>.
<!--l. 1426--><p class="noindent" >In order to make sure that <span 
class="ecss-1095">KaSim</span> is not incorrectly blocked you may wish to plot the
event clock against time clock using the observable <span 
class="ectt-1095">%obs: </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">events</span><span 
class="tctt-1095">' </span><span 
class="ectt-1095">[E] </span>or run the
simulation using an event limit (<span 
class="ectt-1095">-e </span>option of the command line) instead of a time
limit.
<!--l. 1428--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-670008"></a>What do null events mean, why do I have any?</h3>
<!--l. 1430--><p class="noindent" >Null events<a 
 id="dx1-67001"></a> is a way for <span 
class="ecss-1095">KaSim</span> to compensate for some over approximation it is doing, in order
deal with large simulations more eﬃciently. They usually do not impact signiﬁcantly the
performances of the simulator, unless the model contains rules using the special notation to deal
with ambiguous molecularity (see Section <a 
href="#x1-290003.4.4">3.4.4<!--tex4ht:ref: sec:ambiguous --></a>). With pure Kappa rules, the ratio
<!--l. 1430--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> of null
event over productive ones (that you can track using the observable <span 
class="ectt-1095">%obs: </span><span 
class="tctt-1095">'</span><span 
class="ectt-1095">r</span><span 
class="tctt-1095">' </span><span 
class="ectt-1095">[E-]/[E]</span>) should
tend to 0 when models have a lot of agents.
<!--l. 1432--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-680008"></a>No data points are generated</h3>
                                                                                  

                                                                                  
<!--l. 1433--><p class="noindent" >Make sure you have <span 
class="ectt-1095">%obs </span>or <span 
class="ectt-1095">%plot </span>instructions in your KF<a 
 id="dx1-68001"></a>. Also make sure to use the <span 
class="ectt-1095">-p</span>
option in the command line to tell KaSim how many points you wish to have on your
curves.
<!--l. 1435--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-690008"></a>Too many instances of an observable</h3>
<!--l. 1436--><p class="noindent" >The value of a kappa expression <!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math>
is equal to the number of embeddings<a 
 id="dx1-69001"></a> it has in the current mixture<a 
 id="dx1-69002"></a>
<!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi></math>. Embeddings are
maps from agents in <!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math>
to agents in <!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi></math>. If
<!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math> has symmetries then
every permutation of <!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math>
will be counted as a new embedding. For instance let
<!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi> <mo 
class="MathClass-rel">=</mo></math><span 
class="ectt-1095">A(x!1),A(x!1) </span>and let
<!--l. 1436--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi> <mo 
class="MathClass-rel">=</mo></math><span 
class="ectt-1095">A(x!1,y~p),A(x!1,y~u)</span>.
<span 
class="ecss-1095">KaSim</span> will count two instances of <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math>
in <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi></math>: the one mapping
the ﬁrst <span 
class="ectt-1095">A </span>of <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math> to the
ﬁrst <span 
class="ectt-1095">A </span>of <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi></math> and the one
mapping the ﬁrst <span 
class="ectt-1095">A </span>of <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>E</mi></math> to
the second <span 
class="ectt-1095">A </span>of <!--l. 1437--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>M</mi></math>.
<!--l. 1439--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-700008"></a>The computed inﬂuence map is incorrect, it misses some activation or has too much of
them</h3>
<!--l. 1440--><p class="noindent" >The inﬂuence map<a 
 id="dx1-70001"></a> computed by <span 
class="ecss-1095">KaSim</span> contains relations that are computed on side
eﬀect free rules only. It is likely that a missing activation is due to a side eﬀect that
is not taken into account. If the inﬂuence map shows an activation between rule
<!--l. 1440--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> and
<!--l. 1440--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>
that is never possible with a given model, just remember that activation
computation implies that <span 
class="ecti-1095">there exists </span>a context in which applying rule
<!--l. 1440--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>r</mi></math> will create a new
                                                                                  

                                                                                  
instance of rule <!--l. 1440--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mi 
>s</mi></math>.
This context might simply never be realized with the given rules or initial conditions.
<!--l. 1442--><p class="noindent" >
<h3 class="likesectionHead"><a 
 id="x1-710008"></a>Value <span 
class="ectt-1095">nan </span>in the data ﬁle at the end of the simulation</h3>
<!--l. 1443--><p class="noindent" >The value <span 
class="ectt-1095">nan </span>means &#x0022;Not a Number&#x0022;. It is generated when a plotted variable is inﬁnite. Make
sure this variable is not divided by zero at some point.
                                                                                  

                                                                                  
<!--l. 1--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="likechapterHead"><a 
 id="x1-720008"></a>Bibliography</h2>
    <div class="thebibliography">
    <p class="bibitem" ><span class="biblabel">
  [1]<span class="bibsp">   </span></span><a 
 id="XFeret-MFPSXXVII"></a>Ferdinanda  Camporesi  and  Jérôme  Feret.    Formal  reduction  of  rule-based
    models.  In <span 
class="ecti-1095">Postproceedings of the Twenty-seventh Conference on the Mathematical</span>
    <span 
class="ecti-1095">Foundations of Programming Semantics, MFPS XXVII</span>,  volume  276C  of  <span 
class="ecti-1095">Electonic</span>
    <span 
class="ecti-1095">Notes in Theoretical Computer Science</span>, pages 31–61, Pittsburg, USA, 25–28 May 2011.
    Elsevier Science Publishers.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [2]<span class="bibsp">   </span></span><a 
 id="XDan_etal12"></a>Vincent  Danos,  Jérôme  Feret,  Walter  Fontana,  Russell  Harmer,  Jonathan
    Hayman,  Jean  Krivine,  Chris  Thompson-Walsh,  and  Glynn  Winskel.    Graphs,
    rewriting  and  pathway  reconstruction  for  rule-based  models.   In  Schloss  Dagstuhl
    Leibniz-Zentrum fuer Informatik, editor, <span 
class="ecti-1095">FSTTCS 2012 - IARCS Annual Conference</span>
    <span 
class="ecti-1095">on Foundations of Software Technology and Theoretical Computer Science</span>, volume 18
    of <span 
class="ecti-1095">LIPIcs</span>, pages 276–288, 2012.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [3]<span class="bibsp">   </span></span><a 
 id="XDanosEtAl-LICS2010"></a>Vincent  Danos,  Jérôme  Feret,  Walter  Fontana,  Russell  Harmer,  and  Jean
    Krivine.    Abstracting  the  diﬀerential  semantics  of  rule-based  models:  exact  and
    automated   model   reduction.      In   Jean-Pierre   Jouannaud,   editor,   <span 
class="ecti-1095">Proceedings</span>
    <span 
class="ecti-1095">of  the  Twenty-Fifth  Annual  IEEE  Symposium  on  Logic  in  Computer  Science,</span>
    <span 
class="ecti-1095">LICS</span><!--l. 27--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mspace width="0.3em" class="thinspace"/></math><span 
class="ecti-1095">&#x2019;2010</span>,
    volume 0, pages 362–381, Edinburgh, UK, 11–14 July 2010. IEEE Computer Society.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [4]<span class="bibsp">   </span></span><a 
 id="XDan_etal07b"></a>Vincent  Danos,  Jérome  Féret,  Walter  Fontana,  and  Jean  Krivine.   Scalable
                                                                                  

                                                                                  
    simulation of cellular signaling networks. In <span 
class="ecti-1095">Proc. APLAS&#x2019;07</span>, volume 4807 of <span 
class="ecti-1095">LNCS</span>,
    pages 139–157, 2007.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [5]<span class="bibsp">   </span></span><a 
 id="XDanosEtAl-VMCAI08"></a>Vincent   Danos,   Jérôme   Feret,   Walter   Fontana,   and   Jean   Krivine.
    Abstract  interpretation  of  cellular  signalling  networks.     In  Francesco  Logozzo,
    Doron A. Peled,    and    Lenore D. Zuck,    editors,    <span 
class="ecti-1095">Proceedings   of   the   Ninth</span>
    <span 
class="ecti-1095">International Conference on Veriﬁcation, Model Checking and Abstract Interpretation,</span>
    <span 
class="ecti-1095">VMCAI</span><!--l. 41--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mspace width="0.3em" class="thinspace"/></math><span 
class="ecti-1095">&#x2019;2008</span>,
    volume 4905 of <span 
class="ecti-1095">Lecture Notes in Computer Science</span>, pages 83–97, San Francisco, USA,
    7–9 January 2008. Springer, Berlin, Germany.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [6]<span class="bibsp">   </span></span><a 
 id="XDan_etal07a"></a>Vincent Danos, Jérôme Feret, Walter Fontanta, Russ Harmer, and Jean Krivine.
    Rule based modeling of biological signaling.  In Luís Caires and Vasco Thudichum
    Vasconcelos,  editors,  <span 
class="ecti-1095">Proceedings of CONCUR 2007</span>,  volume  4703  of  <span 
class="ecti-1095">LNCS</span>,  pages
    17–41. Springer, 2007.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [7]<span class="bibsp">   </span></span><a 
 id="XDanLan04"></a>Vincent  Danos  and  Cosimo  Laneve.    Formal  molecular  biology.    <span 
class="ecti-1095">Theoretical</span>
    <span 
class="ecti-1095">Computer Science</span>, 325, 2004.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [8]<span class="bibsp">   </span></span><a 
 id="XFae_etal05"></a>James R.  Faeder,  Mickael L.  Blinov,  and  William S.  Hlavacek.    Rule  based
    modeling of biochemical networks. <span 
class="ecti-1095">Complexity</span>, pages 22–41, 2005.
    </p>
    <p class="bibitem" ><span class="biblabel">
  [9]<span class="bibsp">   </span></span><a 
 id="XFeret-ICCMSE2007"></a>J. Feret.          Reachability    analysis    of    biological    signalling    pathways
    by   abstract   interpretation.        In   T.E. Simos,   editor,   <span 
class="ecti-1095">Proceedings   of   the</span>
    <span 
class="ecti-1095">International  Conference  of  Computational  Methods  in  Sciences  and  Engineering,</span>
    <span 
class="ecti-1095">ICCMSE</span><!--l. 69--><math 
 xmlns="http://www.w3.org/1998/Math/MathML"  
display="inline" ><mspace width="0.3em" class="thinspace"/></math><span 
class="ecti-1095">&#x2019;2007,</span>
    <span 
class="ecti-1095">Corfu,  Greece</span>,   number   963.(2)   in   American   Institute   of   Physics   Conference
    Proceedings, pages 619–622, Corfu, Greece, 25–30 September 2007. American Institute
    of Physics.
    </p>
                                                                                  

                                                                                  
    <p class="bibitem" ><span class="biblabel">
 [10]<span class="bibsp">   </span></span><a 
 id="XFeret-et-al-pnas2009"></a>Jérôme Feret, Vincent Danos, Jean Krivine, Russ Harmer, and Walter Fontana.
    Internal coarse-graining of molecular systems. <span 
class="ecti-1095">Proceedings of the National Academy of</span>
    <span 
class="ecti-1095">Sciences of the United States of America</span>, April 3 2009.
    </p>
    <p class="bibitem" ><span class="biblabel">
 [11]<span class="bibsp">   </span></span><a 
 id="XGil76"></a>Daniel T. Gillespie.  A general method for numerically simulating the stochastic
    time  evolution  of  coupled  chemical  reactions.   <span 
class="ecti-1095">Journal  of  Computational  Physics</span>,
    22(4):403–434, 1976.
    </p>
    <p class="bibitem" ><span class="biblabel">
 [12]<span class="bibsp">   </span></span><a 
 id="XGil77"></a>Daniel T. Gillespie.  Exact stochastic simulation of coupled chemical reactions.
    <span 
class="ecti-1095">Journal of Physical Chemistry</span>, 81(25):2340–2361, 1977.
    </p>
    <p class="bibitem" ><span class="biblabel">
 [13]<span class="bibsp">   </span></span><a 
 id="XKreyssig"></a>Peter Kreyßig.  <span 
class="ecti-1095">Chemical Organisation Theory Beyond Classical Models: Discrete</span>
    <span 
class="ecti-1095">Dynamics and Rule-based Models</span>. PhD thesis, 2015.
</p>
    </div>
                                                                                  

                                                                                  
<!--l. 1--><p class="noindent" >
                                                                                  

                                                                                  
<h2 class="likechapterHead"><a 
 id="x1-730008"></a>Index</h2>
<div class="theindex"><span class="index-item">activity, 8, 21, 42 <br /></span>
<span class="index-item">agent signature, 15, 16, 19, 26, 28, 32 <br /></span>
<span class="index-item">agents, 15 <br /></span>
<span class="index-item">algebraic expression, 18 <br /></span>
<span class="index-item">algebraic expression, 21, 26, 35, 42 <br /></span>
<p class="theindex">
<span class="index-item">bi-directional rule, 18 <br /></span>
<span class="index-item">boolean expression, 36 <br /></span>
</p><p class="theindex">
<span class="index-item">causal ﬂow, 39, 40 <br /></span>
<span class="index-item">causality, 39 <br /></span>
<span class="index-item">comments, 15 <br /></span>
</p><p class="theindex">
<span class="index-item">data ﬁle, 26, 28, 62 <br /></span>
<span class="index-item">declaration, 15, 18, 21, 24, 26, 32, 35, 38, 39, 42, 43 <br /></span>
<span class="index-item">default state, 19 <br /></span>
<span class="index-item">don&#x2019;t care don&#x2019;t write, 17, 19, 26 <br /></span>
</p><p class="theindex">
<span class="index-item">eﬀect, 35, 37 <br /></span>
<span class="index-item">embedding, 62 <br /></span>
<span class="index-item">event, 8, 25 <br /></span>
</p><p class="theindex">
<span class="index-item">ﬂux map, 40 <br /></span>
                                                                                  

                                                                                  
</p><p class="theindex">
<span class="index-item">graph, 8 <br /></span>
</p><p class="theindex">
<span class="index-item">hybrid rules, 19, 21 <br /></span>
</p><p class="theindex">
<span class="index-item">inﬂuence map, 62 <br /></span>
<span class="index-item">initial condition, 15, 26 <br /></span>
<span class="index-item">internal state, 16 <br /></span>
</p><p class="theindex">
<span class="index-item">kappa expressions, 18 <br /></span>
<span class="index-item">kappa ﬁle, 15, 16, 18, 24, 26, 32, 43, 44, 62 <br /></span>
<span class="index-item">kinetic rate, 21, 26 <br /></span>
<span class="index-subitem">    deterministic rate constant, 21 <br /></span>
<span class="index-subitem">    stochastic rate constant, 21 <br /></span>
</p><p class="theindex">
<span class="index-item">left hand side, 18 <br /></span>
<span class="index-item">link type, 18 <br /></span>
<span class="index-item">longest preﬁx convention, 20 <br /></span>
</p><p class="theindex">
<span class="index-item">mixture, 8, 20, 24, 26, 37–39, 44, 62 <br /></span>
</p><p class="theindex">
<span class="index-item">null event, 25, 61 <br /></span>
</p><p class="theindex">
<span class="index-item">perturbation, 15, 35 <br /></span>
<span class="index-subitem">    one shot, 35 <br /></span>
<span class="index-item">precondition, 35 <br /></span>
<span class="index-item">pure rule, 18, 19 <br /></span>
</p><p class="theindex">
<span class="index-item">rate, 8, 18 <br /></span>
                                                                                  

                                                                                  
<span class="index-item">right hand side, 18 <br /></span>
<span class="index-item">rule, 15, 18 <br /></span>
</p><p class="theindex">
<span class="index-item">semi-link, 18 <br /></span>
<span class="index-item">side eﬀect, 20 <br /></span>
<span class="index-item">signature, 32 <br /></span>
<span class="index-item">simulation package, 44 <br /></span>
<span class="index-item">strong compression, 40 <br /></span>
</p><p class="theindex">
<span class="index-item">tokens, 15 <br /></span>
</p><p class="theindex">
<span class="index-item">variable, 15, 21, 24, 35 <br /></span>
</p><p class="theindex">
<span class="index-item">weak compression, 40 <br /></span>
</p></div>
 
</body> 
</html>
                                                                                  


